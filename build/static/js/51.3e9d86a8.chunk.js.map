{"version":3,"sources":["components/custom/tabs/index.tsx","modules/smart-exposure/api.tsx","components/custom/tabs/s.module.scss","modules/smart-exposure/contracts/seEPoolHelperContract.ts","modules/smart-exposure/contracts/seEPoolPeripheryContract.ts","modules/smart-exposure/providers/se-pools-provider.tsx","modules/smart-exposure/contracts/seEPoolContract.ts","modules/smart-exposure/views/pool-actions-view/index.tsx","modules/smart-exposure/index.tsx"],"names":["PeriodTabsKey","NavTabs","className","tabs","shadows","cn","s","style","map","idx","children","restTab","to","tab","activeClassName","active","rel","target","HorizontalMenu","rest","horizontalMenu","Tabs","props","variation","activeKey","size","elasticTabs","id","onClick","tabRest","small","type","PortfolioPeriodTabsKey","periodTabs","day","week","month","PeriodChartTabs","portfolioPeriodTabs","PortfolioPeriodChartTabs","Context","createContext","InvariantContext","useSeAPI","useContext","useFetchSePools","baseUrl","config","useConfig","url","URL","api","useFetch","transform","data","SeAPIProvider","value","fetchPools","fetch","toString","then","processResponse","result","fetchTranches","poolAddress","query","queryfy","fetchTranche","trancheAddress","fetchETokenPrice","windowFilter","window","item","eTokenPrice","Number","fetchRatioDeviation","deviation","fetchTrancheLiquidity","tokenALiquidity","tokenBLiquidity","fetchTransactions","page","limit","accountAddress","eTokenAddress","transactionType","fetchPortfolioValue","response","portfolioValueSE","Provider","module","exports","SeEPoolHelperContract","address","createAbiItem","ePoolAddress","amountA","this","call","BigNumber","amountB","amount","Web3Contract","SeEPoolPeripheryContract","deltaA","deltaB","rChange","maxAmountA","deadline","account","send","from","Promise","reject","maxAmountB","minAmountA","minAmountB","useSEPools","SEPoolsProvider","walletCtx","useWallet","ePoolPeripheryContract","useContract","contracts","se","ePoolPeriphery","ePoolHelperContract","ePoolHelper","useEffect","setProvider","provider","setAccount","useEPoolContract","useReload","reload","contract","SeEPoolContract","loadCommon","catch","Error","AbiTupleArray","feeRate","rebalanceMinDeltaA","rebalanceInterval","lastRebalance","rate","tranches","tranche","cumulativeFeeA","cumulativeFeeB","a","batch","method","eToken","sFactorE","reserveA","reserveB","targetRatio","emit","UPDATE_DATA","gasPrice","DepositView","lazy","WithdrawView","ChangeTrancheView","PoolActionsView","pool","useParams","wallet","initialized","isActive","path","exact","PoolsView","TrancheView","PortfolioView","SmartExposureView","name","disabled","fallback"],"mappings":"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","file":"static/js/51.3e9d86a8.chunk.js","sourcesContent":["import React, { CSSProperties, FC, HTMLProps, ReactNode } from 'react';\nimport { NavLink, NavLinkProps } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport s from './s.module.scss';\n\ntype NavTabProps = NavLinkProps | HTMLProps<HTMLAnchorElement>;\n\ntype NavTabsProps = {\n  tabs: NavTabProps[];\n  className?: string;\n  /**\n   * @example\n   * <Tabs shadows=\"--theme-card-color\" /> in case of string, place background color variable,\n   * <Tabs shadows /> `--theme-body-color` will be used in case of `true`\n   */\n  shadows?: boolean | string;\n};\n\nexport const NavTabs: FC<NavTabsProps> = ({ className, tabs, shadows = false }) => {\n  return (\n    <div\n      className={cn(s.tabs, className, {\n        [s.shadows]: shadows,\n      })}\n      style={\n        {\n          '--tabs-bg': `var(${typeof shadows === 'string' ? shadows : '--theme-body-color'})`,\n        } as CSSProperties\n      }>\n      {tabs.map(({ className, children, ...restTab }, idx) => {\n        // @ts-ignore\n        if (restTab.to) {\n          return (\n            // @ts-ignore\n            <NavLink key={idx} className={cn(s.tab, className)} activeClassName={s.active} {...restTab}>\n              {children}\n            </NavLink>\n          );\n        }\n\n        return (\n          <a key={idx} className={cn(s.tab, className)} rel=\"noopener noreferrer\" target=\"_blank\" {...restTab}>\n            {children}\n          </a>\n        );\n      })}\n    </div>\n  );\n};\n\nexport const HorizontalMenu: FC<NavTabsProps> = ({ className, ...rest }) => {\n  return <NavTabs {...rest} className={cn(s.horizontalMenu, className)} />;\n};\n\ntype TabProps<T> = {\n  id: T;\n  children: ReactNode;\n  className?: string;\n  disabled?: boolean;\n  onClick?: (id: T) => void;\n};\n\ntype TabsProps<T> = {\n  variation?: 'normal' | 'elastic';\n  tabs: TabProps<T>[];\n  activeKey: TabProps<T>['id'];\n  size?: 'normal' | 'small';\n  className?: string;\n  style?: CSSProperties;\n  onClick?: (id: TabProps<T>['id']) => void;\n};\n\nexport const Tabs = <T extends string>(props: TabsProps<T>) => {\n  const { variation = 'normal', tabs, activeKey, size, className, style } = props;\n\n  return (\n    <div\n      className={cn(className, {\n        [s.tabs]: variation === 'normal',\n        [s.elasticTabs]: variation === 'elastic',\n      })}\n      style={style}>\n      {tabs.map(({ id, className, onClick, ...tabRest }) => (\n        <button\n          key={id}\n          className={cn(s.tab, className, {\n            [s.active]: id === activeKey,\n            [s.small]: size === 'small',\n          })}\n          type=\"button\"\n          onClick={() => {\n            props.onClick?.(id);\n            onClick?.(id);\n          }}\n          {...tabRest}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport enum PeriodTabsKey {\n  day = '24h',\n  week = '1w',\n  month = '30d',\n}\n\nconst periodTabs = [\n  {\n    id: PeriodTabsKey.day,\n    children: '24h',\n  },\n  {\n    id: PeriodTabsKey.week,\n    children: '1w',\n  },\n  {\n    id: PeriodTabsKey.month,\n    children: '1mo',\n  },\n];\n\ntype PeriodChartTabsProps = Omit<TabsProps<PeriodTabsKey>, 'tabs' | 'variation'>;\n\nexport const PeriodChartTabs: React.FC<PeriodChartTabsProps> = props => {\n  return <Tabs<PeriodTabsKey> {...props} tabs={periodTabs} variation=\"elastic\" />;\n};\n\nexport enum PortfolioPeriodTabsKey {\n  week = '1w',\n  month = '30d',\n}\n\nconst portfolioPeriodTabs = [\n  {\n    id: PortfolioPeriodTabsKey.week,\n    children: '1w',\n  },\n  {\n    id: PortfolioPeriodTabsKey.month,\n    children: '1mo',\n  },\n];\n\ntype PortfolioPeriodChartTabsProps = Omit<TabsProps<PortfolioPeriodTabsKey>, 'tabs' | 'variation'>;\n\nexport const PortfolioPeriodChartTabs: React.FC<PortfolioPeriodChartTabsProps> = props => {\n  return <Tabs<PortfolioPeriodTabsKey> {...props} tabs={portfolioPeriodTabs} variation=\"elastic\" />;\n};\n","import { FC, createContext, useContext } from 'react';\n\nimport { useConfig } from 'components/providers/configProvider';\nimport { KnownTokens } from 'components/providers/knownTokensProvider';\n\nimport { InvariantContext } from 'utils/context';\nimport { UseFetchReturn, processResponse, queryfy, useFetch } from 'utils/fetch';\n\ntype PoolTokenApiType = {\n  address: string;\n  symbol: KnownTokens;\n  decimals: number;\n};\n\nexport type PoolApiType = {\n  poolAddress: string;\n  poolName: string;\n  state: {\n    blockNumber: number;\n    blockTimestamp: string;\n    lastRebalance: number;\n    poolLiquidity: string;\n    rebalancingCondition: string;\n    rebalancingInterval: number;\n  };\n  tokenA: PoolTokenApiType;\n  tokenB: PoolTokenApiType;\n};\n\nexport type TranchesItemApiType = {\n  poolAddress: string;\n  eTokenAddress: string;\n  eTokenSymbol: string;\n  sFactorE: string;\n  state: {\n    blockNumber: number;\n    blockTimestamp: string;\n    eTokenPrice: string;\n    tokenALiquidity: string;\n    tokenBLiquidity: string;\n    currentRatio: string;\n    tokenACurrentRatio: string;\n    tokenBCurrentRatio: string;\n    lastRebalance: number;\n  };\n  targetRatio: string;\n  tokenARatio: string;\n  tokenBRatio: string;\n  tokenA: TrancheTokenApiType;\n  tokenB: TrancheTokenApiType;\n};\n\ntype TrancheTokenApiType = {\n  address: string;\n  symbol: KnownTokens;\n  decimals: number;\n  state: {\n    price: string;\n    blockNumber: number;\n    blockTimestamp: number;\n  };\n};\n\nexport type TrancheApiType = {\n  eTokenAddress: string;\n  eTokenSymbol: string;\n  sFactorE: string;\n  targetRatio: string;\n  tokenARatio: string;\n  tokenBRatio: string;\n  tokenA: TrancheTokenApiType;\n  tokenB: TrancheTokenApiType;\n  rebalancingInterval: number;\n  rebalancingCondition: number;\n  state: {\n    tokenALiquidity: string;\n    tokenBLiquidity: string;\n    eTokenPrice: string;\n    currentRatio: string;\n    tokenACurrentRatio: string;\n    tokenBCurrentRatio: string;\n    lastRebalance: number;\n    blockNumber: number;\n    blockTimestamp: string;\n  };\n};\n\nexport type ETokenPriceApiType = {\n  point: string;\n  eTokenPrice: string;\n};\n\nexport type ETokenPriceType = {\n  point: string;\n  eTokenPrice: number;\n};\n\nexport type RatioDeviationApiType = {\n  point: string;\n  deviation: string;\n};\n\nexport type RatioDeviationType = {\n  point: string;\n  deviation: string;\n};\n\nexport type TrancheLiquidityApiType = {\n  point: string;\n  tokenALiquidity: string;\n  tokenBLiquidity: string;\n};\n\nexport type TrancheLiquidityType = {\n  point: string;\n  tokenALiquidity: number;\n  tokenBLiquidity: number;\n};\n\nexport type TransactionApiType = {\n  eTokenAddress: string;\n  eTokenSymbol: string;\n  accountAddress: string;\n  tokenA: PoolTokenApiType;\n  tokenB: PoolTokenApiType;\n  amountA: string;\n  amountB: string;\n  tokenAPrice: string;\n  tokenBPrice: string;\n  amountEToken: string;\n  transactionType: 'WITHDRAW' | 'DEPOSIT';\n  transactionHash: string;\n  blockTimestamp: number;\n  blockNumber: number;\n  sFactorE: string;\n};\n\nexport type PortfolioValueApiType = {\n  point: string;\n  portfolioValueSE: string;\n};\n\nexport type PortfolioValueType = {\n  point: string;\n  portfolioValueSE: number;\n};\n\nexport type SeAPIType = {\n  fetchPools(baseUrl?: string): Promise<PoolApiType[]>;\n  fetchTranches(poolAddress?: string): Promise<TranchesItemApiType[]>;\n  fetchTranche(trancheAddress: string): Promise<TrancheApiType>;\n  fetchETokenPrice(trancheAddress: string, windowFilter?: string): Promise<ETokenPriceType[]>;\n  fetchRatioDeviation(trancheAddress: string, windowFilter?: string): Promise<RatioDeviationType[]>;\n  fetchTrancheLiquidity(trancheAddress: string, windowFilter?: string): Promise<TrancheLiquidityType[]>;\n  fetchTransactions({\n    page,\n    limit,\n    accountAddress,\n    poolAddress,\n    eTokenAddress,\n    transactionType,\n  }: {\n    page: number;\n    limit: number;\n    accountAddress?: string;\n    poolAddress?: string;\n    eTokenAddress?: string;\n    transactionType?: TransactionApiType['transactionType'];\n  }): Promise<{\n    data: TransactionApiType[];\n    meta: { count: number; block: number };\n  }>;\n  fetchPortfolioValue({\n    accountAddress,\n    window,\n    poolAddress,\n  }: {\n    accountAddress: string;\n    window?: string;\n    poolAddress?: string;\n  }): Promise<{\n    data: PortfolioValueType[];\n    meta: { count: number; block: number };\n  }>;\n};\n\nconst Context = createContext<SeAPIType>(InvariantContext('SeAPIProvider'));\n\nexport function useSeAPI(): SeAPIType {\n  return useContext(Context);\n}\n\nconst SeAPIProvider: FC = props => {\n  const config = useConfig();\n\n  function fetchPools(baseUrl?: string): Promise<PoolApiType[]> {\n    const url = new URL(`/api/smartexposure/pools`, baseUrl ?? config.api.baseUrl);\n\n    return fetch(url.toString())\n      .then(processResponse)\n      .then(result => result.data);\n  }\n\n  function fetchTranches(poolAddress?: string): Promise<TranchesItemApiType[]> {\n    const query = queryfy({\n      poolAddress,\n    });\n\n    const url = new URL(`/api/smartexposure/tranches?${query}`, config.api.baseUrl);\n\n    return fetch(url.toString())\n      .then(processResponse)\n      .then(result => result.data);\n  }\n\n  function fetchTranche(trancheAddress: string): Promise<TrancheApiType> {\n    const url = new URL(`/api/smartexposure/tranches/${trancheAddress}`, config.api.baseUrl);\n\n    return fetch(url.toString())\n      .then(processResponse)\n      .then(result => result.data);\n  }\n\n  function fetchETokenPrice(trancheAddress: string, windowFilter?: string): Promise<ETokenPriceType[]> {\n    const query = queryfy({\n      window: windowFilter,\n    });\n\n    const url = new URL(`/api/smartexposure/tranches/${trancheAddress}/etoken-price?${query}`, config.api.baseUrl);\n\n    return fetch(url.toString())\n      .then(processResponse)\n      .then(result =>\n        result.data.map((item: ETokenPriceApiType) => ({\n          ...item,\n          eTokenPrice: Number(item.eTokenPrice),\n        })),\n      );\n  }\n\n  function fetchRatioDeviation(trancheAddress: string, windowFilter?: string): Promise<RatioDeviationType[]> {\n    const query = queryfy({\n      window: windowFilter,\n    });\n\n    const url = new URL(`/api/smartexposure/tranches/${trancheAddress}/ratio-deviation?${query}`, config.api.baseUrl);\n\n    return fetch(url.toString())\n      .then(processResponse)\n      .then(result =>\n        result.data.map((item: RatioDeviationApiType) => ({\n          ...item,\n          deviation: Number(item.deviation),\n        })),\n      );\n  }\n\n  function fetchTrancheLiquidity(trancheAddress: string, windowFilter?: string): Promise<TrancheLiquidityType[]> {\n    const query = queryfy({\n      window: windowFilter,\n    });\n\n    const url = new URL(`/api/smartexposure/tranches/${trancheAddress}/liquidity?${query}`, config.api.baseUrl);\n\n    return fetch(url.toString())\n      .then(processResponse)\n      .then(result =>\n        result.data.map((item: TrancheLiquidityApiType) => ({\n          ...item,\n          tokenALiquidity: Number(item.tokenALiquidity),\n          tokenBLiquidity: Number(item.tokenBLiquidity),\n        })),\n      );\n  }\n\n  function fetchTransactions({\n    page,\n    limit,\n    accountAddress,\n    poolAddress,\n    eTokenAddress,\n    transactionType,\n  }: {\n    page: number;\n    limit: number;\n    accountAddress?: string;\n    poolAddress?: string;\n    eTokenAddress?: string;\n    transactionType?: TransactionApiType['transactionType'];\n  }): Promise<{\n    data: TransactionApiType[];\n    meta: { count: number; block: number };\n  }> {\n    const query = queryfy({\n      page,\n      limit,\n      accountAddress,\n      poolAddress,\n      eTokenAddress,\n      transactionType,\n    });\n\n    const url = new URL(`/api/smartexposure/transactions?${query}`, config.api.baseUrl);\n\n    return fetch(url.toString()).then(processResponse);\n  }\n\n  function fetchPortfolioValue({\n    accountAddress,\n    window,\n    poolAddress,\n  }: {\n    accountAddress: string;\n    window?: string;\n    poolAddress?: string;\n  }): Promise<{\n    data: PortfolioValueType[];\n    meta: { count: number; block: number };\n  }> {\n    const query = queryfy({\n      window,\n      poolAddress,\n    });\n\n    const url = new URL(`/api/smartexposure/users/${accountAddress}/portfolio-value?${query}`, config.api.baseUrl);\n\n    return fetch(url.toString())\n      .then(processResponse)\n      .then(response => ({\n        ...response,\n        data: response.data.map((item: PortfolioValueApiType) => ({\n          ...item,\n          portfolioValueSE: Number(item.portfolioValueSE),\n        })),\n      }));\n  }\n\n  const value = {\n    fetchPools,\n    fetchTranches,\n    fetchTranche,\n    fetchETokenPrice,\n    fetchRatioDeviation,\n    fetchTrancheLiquidity,\n    fetchTransactions,\n    fetchPortfolioValue,\n  };\n\n  return <Context.Provider value={value}>{props.children}</Context.Provider>;\n};\n\nexport default SeAPIProvider;\n\nexport function useFetchSePools(baseUrl?: string): UseFetchReturn<PoolApiType[]> {\n  const config = useConfig();\n  const url = new URL('/api/smartexposure/pools', baseUrl ?? config.api.baseUrl);\n\n  return useFetch(url, {\n    transform: ({ data }) => data,\n  });\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"s_tabs__32Wke\",\"shadows\":\"s_shadows__12PQF\",\"tab\":\"s_tab__2wEah\",\"active\":\"s_active__1mayN\",\"disabled\":\"s_disabled__xaH2p\",\"elasticTabs\":\"s_elasticTabs__2URoC\",\"elasticToggle\":\"s_elasticToggle__3M_xZ\",\"small\":\"s_small__c6etg\",\"horizontalMenu\":\"s_horizontalMenu__3BcI1\"};","import BigNumber from 'bignumber.js';\nimport Web3Contract, { createAbiItem } from 'web3/web3Contract';\n\ntype TokenATokenBForETokenResult = {\n  amountA: BigNumber;\n  amountB: BigNumber;\n};\n\nclass SeEPoolHelperContract extends Web3Contract {\n  constructor(address: string) {\n    super(\n      [\n        // call\n        createAbiItem('tokenBForTokenA', ['address', 'address', 'uint256'], ['uint256']),\n        createAbiItem('tokenAForTokenB', ['address', 'address', 'uint256'], ['uint256']),\n        createAbiItem('eTokenForTokenATokenB', ['address', 'address', 'uint256', 'uint256'], ['uint256']),\n        createAbiItem('tokenATokenBForEToken', ['address', 'address', 'uint256'], ['uint256', 'uint256']),\n        createAbiItem('tokenATokenBForTokenA', ['address', 'address', 'uint256'], ['uint256', 'uint256']),\n        createAbiItem('tokenATokenBForTokenB', ['address', 'address', 'uint256'], ['uint256', 'uint256']),\n        // send\n      ],\n      address,\n      'ETokenHelperFactory',\n    );\n  }\n\n  getTokenBForTokenA(ePoolAddress: string, eTokenAddress: string, amountA: BigNumber): Promise<BigNumber> {\n    return this.call('tokenBForTokenA', [ePoolAddress, eTokenAddress, amountA]).then(value => new BigNumber(value));\n  }\n\n  getTokenAForTokenB(ePoolAddress: string, eTokenAddress: string, amountB: BigNumber): Promise<BigNumber> {\n    return this.call('tokenAForTokenB', [ePoolAddress, eTokenAddress, amountB]).then(value => new BigNumber(value));\n  }\n\n  getETokenForTokenATokenB(\n    ePoolAddress: string,\n    eTokenAddress: string,\n    amountA: BigNumber,\n    amountB: BigNumber,\n  ): Promise<BigNumber> {\n    return this.call('eTokenForTokenATokenB', [ePoolAddress, eTokenAddress, amountA, amountB]).then(\n      value => new BigNumber(value),\n    );\n  }\n\n  getTokenATokenBForEToken(\n    ePoolAddress: string,\n    eTokenAddress: string,\n    amount: BigNumber,\n  ): Promise<TokenATokenBForETokenResult> {\n    return this.call('tokenATokenBForEToken', [ePoolAddress, eTokenAddress, amount]).then(value => ({\n      amountA: new BigNumber(value[0]),\n      amountB: new BigNumber(value[1]),\n    }));\n  }\n\n  getTokenATokenBForTokenA(\n    ePoolAddress: string,\n    eTokenAddress: string,\n    amount: BigNumber,\n  ): Promise<TokenATokenBForETokenResult> {\n    return this.call('tokenATokenBForTokenA', [ePoolAddress, eTokenAddress, amount]).then(value => ({\n      amountA: new BigNumber(value[0]),\n      amountB: new BigNumber(value[1]),\n    }));\n  }\n\n  getTokenATokenBForTokenB(\n    ePoolAddress: string,\n    eTokenAddress: string,\n    amount: BigNumber,\n  ): Promise<TokenATokenBForETokenResult> {\n    return this.call('tokenATokenBForTokenB', [ePoolAddress, eTokenAddress, amount]).then(value => ({\n      amountA: new BigNumber(value[0]),\n      amountB: new BigNumber(value[1]),\n    }));\n  }\n}\n\nexport default SeEPoolHelperContract;\n","import BigNumber from 'bignumber.js';\nimport Web3Contract, { createAbiItem } from 'web3/web3Contract';\n\ntype DeltaResult = {\n  deltaA: BigNumber;\n  deltaB: BigNumber;\n  rChange: BigNumber;\n};\n\nclass SeEPoolPeripheryContract extends Web3Contract {\n  constructor(address: string) {\n    super(\n      [\n        // call\n        createAbiItem('currentRatio', ['address', 'address'], ['uint256']),\n        createAbiItem('delta', ['address'], ['uint256', 'uint256', 'uint256']),\n        createAbiItem('router', [], ['address']),\n        createAbiItem('minInputAmountAForEToken', ['address', 'address', 'uint256'], ['uint256']),\n        createAbiItem('minInputAmountBForEToken', ['address', 'address', 'uint256'], ['uint256']),\n        createAbiItem('maxOutputAmountAForEToken', ['address', 'address', 'uint256'], ['uint256']),\n        createAbiItem('maxOutputAmountBForEToken', ['address', 'address', 'uint256'], ['uint256']),\n        createAbiItem('eTokenForMinInputAmountA_Unsafe', ['address', 'address', 'uint256'], ['uint256']),\n        createAbiItem('eTokenForMinInputAmountB_Unsafe', ['address', 'address', 'uint256'], ['uint256']),\n        // send\n        createAbiItem('issueForMaxTokenA', ['address', 'address', 'uint256', 'uint256', 'uint256'], ['bool']),\n        createAbiItem('issueForMaxTokenB', ['address', 'address', 'uint256', 'uint256', 'uint256'], ['bool']),\n        createAbiItem('redeemForMinTokenA', ['address', 'address', 'uint256', 'uint256', 'uint256'], ['bool']),\n        createAbiItem('redeemForMinTokenB', ['address', 'address', 'uint256', 'uint256', 'uint256'], ['bool']),\n      ],\n      address,\n      'ETokenFactory',\n    );\n  }\n\n  getCurrentRatio(ePoolAddress: string, eTokenAddress: string): Promise<BigNumber> {\n    return this.call('currentRatio', [ePoolAddress, eTokenAddress]).then(value => new BigNumber(value));\n  }\n\n  getRouter(): Promise<string> {\n    return this.call('router');\n  }\n\n  getDelta(ePoolAddress: string): Promise<DeltaResult> {\n    return this.call('delta', [ePoolAddress]).then(value => ({\n      deltaA: new BigNumber(value[0]),\n      deltaB: new BigNumber(value[1]),\n      rChange: new BigNumber(value[2]),\n    }));\n  }\n\n  getMinInputAmountAForEToken(ePoolAddress: string, eTokenAddress: string, amountA: BigNumber): Promise<BigNumber> {\n    return this.call('minInputAmountAForEToken', [ePoolAddress, eTokenAddress, amountA]).then(\n      value => new BigNumber(value),\n    );\n  }\n\n  getMinInputAmountBForEToken(ePoolAddress: string, eTokenAddress: string, amountB: BigNumber): Promise<BigNumber> {\n    return this.call('minInputAmountBForEToken', [ePoolAddress, eTokenAddress, amountB]).then(\n      value => new BigNumber(value),\n    );\n  }\n\n  getMaxOutputAmountAForEToken(ePoolAddress: string, eTokenAddress: string, amountA: BigNumber): Promise<BigNumber> {\n    return this.call('maxOutputAmountAForEToken', [ePoolAddress, eTokenAddress, amountA]).then(\n      value => new BigNumber(value),\n    );\n  }\n\n  getMaxOutputAmountBForEToken(ePoolAddress: string, eTokenAddress: string, amountB: BigNumber): Promise<BigNumber> {\n    return this.call('maxOutputAmountBForEToken', [ePoolAddress, eTokenAddress, amountB]).then(\n      value => new BigNumber(value),\n    );\n  }\n\n  getETokenForMinInputAmountA(ePoolAddress: string, eTokenAddress: string, amountB: BigNumber): Promise<BigNumber> {\n    return this.call('eTokenForMinInputAmountA_Unsafe', [ePoolAddress, eTokenAddress, amountB]).then(\n      value => new BigNumber(value),\n    );\n  }\n\n  getETokenForMinInputAmountB(ePoolAddress: string, eTokenAddress: string, amountB: BigNumber): Promise<BigNumber> {\n    return this.call('eTokenForMinInputAmountB_Unsafe', [ePoolAddress, eTokenAddress, amountB]).then(\n      value => new BigNumber(value),\n    );\n  }\n\n  depositForMaxTokenA(\n    ePoolAddress: string,\n    eTokenAddress: string,\n    amount: BigNumber,\n    maxAmountA: BigNumber,\n    deadline: number,\n  ): Promise<boolean> {\n    if (!this.account) {\n      return Promise.reject();\n    }\n\n    return this.send('issueForMaxTokenA', [ePoolAddress, eTokenAddress, amount, maxAmountA, deadline], {\n      from: this.account,\n    });\n  }\n\n  depositForMaxTokenB(\n    ePoolAddress: string,\n    eTokenAddress: string,\n    amount: BigNumber,\n    maxAmountB: BigNumber,\n    deadline: number,\n  ): Promise<boolean> {\n    if (!this.account) {\n      return Promise.reject();\n    }\n\n    return this.send('issueForMaxTokenB', [ePoolAddress, eTokenAddress, amount, maxAmountB, deadline], {\n      from: this.account,\n    });\n  }\n\n  redeemForMinTokenA(\n    ePoolAddress: string,\n    eTokenAddress: string,\n    amount: BigNumber,\n    minAmountA: BigNumber,\n    deadline: number,\n  ): Promise<boolean> {\n    if (!this.account) {\n      return Promise.reject();\n    }\n\n    return this.send('redeemForMinTokenA', [ePoolAddress, eTokenAddress, amount, minAmountA, deadline], {\n      from: this.account,\n    });\n  }\n\n  redeemForMinTokenB(\n    ePoolAddress: string,\n    eTokenAddress: string,\n    amount: BigNumber,\n    minAmountB: BigNumber,\n    deadline: number,\n  ): Promise<boolean> {\n    if (!this.account) {\n      return Promise.reject();\n    }\n\n    return this.send('redeemForMinTokenB', [ePoolAddress, eTokenAddress, amount, minAmountB, deadline], {\n      from: this.account,\n    });\n  }\n}\n\nexport default SeEPoolPeripheryContract;\n","import React, { createContext, useContext, useEffect } from 'react';\nimport { useContract } from 'web3/components/contractManagerProvider';\n\nimport { useConfig } from 'components/providers/configProvider';\nimport { useReload } from 'hooks/useReload';\nimport SeEPoolContract from 'modules/smart-exposure/contracts/seEPoolContract';\nimport SeEPoolHelperContract from 'modules/smart-exposure/contracts/seEPoolHelperContract';\nimport SeEPoolPeripheryContract from 'modules/smart-exposure/contracts/seEPoolPeripheryContract';\nimport { useWallet } from 'wallets/walletProvider';\n\nimport { InvariantContext } from 'utils/context';\n\ntype SEContextType = {\n  ePoolHelperContract: SeEPoolHelperContract;\n  ePoolPeripheryContract: SeEPoolPeripheryContract;\n};\n\nconst Context = createContext<SEContextType>(InvariantContext('SEPoolsProvider'));\n\nexport function useSEPools(): SEContextType {\n  return useContext(Context);\n}\n\nexport const SEPoolsProvider: React.FC = props => {\n  const { children } = props;\n\n  const walletCtx = useWallet();\n  const config = useConfig();\n\n  const ePoolPeripheryContract = useContract<SeEPoolPeripheryContract>(config.contracts.se?.ePoolPeriphery!, () => {\n    return new SeEPoolPeripheryContract(config.contracts.se?.ePoolPeriphery!);\n  });\n  const ePoolHelperContract = useContract<SeEPoolHelperContract>(config.contracts.se?.ePoolHelper!, () => {\n    return new SeEPoolHelperContract(config.contracts.se?.ePoolHelper!);\n  });\n\n  useEffect(() => {\n    ePoolHelperContract.setProvider(walletCtx.provider);\n    ePoolPeripheryContract.setProvider(walletCtx.provider);\n  }, [walletCtx.provider]);\n\n  useEffect(() => {\n    ePoolHelperContract.setAccount(walletCtx.account);\n    ePoolPeripheryContract.setAccount(walletCtx.account);\n  }, [walletCtx.account]);\n\n  const value = {\n    ePoolHelperContract,\n    ePoolPeripheryContract,\n  };\n\n  return <Context.Provider value={value}>{children}</Context.Provider>;\n};\n\nexport const useEPoolContract = (address: string): SeEPoolContract => {\n  const [reload] = useReload();\n\n  const contract = useContract<SeEPoolContract>(address, () => {\n    return new SeEPoolContract(address);\n  });\n\n  useEffect(() => {\n    contract.loadCommon().then(reload).catch(Error);\n  }, [contract, reload]);\n\n  return contract;\n};\n","import BigNumber from 'bignumber.js';\nimport Web3Contract, { AbiTupleArray, createAbiItem } from 'web3/web3Contract';\n\nclass SeEPoolContract extends Web3Contract {\n  constructor(address: string) {\n    super(\n      [\n        // call\n        createAbiItem('feeRate', [], ['uint256']),\n        createAbiItem('rebalanceMinDeltaA', [], ['uint256']),\n        createAbiItem('rebalanceInterval', [], ['uint256']),\n        createAbiItem('lastRebalance', [], ['uint256']),\n        createAbiItem('getRate', [], ['uint256']),\n        createAbiItem('cumulativeFeeA', [], ['uint256']),\n        createAbiItem('cumulativeFeeB', [], ['uint256']),\n        createAbiItem('getTranches', [], [new AbiTupleArray(['address', 'uint256', 'uint256', 'uint256', 'uint256'])]),\n        createAbiItem('getTranche', ['address'], ['address', 'uint256', 'uint256', 'uint256', 'uint256']),\n        // send\n        createAbiItem('issueExact', ['address', 'uint256'], ['uint256', 'uint256']),\n        createAbiItem('redeemExact', ['address', 'uint256'], ['uint256', 'uint256']),\n        createAbiItem('transferFees', [], ['boolean']),\n      ],\n      address,\n      'ETokenFactory',\n    );\n  }\n\n  feeRate?: number;\n  rebalanceMinDeltaA?: number;\n  rebalanceInterval?: number;\n  lastRebalance?: number;\n  rate?: BigNumber;\n  tranches?: any;\n  tranche?: any;\n\n  cumulativeFeeA?: BigNumber;\n  cumulativeFeeB?: BigNumber;\n\n  async loadCommon() {\n    try {\n      const [feeRate, rebalanceMinDeltaA, rebalanceInterval, lastRebalance, rate, tranches, tranche] = await this.batch(\n        [\n          { method: 'feeRate', transform: value => Number(value) },\n          { method: 'rebalanceMinDeltaA', transform: value => Number(value) },\n          { method: 'rebalanceInterval', transform: value => Number(value) },\n          { method: 'lastRebalance', transform: value => Number(value) },\n          { method: 'getRate', transform: value => BigNumber.from(value) },\n          {\n            method: 'getTranches',\n            transform: value =>\n              value.map(([eToken, sFactorE, reserveA, reserveB, targetRatio]: any) => ({\n                eToken,\n                sFactorE: BigNumber.from(sFactorE),\n                reserveA: BigNumber.from(reserveA),\n                reserveB: BigNumber.from(reserveB),\n                targetRatio: BigNumber.from(targetRatio),\n              })),\n          },\n        ],\n      );\n\n      this.feeRate = feeRate; // 0.05 * 10 ** 18;\n      this.rebalanceMinDeltaA = rebalanceMinDeltaA;\n      this.rebalanceInterval = rebalanceInterval;\n      this.lastRebalance = lastRebalance;\n      this.rate = rate;\n      this.tranches = tranches;\n      this.tranche = tranche;\n      this.emit(Web3Contract.UPDATE_DATA);\n    } catch {}\n  }\n\n  getTranche(eTokenAddress: string): Promise<any> {\n    return this.call('getTranche', [eTokenAddress]).then(value => ({\n      eToken: value[0],\n      sFactorE: BigNumber.from(value[1]),\n      reserveA: BigNumber.from(value[2]),\n      reserveB: BigNumber.from(value[3]),\n      targetRatio: BigNumber.from(value[4]),\n    }));\n  }\n\n  getCumulativeFeeA(): Promise<BigNumber | undefined> {\n    return this.call('cumulativeFeeA', []).then(value => {\n      this.cumulativeFeeA = BigNumber.from(value);\n      this.emit(Web3Contract.UPDATE_DATA);\n      return this.cumulativeFeeA;\n    });\n  }\n\n  getCumulativeFeeB(): Promise<BigNumber | undefined> {\n    return this.call('cumulativeFeeB', []).then(value => {\n      this.cumulativeFeeB = BigNumber.from(value);\n      this.emit(Web3Contract.UPDATE_DATA);\n      return this.cumulativeFeeB;\n    });\n  }\n\n  deposit(eTokenAddress: string, amount: BigNumber): Promise<void> {\n    if (!this.account) {\n      return Promise.reject();\n    }\n\n    return this.send('issueExact', [eTokenAddress, amount], {\n      from: this.account,\n    });\n  }\n\n  redeem(eTokenAddress: string, amount: BigNumber): Promise<void> {\n    if (!this.account) {\n      return Promise.reject();\n    }\n\n    return this.send('redeemExact', [eTokenAddress, amount], {\n      from: this.account,\n    });\n  }\n\n  transferFees(gasPrice?: number): Promise<void> {\n    if (!this.account) {\n      return Promise.reject();\n    }\n\n    return this.send(\n      'transferFees',\n      [],\n      {\n        from: this.account,\n      },\n      gasPrice,\n    );\n  }\n}\n\nexport default SeEPoolContract;\n","import { lazy } from 'react';\nimport { Redirect, Route, Switch, useParams } from 'react-router-dom';\n\nimport { useWallet } from 'wallets/walletProvider';\n\nconst DepositView = lazy(() => import('../deposit-view'));\nconst WithdrawView = lazy(() => import('../withdraw-view'));\nconst ChangeTrancheView = lazy(() => import('../change-tranche-view'));\n\nexport const PoolActionsView: React.FC = () => {\n  const { pool } = useParams<{ pool: string }>();\n  const wallet = useWallet();\n\n  if (!wallet.initialized) {\n    return null;\n  }\n\n  if (!wallet.isActive) {\n    return <Redirect to={`/smart-exposure/pools/${pool}`} />;\n  }\n\n  return (\n    <Switch>\n      <Route path=\"/smart-exposure/pools/:pool/:tranche/deposit\" exact>\n        <DepositView />\n      </Route>\n      <Route path=\"/smart-exposure/pools/:pool/:tranche/withdraw\" exact>\n        <WithdrawView />\n      </Route>\n      <Route path=\"/smart-exposure/pools/:pool/:tranche/change-tranche\" exact>\n        <ChangeTrancheView />\n      </Route>\n      <Redirect to={`/smart-exposure/pools/${pool}`} />\n    </Switch>\n  );\n};\n","import React, { Suspense, lazy } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport AntdSpin from 'antd/lib/spin';\n\nimport { HorizontalMenu } from 'components/custom/tabs';\nimport { Icon } from 'components/icon';\nimport SeAPIProvider from 'modules/smart-exposure/api';\nimport { SEPoolsProvider } from 'modules/smart-exposure/providers/se-pools-provider';\nimport { useWallet } from 'wallets/walletProvider';\n\nimport { PoolActionsView } from './views/pool-actions-view';\n\nconst PoolsView = lazy(() => import(/* webpackChunkName: \"pools-view\" */ './views/pools-view'));\nconst TrancheView = lazy(() => import(/* webpackChunkName: \"tranche-view\" */ './views/tranche-view'));\n\nconst PortfolioView = lazy(() => import(/* webpackChunkName: \"portfolio-view\" */ './views/portfolio-view'));\n\nconst SmartExposureView: React.FC = () => {\n  const wallet = useWallet();\n\n  const tabs = [\n    {\n      children: (\n        <>\n          <Icon name=\"pairs\" className=\"mr-8\" size={24} /> Pools\n        </>\n      ),\n      to: '/smart-exposure/pools',\n    },\n    {\n      children: (\n        <>\n          <Icon name=\"wallet\" className=\"mr-8\" size={24} /> Portfolio\n        </>\n      ),\n      to: '/smart-exposure/portfolio',\n      disabled: !wallet.account,\n    },\n  ];\n\n  return (\n    <>\n      <HorizontalMenu tabs={tabs} />\n      <div className=\"content-container-fix content-container\">\n        <SeAPIProvider>\n          <SEPoolsProvider>\n            <Suspense fallback={<AntdSpin />}>\n              <Switch>\n                <Route path=\"/smart-exposure/pools\" exact>\n                  <PoolsView />\n                </Route>\n                <Route path=\"/smart-exposure/pools/:pool/:tranche\" exact>\n                  <TrancheView />\n                </Route>\n                <Route path=\"/smart-exposure/pools/:pool/:tranche/:path(deposit|withdraw|change-tranche)\" exact>\n                  <PoolActionsView />\n                </Route>\n                <Route path=\"/smart-exposure/portfolio\" exact>\n                  <PortfolioView />\n                </Route>\n                <Redirect to=\"/smart-exposure/pools\" />\n              </Switch>\n            </Suspense>\n          </SEPoolsProvider>\n        </SeAPIProvider>\n      </div>\n    </>\n  );\n};\n\nexport default SmartExposureView;\n"],"sourceRoot":""}