{"version":3,"sources":["components/antd/divider/index.tsx","components/custom/spinner/index.tsx","components/antd/divider/s.module.scss","../node_modules/antd/lib/divider/index.js","components/custom/spinner/s.module.scss","components/custom/tooltip/index.tsx","../node_modules/@ant-design/icons-svg/es/asn/LoadingOutlined.js","../node_modules/@ant-design/icons/es/icons/LoadingOutlined.js","modules/smart-exposure/components/transactions-table/index.tsx","modules/smart-exposure/views/tranche-view/details/s.module.scss","modules/smart-exposure/views/tranche-view/s.module.scss","modules/smart-exposure/views/tranche-view/charts/index.tsx","modules/smart-exposure/views/tranche-view/details/index.tsx","modules/smart-exposure/views/tranche-view/transactions/index.tsx","modules/smart-exposure/views/tranche-view/trend/index.tsx","modules/smart-exposure/views/tranche-view/index.tsx"],"names":["Divider","props","className","dividerProps","cn","s","divider","Spinner","children","spinning","restProps","container","name","classNames","spinner","module","exports","_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","value","_extends2","_defineProperty2","React","_classnames","_configProvider","__rest","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","_default","createElement","ConfigConsumer","_ref","_classNames","getPrefixCls","direction","customizePrefixCls","prefixCls","_props$type","type","_props$orientation","orientation","dashed","plain","orientationPrefix","concat","hasChildren","classString","role","InfoTooltip","style","title","size","flexShrink","LoadingOutlined","ref","AntdIcon","_objectSpread","icon","LoadingOutlinedSvg","displayName","TransactionsTable","transactionType","accountAddress","poolAddress","eTokenAddress","getTokenIconBySymbol","useKnownTokens","seAPI","useSeAPI","useState","dataList","setDataList","loading","setLoading","total","page","pageSize","filters","setFilters","useEffect","prevFilters","fetchTransactions","limit","then","result","Array","isArray","data","meta","count","catch","err","console","error","finally","columns","useMemo","heading","render","item","whiteSpace","name1","tokenA","symbol","name2","tokenB","weight","color","eTokenSymbol","formatToken","BigNumber","from","amountA","unscaleBy","decimals","formatUSD","multipliedBy","tokenAPrice","amountB","tokenBPrice","amountEToken","dividedBy","sFactorE","address","variation","shortenAddr","transactionHash","date","Date","blockTimestamp","format","current","onChange","text","TabsKey","tabs","id","ratio","tranche","Charts","trancheAddress","useParams","activeTab","setActiveTab","PeriodTabsKey","day","periodFilter","setPeriodFilter","borderBottom","padding","overflowX","activeKey","onClick","RatioDeviation","fetchRatioDeviation","AntdNotification","message","width","height","gradientTransform","offset","stopColor","vertical","strokeDasharray","stroke","dataKey","axisLine","tickLine","tickFormatter","formatTick","formatPercent","separator","labelFormatter","formatter","_","Number","fill","strokeWidth","TrancheLiquidity","fetchTrancheLiquidity","margin","left","compact","tag","Details","header","RebalancingDetails","getTokenBySymbol","tokenARatio","tokenBRatio","state","tokenACurrentRatio","tokenBCurrentRatio","getRelativeTime","rebalancingInterval","lastRebalance","eTokenPrice","TrancheDetails","wallet","useWallet","tokenAContract","useContract","loadBalance","tokenBContract","tokenABalance","getBalanceOf","account","tokenBBalance","price","tokenALiquidity","tokenBLiquidity","initialFiltersState","filtersOptions","label","defaultValue","itemRender","options","TransactionsView","filtersState","setFiltersState","prevState","undefined","PriceTrend","priceList","fetchETokenPrice","Intl","NumberFormat","notation","currency","TrancheView","pool","location","useLocation","setTranche","fetchTranche","to","pathname","disabled","trendDetailsRow"],"mappings":"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","file":"static/js/tranche-view.fc9834cd.chunk.js","sourcesContent":["import React from 'react';\nimport AntdDivider, { DividerProps as AntdDividerProps } from 'antd/lib/divider';\nimport cn from 'classnames';\n\nimport s from './s.module.scss';\n\nconst Divider: React.FC<AntdDividerProps> = props => {\n  const { className, ...dividerProps } = props;\n\n  return <AntdDivider className={cn(s.divider, className)} {...dividerProps} />;\n};\n\nexport default Divider;\n","import classNames from 'classnames';\n\nimport { Icon } from 'components/icon';\nimport { FCx } from 'components/types.tx';\n\nimport s from './s.module.scss';\n\ntype PropsType = {\n  spinning?: boolean;\n};\n\nexport const Spinner: FCx<PropsType> = ({ className, children, spinning, ...restProps }) => {\n  if (children) {\n    if (spinning) {\n      return (\n        <div className={s.container}>\n          <div className={s.children}>{children}</div>\n          <Icon name=\"loader\" className={classNames(s.spinner, className)} {...restProps} />\n        </div>\n      );\n    }\n\n    return <>{children}</>;\n  }\n\n  return <Icon name=\"loader\" className={classNames(s.spinner, className)} {...restProps} />;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divider\":\"s_divider__3YM-J\"};","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _configProvider = require(\"../config-provider\");\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar Divider = function Divider(props) {\n  return /*#__PURE__*/React.createElement(_configProvider.ConfigConsumer, null, function (_ref) {\n    var _classNames;\n\n    var getPrefixCls = _ref.getPrefixCls,\n        direction = _ref.direction;\n\n    var customizePrefixCls = props.prefixCls,\n        _props$type = props.type,\n        type = _props$type === void 0 ? 'horizontal' : _props$type,\n        _props$orientation = props.orientation,\n        orientation = _props$orientation === void 0 ? 'center' : _props$orientation,\n        className = props.className,\n        children = props.children,\n        dashed = props.dashed,\n        plain = props.plain,\n        restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"className\", \"children\", \"dashed\", \"plain\"]);\n\n    var prefixCls = getPrefixCls('divider', customizePrefixCls);\n    var orientationPrefix = orientation.length > 0 ? \"-\".concat(orientation) : orientation;\n    var hasChildren = !!children;\n    var classString = (0, _classnames[\"default\"])(prefixCls, \"\".concat(prefixCls, \"-\").concat(type), (_classNames = {}, (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-with-text\"), hasChildren), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-with-text\").concat(orientationPrefix), hasChildren), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-dashed\"), !!dashed), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-plain\"), !!plain), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n    return /*#__PURE__*/React.createElement(\"div\", (0, _extends2[\"default\"])({\n      className: classString\n    }, restProps, {\n      role: \"separator\"\n    }), children && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-inner-text\")\n    }, children));\n  });\n};\n\nvar _default = Divider;\nexports[\"default\"] = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"s_spinner__2lxg5\",\"rotate\":\"s_rotate__K9I_G\",\"container\":\"s_container__2DwVy\",\"children\":\"s_children__1ZC_G\"};","import Tooltip from 'components/antd/tooltip';\nimport { Icon } from 'components/icon';\n\ntype PropsType = {\n  className?: string;\n  style?: React.CSSProperties;\n};\n\nexport const InfoTooltip: React.FC<PropsType> = ({ children, className, style }) => (\n  <Tooltip title={children}>\n    <Icon\n      name=\"info\"\n      size={16}\n      className={className}\n      style={{\n        flexShrink: 0,\n        ...style,\n      }}\n    />\n  </Tooltip>\n);\n","// This icon file is generated automatically.\nvar LoadingOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z\" } }] }, \"name\": \"loading\", \"theme\": \"outlined\" };\nexport default LoadingOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LoadingOutlinedSvg from \"@ant-design/icons-svg/es/asn/LoadingOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LoadingOutlined = function LoadingOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LoadingOutlinedSvg\n  }));\n};\n\nLoadingOutlined.displayName = 'LoadingOutlined';\nexport default /*#__PURE__*/React.forwardRef(LoadingOutlined);","import { useEffect, useMemo, useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport { format } from 'date-fns';\nimport { formatToken, formatUSD, shortenAddr } from 'web3/utils';\n\nimport { ExplorerAddressLink, ExplorerTxLink } from 'components/button';\nimport { ColumnType, Table, TableFooter } from 'components/custom/table';\nimport { Text } from 'components/custom/typography';\nimport { useKnownTokens } from 'components/providers/knownTokensProvider';\nimport { TokenIcon, TokenIconNames, TokenIconPair } from 'components/token-icon';\nimport { TransactionApiType, useSeAPI } from 'modules/smart-exposure/api';\n\nexport const TransactionsTable = ({\n  transactionType,\n  accountAddress,\n  poolAddress,\n  eTokenAddress,\n}: {\n  transactionType?: TransactionApiType['transactionType'];\n  accountAddress?: string;\n  poolAddress?: string;\n  eTokenAddress?: string;\n}) => {\n  const { getTokenIconBySymbol } = useKnownTokens();\n  const seAPI = useSeAPI();\n  const [dataList, setDataList] = useState<TransactionApiType[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [filters, setFilters] = useState<{\n    total: number;\n    page: number;\n    pageSize: number;\n    accountAddress?: string;\n    poolAddress?: string;\n    eTokenAddress?: string;\n    transactionType?: TransactionApiType['transactionType'];\n  }>({\n    total: 0,\n    page: 1,\n    pageSize: 10,\n    accountAddress,\n    poolAddress,\n    eTokenAddress,\n    transactionType,\n  });\n\n  useEffect(() => {\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      page: 1,\n      accountAddress,\n      poolAddress,\n      eTokenAddress,\n      transactionType,\n    }));\n  }, [accountAddress, poolAddress, transactionType]);\n\n  useEffect(() => {\n    setLoading(true);\n\n    seAPI\n      .fetchTransactions({\n        page: filters.page,\n        limit: filters.pageSize,\n        accountAddress: filters.accountAddress,\n        poolAddress: filters.poolAddress,\n        eTokenAddress: filters.eTokenAddress,\n        transactionType: filters.transactionType,\n      })\n      .then(result => {\n        if (Array.isArray(result.data)) {\n          setDataList(result.data);\n          setFilters(prevFilters => ({\n            ...prevFilters,\n            total: result.meta.count,\n          }));\n        } else {\n          setDataList([]);\n          setFilters(prevFilters => ({\n            ...prevFilters,\n            total: 0,\n          }));\n        }\n      })\n      .catch(err => {\n        setDataList([]);\n        console.error(err);\n      })\n      .finally(() => setLoading(false));\n  }, [filters.page, filters.pageSize, filters.accountAddress, filters.poolAddress, filters.transactionType]);\n\n  const columns: ColumnType<TransactionApiType>[] = useMemo(\n    () => [\n      {\n        heading: 'Tranche / Transaction',\n        render: item => (\n          <div className=\"flex align-center\" style={{ whiteSpace: 'nowrap' }}>\n            <TokenIconPair\n              name1={getTokenIconBySymbol(item.tokenA.symbol)}\n              name2={getTokenIconBySymbol(item.tokenB.symbol)}\n              size={32}\n              className=\"mr-16\"\n            />\n            <div>\n              <Text type=\"p1\" weight=\"semibold\" color=\"primary\" className=\"mb-4\">\n                {item.eTokenSymbol}\n              </Text>\n              <Text type=\"small\" weight=\"semibold\" color=\"secondary\">\n                {item.transactionType === 'WITHDRAW' ? 'Withdraw' : 'Deposit'} – multiple tokens\n              </Text>\n            </div>\n          </div>\n        ),\n      },\n      {\n        heading: `Token 1 amount`,\n        render: item => (\n          <div style={{ whiteSpace: 'nowrap' }}>\n            <div className=\"flex align-center mb-4\">\n              <TokenIcon name={getTokenIconBySymbol(item.tokenA.symbol) as TokenIconNames} size={16} className=\"mr-4\" />\n              <Text type=\"p1\" weight=\"semibold\" color={item.transactionType === 'DEPOSIT' ? 'red' : 'green'}>\n                {item.transactionType === 'DEPOSIT' ? '-' : '+'}\n                {formatToken(BigNumber.from(item.amountA)?.unscaleBy(item.tokenA.decimals))}\n              </Text>\n            </div>\n            <Text type=\"small\" weight=\"semibold\" color=\"secondary\">\n              {formatUSD(BigNumber.from(item.amountA)?.unscaleBy(item.tokenA.decimals)?.multipliedBy(item.tokenAPrice))}\n            </Text>\n          </div>\n        ),\n      },\n      {\n        heading: `Token 2 amount`,\n\n        render: item => (\n          <div style={{ whiteSpace: 'nowrap' }}>\n            <div className=\"flex align-center mb-4\">\n              <TokenIcon name={getTokenIconBySymbol(item.tokenB.symbol) as TokenIconNames} size={16} className=\"mr-4\" />\n              <Text type=\"p1\" weight=\"semibold\" color={item.transactionType === 'DEPOSIT' ? 'red' : 'green'}>\n                {item.transactionType === 'DEPOSIT' ? '-' : '+'}\n                {formatToken(BigNumber.from(item.amountB)?.unscaleBy(item.tokenB.decimals))}\n              </Text>\n            </div>\n            <Text type=\"small\" weight=\"semibold\" color=\"secondary\">\n              {formatUSD(BigNumber.from(item.amountB)?.unscaleBy(item.tokenB.decimals)?.multipliedBy(item.tokenBPrice))}\n            </Text>\n          </div>\n        ),\n      },\n      {\n        heading: 'Pool token amount',\n        render: item => (\n          <Text type=\"p1\" weight=\"semibold\" color={item.transactionType === 'DEPOSIT' ? 'green' : 'red'}>\n            {item.transactionType === 'DEPOSIT' ? '+' : '-'}\n            {formatToken(BigNumber.from(item.amountEToken)?.dividedBy(item.sFactorE))}\n          </Text>\n        ),\n      },\n      ...(accountAddress\n        ? []\n        : [\n            {\n              heading: 'Address',\n              // @ts-ignore\n              render: function Render(item) {\n                return (\n                  <ExplorerAddressLink address={item.accountAddress} variation=\"link\">\n                    {shortenAddr(item.accountAddress, 6, 4)}\n                  </ExplorerAddressLink>\n                );\n              },\n            } as ColumnType<TransactionApiType>,\n          ]),\n      {\n        heading: 'Transaction Hash',\n        render: item => (\n          <ExplorerTxLink address={item.transactionHash} variation=\"link\">\n            {shortenAddr(item.transactionHash, 6, 4)}\n          </ExplorerTxLink>\n        ),\n      },\n      {\n        heading: 'Date',\n        render: item => {\n          const date = new Date(item.blockTimestamp * 1000);\n          return (\n            <>\n              <Text type=\"p1\" weight=\"semibold\" color=\"primary\" className=\"mb-4\">\n                {format(date, 'dd.MM.yyyy')}\n              </Text>\n              <Text type=\"small\" weight=\"semibold\" color=\"secondary\">\n                {format(date, 'HH:mm')}\n              </Text>\n            </>\n          );\n        },\n      },\n    ],\n    [accountAddress],\n  );\n\n  return (\n    <>\n      <Table<TransactionApiType> columns={columns} data={dataList} loading={loading} />\n      <TableFooter\n        total={filters.total}\n        current={filters.page}\n        pageSize={filters.pageSize}\n        onChange={page =>\n          setFilters(prevFilters => ({\n            ...prevFilters,\n            page,\n          }))\n        }\n        text\n      />\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"s_header__3K7UY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trendDetailsRow\":\"s_trendDetailsRow__9nOCs\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport AntdNotification from 'antd/lib/notification';\nimport classNames from 'classnames';\nimport { format } from 'date-fns';\nimport * as ReCharts from 'recharts';\nimport { formatPercent, formatUSD } from 'web3/utils';\n\nimport Spin from 'components/antd/spin';\nimport { PeriodChartTabs, PeriodTabsKey, Tabs } from 'components/custom/tabs';\nimport { Text } from 'components/custom/typography';\nimport { RatioDeviationType, TrancheApiType, TrancheLiquidityType, useSeAPI } from 'modules/smart-exposure/api';\n\nimport { formatTick } from 'utils/chart';\n\nexport enum TabsKey {\n  ratio = 'ratio',\n  tranche = 'tranche',\n}\n\nconst tabs = [\n  {\n    id: TabsKey.ratio,\n    children: 'Ratio deviation',\n  },\n  {\n    id: TabsKey.tranche,\n    children: 'Tranche liquidity',\n  },\n];\n\ntype PropsType = {\n  tranche: TrancheApiType;\n  className?: string;\n};\n\nexport const Charts: React.FC<PropsType> = ({ tranche, className }) => {\n  const { tranche: trancheAddress } = useParams<{ pool: string; tranche: string }>();\n  const [activeTab, setActiveTab] = useState<TabsKey>(TabsKey.ratio);\n  const [periodFilter, setPeriodFilter] = useState<PeriodTabsKey>(PeriodTabsKey.day);\n\n  return (\n    <section className={classNames('card', className)}>\n      <header\n        className=\"flex align-center\"\n        style={{\n          borderBottom: '1px solid var(--theme-border-color)',\n          padding: '0 16px 0 24px',\n          overflowX: 'auto',\n        }}>\n        <Tabs<TabsKey> tabs={tabs} activeKey={activeTab} onClick={setActiveTab} variation=\"normal\" />\n        <PeriodChartTabs activeKey={periodFilter} onClick={setPeriodFilter} size=\"small\" className=\"ml-auto\" />\n      </header>\n      <div className=\"p-24\">\n        {activeTab === TabsKey.ratio ? (\n          <RatioDeviation trancheAddress={trancheAddress} periodFilter={periodFilter} />\n        ) : (\n          <TrancheLiquidity tranche={tranche} trancheAddress={trancheAddress} periodFilter={periodFilter} />\n        )}\n      </div>\n    </section>\n  );\n};\n\nconst RatioDeviation = ({ trancheAddress, periodFilter }: { trancheAddress: string; periodFilter: PeriodTabsKey }) => {\n  const [dataList, setDataList] = useState<RatioDeviationType[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const seAPI = useSeAPI();\n\n  useEffect(() => {\n    setLoading(true);\n    seAPI\n      .fetchRatioDeviation(trancheAddress, periodFilter)\n      .then(result => setDataList(result))\n      .catch(err => {\n        setDataList([]);\n        console.error(err);\n        AntdNotification.error({\n          message: err.data,\n        });\n      })\n      .finally(() => setLoading(false));\n  }, [trancheAddress, periodFilter]);\n\n  return (\n    <Spin spinning={loading}>\n      <ReCharts.ResponsiveContainer width=\"100%\" height={300} className=\"mb-24\">\n        <ReCharts.AreaChart data={dataList}>\n          <defs>\n            <linearGradient id=\"chart-red-gradient\" gradientTransform=\"rotate(180)\">\n              <stop offset=\"0%\" stopColor=\"rgba(var(--theme-red-color-rgb), 0.08)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(var(--theme-red-color-rgb), 0)\" />\n            </linearGradient>\n          </defs>\n          <ReCharts.CartesianGrid vertical={false} strokeDasharray=\"3 0\" stroke=\"var(--theme-border-color)\" />\n          <ReCharts.XAxis\n            dataKey=\"point\"\n            axisLine={false}\n            tickLine={false}\n            tickFormatter={value => formatTick(value, periodFilter)}\n          />\n          <ReCharts.YAxis axisLine={false} tickLine={false} tickFormatter={value => formatPercent(value) ?? ''} />\n          <ReCharts.Tooltip\n            separator=\"\"\n            labelFormatter={value => (\n              <span className=\"text-p2 fw-semibold color-primary\">\n                {value ? format(new Date(value), 'MM.dd.yyyy HH:mm') : ''}\n              </span>\n            )}\n            formatter={(value: number, _: any, { dataKey }: any) => (\n              <span className=\"text-p2 fw-semibold color-red\">{`${Number(value) * 100}%` ?? ''}</span>\n            )}\n          />\n          <ReCharts.Area\n            name=\"Ratio deviation \"\n            dataKey=\"deviation\"\n            type=\"monotone\"\n            fill=\"url(#chart-red-gradient)\"\n            stroke=\"var(--theme-red-color)\"\n            strokeWidth={2}\n          />\n        </ReCharts.AreaChart>\n      </ReCharts.ResponsiveContainer>\n    </Spin>\n  );\n};\n\nconst TrancheLiquidity = ({\n  tranche,\n  trancheAddress,\n  periodFilter,\n}: {\n  tranche: TrancheApiType;\n  trancheAddress: string;\n  periodFilter: PeriodTabsKey;\n}) => {\n  const [dataList, setDataList] = useState<TrancheLiquidityType[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const seAPI = useSeAPI();\n\n  useEffect(() => {\n    setLoading(true);\n    seAPI\n      .fetchTrancheLiquidity(trancheAddress, periodFilter)\n      .then(result => setDataList(result))\n      .catch(err => {\n        setDataList([]);\n        console.error(err);\n        AntdNotification.error({\n          message: err.data,\n        });\n      })\n      .finally(() => setLoading(false));\n  }, [trancheAddress, periodFilter]);\n\n  return (\n    <>\n      <Spin spinning={loading}>\n        <ReCharts.ResponsiveContainer width=\"100%\" height={300} className=\"mb-24\">\n          <ReCharts.AreaChart data={dataList} margin={{ left: 25 }}>\n            <defs>\n              <linearGradient id=\"chart-yellow-gradient\" gradientTransform=\"rotate(180)\">\n                <stop offset=\"0%\" stopColor=\"rgba(var(--theme-yellow-color-rgb), 0.08)\" />\n                <stop offset=\"100%\" stopColor=\"rgba(var(--theme-yellow-color-rgb), 0)\" />\n              </linearGradient>\n              <linearGradient id=\"chart-blue-gradient\" gradientTransform=\"rotate(180)\">\n                <stop offset=\"0%\" stopColor=\"rgba(var(--theme-blue-color-rgb), 0.08)\" />\n                <stop offset=\"100%\" stopColor=\"rgba(var(--theme-blue-color-rgb), 0)\" />\n              </linearGradient>\n            </defs>\n            <ReCharts.CartesianGrid vertical={false} strokeDasharray=\"3 0\" stroke=\"var(--theme-border-color)\" />\n            <ReCharts.XAxis\n              dataKey=\"point\"\n              axisLine={false}\n              tickLine={false}\n              tickFormatter={value => formatTick(value, periodFilter)}\n            />\n            <ReCharts.YAxis\n              axisLine={false}\n              tickLine={false}\n              tickFormatter={value =>\n                formatUSD(value, {\n                  compact: true,\n                }) ?? ''\n              }\n            />\n            <ReCharts.Tooltip\n              separator=\"\"\n              labelFormatter={value => (\n                <Text type=\"p2\" tag=\"span\" weight=\"semibold\" color=\"primary\">\n                  {typeof value === 'string' ? format(new Date(value), 'MM.dd.yyyy HH:mm') : ''}\n                </Text>\n              )}\n              formatter={(value: number, _: any, { dataKey }: any) => (\n                <Text type=\"p2\" tag=\"span\" weight=\"semibold\" color={dataKey === 'tokenALiquidity' ? 'yellow' : 'blue'}>\n                  {formatUSD(value)}\n                </Text>\n              )}\n            />\n            <ReCharts.Area\n              name={`${tranche.tokenA.symbol} Liquidity `}\n              dataKey=\"tokenALiquidity\"\n              type=\"monotone\"\n              fill=\"url(#chart-yellow-gradient)\"\n              stroke=\"var(--theme-yellow-color)\"\n              strokeWidth={2}\n            />\n            <ReCharts.Area\n              name={`${tranche.tokenB.symbol} Liquidity `}\n              dataKey=\"tokenBLiquidity\"\n              type=\"monotone\"\n              fill=\"url(#chart-blue-gradient)\"\n              stroke=\"var(--theme-blue-color)\"\n              strokeWidth={2}\n            />\n          </ReCharts.AreaChart>\n        </ReCharts.ResponsiveContainer>\n      </Spin>\n      <div className=\"flex flow-col justify-center col-gap-24 row-gap-16\">\n        <div className=\"chart-label\" style={{ '--dot-color': 'var(--theme-yellow-color)' } as React.CSSProperties}>\n          {tranche.tokenA.symbol} Liquidity\n        </div>\n        <div className=\"chart-label\" style={{ '--dot-color': 'var(--theme-blue-color)' } as React.CSSProperties}>\n          {tranche.tokenB.symbol} Liquidity\n        </div>\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport cn from 'classnames';\nimport { format } from 'date-fns';\nimport { formatPercent, formatToken, formatUSD } from 'web3/utils';\n\nimport Divider from 'components/antd/divider';\nimport { Tabs } from 'components/custom/tabs';\nimport { InfoTooltip } from 'components/custom/tooltip';\nimport { Text } from 'components/custom/typography';\nimport { useKnownTokens } from 'components/providers/knownTokensProvider';\nimport { TokenIcon } from 'components/token-icon';\nimport { useContract } from 'hooks/useContract';\nimport { TrancheApiType } from 'modules/smart-exposure/api';\nimport { useWallet } from 'wallets/walletProvider';\n\nimport { getRelativeTime } from 'utils';\n\nimport s from './s.module.scss';\n\nconst tabs = [\n  {\n    id: 'rebalancing',\n    children: 'Rebalancing details',\n  },\n  {\n    id: 'tranche',\n    children: 'Tranche details',\n  },\n];\n\ntype Props = {\n  tranche: TrancheApiType;\n};\n\nexport const Details: React.FC<Props> = ({ tranche }) => {\n  const [activeTab, setActiveTab] = useState('rebalancing');\n\n  return (\n    <section className=\"card\">\n      <header className={cn('card-header flex align-center', s.header)}>\n        <Tabs tabs={tabs} activeKey={activeTab} onClick={setActiveTab} variation=\"normal\" />\n      </header>\n      {activeTab === 'rebalancing' && <RebalancingDetails tranche={tranche} />}\n      {activeTab === 'tranche' && <TrancheDetails tranche={tranche} />}\n    </section>\n  );\n};\n\nconst RebalancingDetails = ({ tranche }: { tranche: TrancheApiType }) => {\n  const { getTokenBySymbol } = useKnownTokens();\n  const tokenA = getTokenBySymbol(tranche.tokenA.symbol);\n  const tokenB = getTokenBySymbol(tranche.tokenB.symbol);\n\n  return (\n    <>\n      <div className=\"flexbox-grid p-24\">\n        <div className=\"flex flow-row\">\n          <Text type=\"small\" weight=\"semibold\" color=\"secondary\" className=\"mb-4\">\n            Target ratio\n          </Text>\n          <Text type=\"p1\" weight=\"semibold\" color=\"primary\" className=\" flex align-center col-gap-4\">\n            <TokenIcon name={tokenA?.icon} size={16} /> {formatPercent(Number(tranche.tokenARatio))}\n            <span className=\"ph-4\">:</span> <TokenIcon name={tokenB?.icon} size={16} />{' '}\n            {formatPercent(Number(tranche.tokenBRatio))}\n          </Text>\n        </div>\n        <div className=\"flex flow-row\">\n          <Text type=\"small\" weight=\"semibold\" color=\"secondary\" className=\"mb-4\">\n            Current ratio\n          </Text>\n          <Text type=\"p1\" weight=\"semibold\" color=\"primary\" className=\" flex align-center col-gap-4\">\n            <TokenIcon name={tokenA?.icon} size={16} /> {formatPercent(Number(tranche.state.tokenACurrentRatio))}{' '}\n            <span className=\"ph-4\">:</span> <TokenIcon name={tokenB?.icon} size={16} />{' '}\n            {formatPercent(Number(tranche.state.tokenBCurrentRatio))}\n          </Text>\n        </div>\n      </div>\n      <Divider />\n      <div className=\"flexbox-grid p-24\">\n        <div className=\"flex flow-row\">\n          <Text type=\"small\" weight=\"semibold\" color=\"secondary\" className=\"flex align-middle col-gap-4 mb-4\">\n            Rebalancing Strategy\n            <InfoTooltip>\n              Rebalancing of the tranche is triggered based on the conditions the pool is set up with. They can be\n              either time or deviation based.\n            </InfoTooltip>\n          </Text>\n          <Text type=\"p1\" weight=\"semibold\" color=\"primary\" className=\"flex align-center\">\n            Every {getRelativeTime(tranche.rebalancingInterval) || '0 seconds'}\n          </Text>\n        </div>\n      </div>\n      <Divider />\n      <div className=\"flexbox-grid p-24\">\n        <div className=\"flex flow-row\">\n          <Text type=\"small\" weight=\"semibold\" color=\"secondary\" className=\"mb-4\">\n            Last rebalance\n          </Text>\n          {tranche.state.lastRebalance ? (\n            <>\n              <Text type=\"p1\" weight=\"semibold\" color=\"primary\" className=\"mb-4\">\n                {format(new Date(tranche.state.lastRebalance * 1000), 'dd.MM.yyyy')}\n              </Text>\n              <Text type=\"small\" weight=\"semibold\" color=\"secondary\">\n                {format(new Date(tranche.state.lastRebalance * 1000), 'HH:mm')}\n              </Text>\n            </>\n          ) : (\n            <Text type=\"p1\" weight=\"semibold\" color=\"primary\" className=\"mb-4\">\n              Always\n            </Text>\n          )}\n        </div>\n        <div className=\"flex flow-row\">\n          <Text type=\"small\" weight=\"semibold\" color=\"secondary\" className=\"mb-4\">\n            Conversion rate\n          </Text>\n          <Text type=\"p1\" weight=\"semibold\" color=\"primary\" className=\"mb-4\">\n            {formatUSD(tranche.state.eTokenPrice)}\n          </Text>\n          <Text type=\"small\" weight=\"semibold\" color=\"secondary\">\n            per eToken\n          </Text>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst TrancheDetails = ({ tranche }: { tranche: TrancheApiType }) => {\n  const wallet = useWallet();\n\n  const tokenAContract = useContract(tranche.tokenA.address, { loadBalance: true });\n  const tokenBContract = useContract(tranche.tokenB.address, { loadBalance: true });\n\n  const tokenABalance = BigNumber.from(\n    tokenAContract?.getBalanceOf(wallet.account)?.unscaleBy(tranche.tokenA.decimals),\n  );\n\n  const tokenBBalance = BigNumber.from(\n    tokenBContract?.getBalanceOf(wallet.account)?.unscaleBy(tranche.tokenB.decimals),\n  );\n\n  return (\n    <>\n      <div className=\"flexbox-grid p-24\">\n        <div className=\"flex flow-row\">\n          <Text type=\"small\" weight=\"semibold\" color=\"secondary\" className=\"mb-4\">\n            {tranche.tokenA.symbol} price\n          </Text>\n          <Text type=\"p1\" weight=\"semibold\" color=\"primary\">\n            {formatUSD(tranche.tokenA.state.price)}\n          </Text>\n        </div>\n        <div className=\"flex flow-row\">\n          <Text type=\"small\" weight=\"semibold\" color=\"secondary\" className=\"mb-4\">\n            {tranche.tokenB.symbol} price\n          </Text>\n          <Text type=\"p1\" weight=\"semibold\" color=\"primary\">\n            {formatUSD(tranche.tokenB.state.price)}\n          </Text>\n        </div>\n      </div>\n      <Divider />\n      <div className=\"flexbox-grid p-24\">\n        <div className=\"flex flow-row\">\n          <Text type=\"small\" weight=\"semibold\" color=\"secondary\" className=\"mb-4\">\n            Wallet {tranche.tokenA.symbol} balance\n          </Text>\n          <Text type=\"p1\" weight=\"semibold\" color=\"primary\" className=\"mb-4\">\n            {formatToken(tokenABalance) ?? '-'}\n          </Text>\n          <Text type=\"small\" weight=\"semibold\" color=\"secondary\">\n            {formatUSD(tokenABalance?.multipliedBy(tranche.tokenA.state.price) ?? 0)}\n          </Text>\n        </div>\n        <div className=\"flex flow-row\">\n          <Text type=\"small\" weight=\"semibold\" color=\"secondary\" className=\"mb-4\">\n            Wallet {tranche.tokenB.symbol} balance\n          </Text>\n          <Text type=\"p1\" weight=\"semibold\" color=\"primary\" className=\"mb-4\">\n            {formatToken(tokenBBalance) ?? '-'}\n          </Text>\n          <Text type=\"small\" weight=\"semibold\" color=\"secondary\">\n            {formatUSD(tokenBBalance?.multipliedBy(tranche.tokenB.state.price) ?? 0)}\n          </Text>\n        </div>\n      </div>\n      <Divider />\n      <div className=\"flexbox-grid p-24\">\n        <div className=\"flex flow-row\">\n          <Text type=\"small\" weight=\"semibold\" color=\"secondary\" className=\"mb-4\">\n            Pool {tranche.tokenA.symbol} balance\n          </Text>\n          <Text type=\"p1\" weight=\"semibold\" color=\"primary\" className=\"mb-4\">\n            {formatUSD(BigNumber.from(tranche.state.tokenALiquidity))}\n          </Text>\n          {/* <Text type=\"small\" weight=\"semibold\" color=\"secondary\">\n            {formatUSD(BigNumber.from(tranche.state.tokenALiquidity)?.multipliedBy(tranche.tokenA.state.price) ?? 0)}\n          </Text> */}\n        </div>\n        <div className=\"flex flow-row\">\n          <Text type=\"small\" weight=\"semibold\" color=\"secondary\" className=\"mb-4\">\n            Pool {tranche.tokenB.symbol} balance\n          </Text>\n          <Text type=\"p1\" weight=\"semibold\" color=\"primary\" className=\"mb-4\">\n            {formatUSD(BigNumber.from(tranche.state.tokenBLiquidity))}\n          </Text>\n          {/* <Text type=\"small\" weight=\"semibold\" color=\"secondary\">\n            {formatUSD(BigNumber.from(tranche.state.tokenBLiquidity)?.multipliedBy(tranche.tokenB.state.price) ?? 0)}\n          </Text> */}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\n\nimport Select from 'components/antd/select';\nimport TableFilter, { TableFilterType } from 'components/custom/table-filter';\nimport { TrancheApiType, TransactionApiType } from 'modules/smart-exposure/api';\nimport { TransactionsTable } from 'modules/smart-exposure/components/transactions-table';\n\ntype FiltersStateType = {\n  transactionType: TransactionApiType['transactionType'] | '';\n};\n\nconst initialFiltersState: FiltersStateType = {\n  transactionType: '',\n};\n\nconst filtersOptions: TableFilterType[] = [\n  {\n    name: 'transactionType',\n    label: 'Transaction type',\n    defaultValue: '',\n    itemRender: () => {\n      const tokenOpts = [\n        {\n          value: '',\n          label: 'All types',\n        },\n        {\n          value: 'DEPOSIT',\n          label: 'Deposit',\n        },\n        {\n          value: 'WITHDRAW',\n          label: 'Withdraw',\n        },\n      ];\n\n      return <Select options={tokenOpts} className=\"full-width\" />;\n    },\n  },\n];\n\nexport const TransactionsView = ({ tranche }: { tranche: TrancheApiType }) => {\n  const [filtersState, setFiltersState] = useState<FiltersStateType>(initialFiltersState);\n\n  function handleFilterChange(filters: Record<string, any>) {\n    setFiltersState(prevState => ({\n      ...prevState,\n      ...filters,\n    }));\n  }\n\n  return (\n    <div className=\"card\">\n      <header\n        className=\"flex align-center\"\n        style={{\n          borderBottom: '1px solid var(--theme-border-color)',\n          padding: '12px 16px 12px 24px',\n          overflowX: 'auto',\n        }}>\n        <div className=\"text-p1 fw-semibold color-primary mr-8\">Transaction history</div>\n        <TableFilter filters={filtersOptions} value={filtersState} onChange={handleFilterChange} className=\"ml-auto\" />\n      </header>\n      <TransactionsTable\n        transactionType={filtersState.transactionType || undefined}\n        eTokenAddress={tranche.eTokenAddress}\n      />\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport AntdNotification from 'antd/lib/notification';\nimport { format } from 'date-fns';\nimport * as ReCharts from 'recharts';\nimport { formatUSD } from 'web3/utils';\n\nimport Spin from 'components/antd/spin';\nimport { PeriodChartTabs, PeriodTabsKey } from 'components/custom/tabs';\nimport { ETokenPriceType, useSeAPI } from 'modules/smart-exposure/api';\n\nimport { formatTick } from 'utils/chart';\n\ntype PropsType = {\n  poolAddress: string;\n  trancheAddress: string;\n};\n\nexport const PriceTrend: React.FC<PropsType> = ({ poolAddress, trancheAddress }) => {\n  const [activeTab, setActiveTab] = useState<PeriodTabsKey>(PeriodTabsKey.day);\n  const [priceList, setDataList] = useState<ETokenPriceType[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const seAPI = useSeAPI();\n\n  useEffect(() => {\n    setLoading(true);\n    seAPI\n      .fetchETokenPrice(trancheAddress, activeTab)\n      .then(setDataList)\n      .catch(err => {\n        setDataList([]);\n        console.error(err);\n        AntdNotification.error({\n          message: err.data,\n        });\n      })\n      .finally(() => setLoading(false));\n  }, [trancheAddress, activeTab]);\n\n  return (\n    <section className=\"card\">\n      <header className=\"card-header flex align-center\" style={{ padding: '16px 16px 16px 24px' }}>\n        <div className=\"text-p1 fw-semibold color-primary mr-8\">eToken price trend</div>\n        <PeriodChartTabs activeKey={activeTab} onClick={setActiveTab} size=\"small\" className=\"ml-auto\" />\n      </header>\n      <div className=\"p-24\">\n        <Spin spinning={loading}>\n          <ReCharts.ResponsiveContainer width=\"100%\" height={300} className=\"mb-24\">\n            <ReCharts.AreaChart data={priceList}>\n              <defs>\n                <linearGradient id=\"chart-red-gradient\" gradientTransform=\"rotate(180)\">\n                  <stop offset=\"0%\" stopColor=\"rgba(var(--theme-red-color-rgb), 0.08)\" />\n                  <stop offset=\"100%\" stopColor=\"rgba(var(--theme-red-color-rgb), 0)\" />\n                </linearGradient>\n              </defs>\n              <ReCharts.CartesianGrid vertical={false} strokeDasharray=\"3 0\" stroke=\"var(--theme-border-color)\" />\n              <ReCharts.XAxis\n                dataKey=\"point\"\n                axisLine={false}\n                tickLine={false}\n                tickFormatter={value => formatTick(value, activeTab)}\n              />\n              <ReCharts.YAxis\n                axisLine={false}\n                tickLine={false}\n                tickFormatter={value =>\n                  Intl.NumberFormat('en', { notation: 'compact', style: 'currency', currency: 'USD' }).format(value)\n                }\n              />\n              <ReCharts.Tooltip\n                separator=\"\"\n                labelFormatter={value => (\n                  <span className=\"text-p2 fw-semibold color-primary\">\n                    {value ? format(new Date(value), 'MM.dd.yyyy HH:mm') : ''}\n                  </span>\n                )}\n                formatter={(value: number, _: any, { dataKey }: any) => (\n                  <span className=\"text-p2 fw-semibold color-red\">{formatUSD(value)}</span>\n                )}\n              />\n              <ReCharts.Area\n                name=\"Value \"\n                dataKey=\"eTokenPrice\"\n                type=\"monotone\"\n                fill=\"url(#chart-red-gradient)\"\n                stroke=\"var(--theme-red-color)\"\n                strokeWidth={2}\n              />\n            </ReCharts.AreaChart>\n          </ReCharts.ResponsiveContainer>\n        </Spin>\n      </div>\n    </section>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport classNames from 'classnames';\nimport { formatPercent } from 'web3/utils';\n\n// import { DropdownList } from 'components/custom/dropdown';\nimport Icon from 'components/custom/icon';\nimport { useKnownTokens } from 'components/providers/knownTokensProvider';\nimport { TokenIconPair } from 'components/token-icon';\nimport { TrancheApiType, useSeAPI } from 'modules/smart-exposure/api';\nimport { useWallet } from 'wallets/walletProvider';\n\nimport { Charts } from './charts';\nimport { Details } from './details';\nimport { TransactionsView } from './transactions';\nimport { PriceTrend } from './trend';\n\nimport s from './s.module.scss';\n\nconst TrancheView: React.FC = () => {\n  const { pool: poolAddress, tranche: trancheAddress } = useParams<{ pool: string; tranche: string }>();\n  const location = useLocation();\n  const wallet = useWallet();\n  const [tranche, setTranche] = useState<TrancheApiType>();\n  const { getTokenBySymbol } = useKnownTokens();\n  const seAPI = useSeAPI();\n\n  useEffect(() => {\n    seAPI.fetchTranche(trancheAddress).then(result => {\n      setTranche(result);\n    });\n  }, [trancheAddress]);\n\n  if (!tranche) {\n    return null;\n  }\n\n  const tokenA = getTokenBySymbol(tranche.tokenA.symbol);\n  const tokenB = getTokenBySymbol(tranche.tokenB.symbol);\n\n  return (\n    <>\n      <div className=\"flex mb-16\">\n        <Link to=\"/smart-exposure/pools\" className=\"button-text\">\n          <Icon name=\"arrow-back\" color=\"inherit\" className=\"mr-8\" />\n          Tranches\n        </Link>\n      </div>\n      <div className=\"flex align-center mb-40\">\n        <div className=\"flex\">\n          <TokenIconPair name1={tokenA?.icon} name2={tokenB?.icon} size={40} className=\"mr-16\" />\n          <div>\n            <div className=\"text-p1 fw-semibold color-primary mr-4\">\n              {`${formatPercent(Number(tranche.tokenARatio))} ${tokenA?.symbol} / ${formatPercent(\n                Number(tranche.tokenBRatio),\n              )} ${tokenB?.symbol}`}\n            </div>\n            <div className=\"text-sm fw-semibold color-secondary\">{`${tokenA?.name} / ${tokenB?.name}`}</div>\n          </div>\n        </div>\n\n        <div className=\"flex col-gap-24 ml-auto\">\n          <Link\n            to={`${location.pathname}/deposit`}\n            className={classNames('button-primary', { disabled: !wallet.account })}>\n            Deposit\n          </Link>\n          <Link\n            to={`${location.pathname}/withdraw`}\n            className={classNames('button-ghost', { disabled: !wallet.account })}>\n            Withdraw\n          </Link>\n          {/* <DropdownList\n              items={[\n                {\n                  to: `${location.pathname}/change-tranche`,\n                  children: 'Change tranche',\n                },\n              ]}\n              options={{\n                placement: 'bottom-end',\n              }}>\n              {({ ref, setOpen, open }) => (\n                <button\n                  type=\"button\"\n                  className=\"button-ghost-alt button-icon\"\n                  ref={ref}\n                  onClick={() => setOpen(isOpen => !isOpen)}>\n                  <Icon name=\"vertical-dots\" />\n                </button>\n              )}\n            </DropdownList> */}\n        </div>\n      </div>\n      <div className={cn(s.trendDetailsRow, 'mb-32')}>\n        <PriceTrend poolAddress={poolAddress} trancheAddress={trancheAddress} />\n        <Details tranche={tranche} />\n      </div>\n      <Charts tranche={tranche} className=\"mb-32\" />\n      <TransactionsView tranche={tranche} />\n    </>\n  );\n};\n\nexport default TrancheView;\n"],"sourceRoot":""}