{"version":3,"sources":["components/custom/spinner/index.tsx","components/custom/pagination/index.tsx","components/custom/table/index.tsx","components/custom/spinner/s.module.scss","components/custom/pagination/s.module.scss","components/custom/table/s.module.scss","components/custom/tooltip/index.tsx","components/custom/progress/s.module.scss","components/custom/progress/index.tsx","modules/smart-exposure/views/pools-view/table/index.tsx","modules/smart-exposure/views/pools-view/index.tsx"],"names":["Spinner","className","children","spinning","restProps","s","container","name","classNames","spinner","Pagination","total","current","pageSize","onChange","pages","Math","ceil","paginationList","useMemo","last","l","delta","left","right","range","rangeWithDots","push","i","forEach","pagination","cn","page","prev","type","onClick","disabled","rotate","size","map","idx","active","separator","next","Table","columns","data","loading","rowKey","variation","link","history","useHistory","tableContainer","table","clickable","dataIdx","heading","align","undefined","item","itemIdx","Render","render","color","arrowIcon","style","width","height","position","marginTop","marginLeft","TableFooter","text","generatedText","from","to","generateText","tableFooter","weight","module","exports","InfoTooltip","title","flexShrink","TranchePercentageProgress","target","value","backgroundColor","progressColor","currentColor","max","progress","formatPercent","tableColumns","getTokenBySymbol","useKnownTokens","tokenA","symbol","tokenB","icon","Number","tokenARatio","state","tokenACurrentRatio","tokenBRatio","tokenBCurrentRatio","formatUSD","tokenALiquidity","tokenBLiquidity","eTokenPrice","eTokenSymbol","poolAddress","eTokenAddress","PairsTable","pool","useState","tranches","setTranches","seAPI","useSeAPI","useEffect","fetchTranches","then","RatioLabel","PoolsView","pools","setPools","selectedPools","setSelectedPools","fetchPools","result","poolsToDisplay","length","totalValueLocked","reduce","acc","poolLiquidity","isSelected","includes","newSelection","filter","ps","name1","name2","poolName","href","rel","getRelativeTime","rebalancingInterval","lastRebalance","format","Date"],"mappings":"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","file":"static/js/pools-view.cc814173.chunk.js","sourcesContent":["import classNames from 'classnames';\n\nimport { Icon } from 'components/icon';\nimport { FCx } from 'components/types.tx';\n\nimport s from './s.module.scss';\n\ntype PropsType = {\n  spinning?: boolean;\n};\n\nexport const Spinner: FCx<PropsType> = ({ className, children, spinning, ...restProps }) => {\n  if (children) {\n    if (spinning) {\n      return (\n        <div className={s.container}>\n          <div className={s.children}>{children}</div>\n          <Icon name=\"loader\" className={classNames(s.spinner, className)} {...restProps} />\n        </div>\n      );\n    }\n\n    return <>{children}</>;\n  }\n\n  return <Icon name=\"loader\" className={classNames(s.spinner, className)} {...restProps} />;\n};\n","import { useMemo } from 'react';\nimport cn from 'classnames';\n\nimport { Icon } from 'components/icon';\n\nimport s from './s.module.scss';\n\n/**\n * @param {number} current\n * @param {number} last\n * @param {number} [delta=2]\n */\nfunction pagination(current: number, last: number, delta: number = 2) {\n  const left = current - delta;\n  const right = current + delta + 1;\n  const range: number[] = [];\n  const rangeWithDots: (number | null)[] = [];\n  let l: number;\n\n  if (last < 2) {\n    return [1];\n  }\n\n  range.push(1);\n  for (let i = current - delta; i <= current + delta; i++) {\n    if (i >= left && i < right && i < last && i > 1) {\n      range.push(i);\n    }\n  }\n  range.push(last);\n\n  range.forEach(i => {\n    if (l) {\n      if (i - l === 2) {\n        rangeWithDots.push(l + 1);\n      } else if (i - l !== 1) {\n        rangeWithDots.push(null);\n      }\n    }\n    rangeWithDots.push(i);\n    l = i;\n  });\n\n  return rangeWithDots;\n}\n\ntype Props = {\n  className?: string;\n  total: number;\n  current: number;\n  pageSize: number;\n  onChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({ className, total, current, pageSize, onChange }) => {\n  const pages = Math.ceil(total / pageSize);\n  const paginationList = useMemo(() => pagination(current, pages), [current, pages]);\n\n  if (pages < 2) {\n    return null;\n  }\n\n  return (\n    <div className={cn(s.pagination, className)}>\n      <button\n        className={cn(s.page, s.prev)}\n        type=\"button\"\n        onClick={() => onChange(current - 1)}\n        disabled={current <= 1}>\n        <Icon name=\"chevron\" rotate={180} size={24} />\n      </button>\n      {paginationList.map((page, idx) =>\n        page ? (\n          <button\n            key={idx}\n            onClick={() => onChange(page)}\n            className={cn(s.page, {\n              [s.active]: page === current,\n            })}\n            type=\"button\"\n            disabled={page === current}>\n            {page}\n          </button>\n        ) : (\n          <div key={idx} className={s.separator}>\n            ...\n          </div>\n        ),\n      )}\n      <button\n        className={cn(s.page, s.next)}\n        type=\"button\"\n        onClick={() => onChange(current + 1)}\n        disabled={current >= pages}>\n        <Icon name=\"chevron\" size={24} />\n      </button>\n    </div>\n  );\n};\n","import { useHistory } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Pagination } from 'components/custom/pagination';\nimport { Spinner } from 'components/custom/spinner';\nimport { Text } from 'components/custom/typography';\nimport { Icon } from 'components/icon';\n\nimport s from './s.module.scss';\n\nexport type ColumnType<T> = {\n  heading: React.ReactNode;\n  render: (item: T) => React.ReactElement;\n  align?: 'center' | 'right';\n};\n\ntype Props<T> = {\n  columns: ColumnType<T>[];\n  data: T[];\n  loading?: boolean;\n  rowKey?: (item: T) => string;\n  variation?: 'standard' | 'separated';\n  link?: (item: T) => string;\n};\n\nexport const Table = <T extends Record<string, any>>({\n  columns,\n  data,\n  loading,\n  rowKey,\n  variation = 'standard',\n  link,\n}: Props<T>) => {\n  const history = useHistory();\n\n  return (\n    <div\n      className={classNames('table-container', s.tableContainer, {\n        [s.loading]: loading,\n      })}>\n      <table\n        className={classNames(s.table, {\n          table: variation === 'standard',\n          'table-separated': variation === 'separated',\n          [s.clickable]: link,\n          [s.loading]: loading,\n        })}>\n        <thead>\n          <tr>\n            {columns.map(({ heading, align }, dataIdx) => (\n              <th key={dataIdx} className={align ? `text-${align}` : undefined}>\n                {heading}\n              </th>\n            ))}\n            {link ? <th /> : null}\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((item, itemIdx) => (\n            <tr key={rowKey?.(item) ?? itemIdx} onClick={link ? () => history.push(link(item)) : undefined}>\n              {columns.map(({ render: Render, align }, dataIdx) => (\n                <td key={dataIdx} className={align ? `text-${align}` : undefined}>\n                  <Render {...item} />\n                </td>\n              ))}\n              {link ? (\n                <td>\n                  <Icon name=\"arrow\" color=\"red\" className={s.arrowIcon} />\n                </td>\n              ) : null}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {loading && (\n        <Spinner\n          className={s.spinner}\n          style={{\n            width: 40,\n            height: 40,\n            position: 'absolute',\n            marginTop: -20,\n            marginLeft: -20,\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\ntype TableFooterType = {\n  total: number;\n  current: number;\n  pageSize: number;\n  children?: JSX.Element | (({ total, from, to }: { total: number; from: number; to: number }) => JSX.Element);\n  onChange: (page: number) => void;\n  text?: boolean | (({ total, from, to }) => React.ReactNode);\n};\n\nexport const TableFooter: React.FC<TableFooterType> = ({ children, text, total, current, pageSize, onChange }) => {\n  const generatedText = generateText({ text, total, current, pageSize });\n  return (\n    <div className={classNames(s.tableFooter, 'p-24')}>\n      {generatedText ? (\n        <Text type=\"p2\" weight=\"semibold\" color=\"secondary\">\n          {generatedText}\n        </Text>\n      ) : null}\n      <Pagination total={total} current={current} pageSize={pageSize} onChange={onChange} />\n    </div>\n  );\n};\n\nfunction generateText({ text, total, current, pageSize }) {\n  let generatedText: React.ReactNode;\n  if (text) {\n    const from = total ? (current - 1) * pageSize + 1 : 0;\n    const to = current * pageSize > total ? total : current * pageSize;\n\n    if (typeof text === 'function') {\n      generatedText = text({\n        total,\n        from,\n        to,\n      });\n    }\n\n    if (text === true) {\n      generatedText = (\n        <>\n          Showing {from} to {to} out of {total} entries\n        </>\n      );\n    }\n  }\n\n  return generatedText;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"s_spinner__2lxg5\",\"rotate\":\"s_rotate__K9I_G\",\"container\":\"s_container__2DwVy\",\"children\":\"s_children__1ZC_G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"s_pagination__3UMZt\",\"page\":\"s_page__29oPu\",\"separator\":\"s_separator__1n_F1\",\"prev\":\"s_prev__2g1Q9\",\"next\":\"s_next__d_WwI\",\"active\":\"s_active__ec-7d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"s_tableContainer__2Dki2\",\"loading\":\"s_loading__1OMuZ\",\"table\":\"s_table__Nd1Ke\",\"clickable\":\"s_clickable__1x0tg\",\"arrowIcon\":\"s_arrowIcon__1zygh\",\"tableFooter\":\"s_tableFooter__3iZZl\",\"spinner\":\"s_spinner__1axuf\"};","import Tooltip from 'components/antd/tooltip';\nimport { Icon } from 'components/icon';\n\ntype PropsType = {\n  className?: string;\n  style?: React.CSSProperties;\n};\n\nexport const InfoTooltip: React.FC<PropsType> = ({ children, className, style }) => (\n  <Tooltip title={children}>\n    <Icon\n      name=\"info\"\n      size={16}\n      className={className}\n      style={{\n        flexShrink: 0,\n        ...style,\n      }}\n    />\n  </Tooltip>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress\":\"s_progress__Zi7Jh\"};","import { formatPercent } from 'web3/utils';\n\nimport s from './s.module.scss';\n\ntype TranchePercentageProgressPropsType = {\n  target: number;\n  value: number;\n  backgroundColor?: string;\n  progressColor?: string;\n};\n\nexport const TranchePercentageProgress: React.FC<TranchePercentageProgressPropsType> = ({\n  target,\n  value,\n  backgroundColor = '#627EEA',\n  progressColor = '#F7931A',\n}) => {\n  let currentColor = 'transparent';\n  if (value < target) {\n    currentColor = progressColor;\n  }\n  if (value > target) {\n    currentColor = backgroundColor;\n  }\n\n  return (\n    <progress\n      max=\"100\"\n      value={target * 100}\n      className={s.progress}\n      style={\n        {\n          '--background-color': backgroundColor,\n          '--progress-color': progressColor,\n          '--current-color': currentColor,\n          '--current-progress': value * 100,\n          '--target-progress': target * 100,\n        } as React.CSSProperties\n      }>\n      {formatPercent(target)}\n    </progress>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { formatPercent, formatUSD } from 'web3/utils';\n\nimport { TranchePercentageProgress } from 'components/custom/progress';\nimport { ColumnType, Table } from 'components/custom/table';\nimport { InfoTooltip } from 'components/custom/tooltip';\nimport { Icon } from 'components/icon';\nimport { useKnownTokens } from 'components/providers/knownTokensProvider';\nimport { TokenIcon } from 'components/token-icon';\nimport { PoolApiType, TranchesItemApiType, useSeAPI } from 'modules/smart-exposure/api';\n\nconst tableColumns: ColumnType<TranchesItemApiType>[] = [\n  {\n    heading: (\n      <div className=\"flex align-center col-gap-4\">\n        Target & current ratio{' '}\n        <InfoTooltip>The target funds ratio (top) and the current actual ratio (bottom)</InfoTooltip>\n      </div>\n    ),\n    render: function Render(item) {\n      const { getTokenBySymbol } = useKnownTokens();\n      const tokenA = getTokenBySymbol(item.tokenA.symbol);\n      const tokenB = getTokenBySymbol(item.tokenB.symbol);\n\n      return (\n        <>\n          <div className=\"flex col-gap-32 mb-8\">\n            <div className=\"flex\">\n              <TokenIcon name={tokenA?.icon} className=\"mr-8\" />\n              <div>\n                <div className=\"text-p1 fw-semibold color-primary\">{formatPercent(Number(item.tokenARatio))}</div>\n                <RatioLabel current={Number(item.state.tokenACurrentRatio)} target={Number(item.tokenARatio)} />\n              </div>\n            </div>\n            <div>\n              <div className=\"flex\">\n                <TokenIcon name={tokenB?.icon} className=\"mr-8\" />\n                <div>\n                  <div className=\"text-p1 fw-semibold color-primary\">{formatPercent(Number(item.tokenBRatio))}</div>\n                  <RatioLabel current={Number(item.state.tokenBCurrentRatio)} target={Number(item.tokenBRatio)} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <TranchePercentageProgress target={Number(item.tokenARatio)} value={Number(item.state.tokenACurrentRatio)} />\n        </>\n      );\n    },\n  },\n  {\n    heading: (\n      <div className=\"flex align-center col-gap-4\">\n        Tranche liquidity <InfoTooltip>Total value locked in the tranche</InfoTooltip>\n      </div>\n    ),\n    render: item => (\n      <div className=\"text-p1 fw-semibold color-primary\">\n        {formatUSD(Number(item.state.tokenALiquidity) + Number(item.state.tokenBLiquidity))}\n      </div>\n    ),\n  },\n  // {\n  //   heading: (\n  //     <div className=\"flex align-center col-gap-4\">\n  //       Performance since inception{' '}\n  //       <InfoTooltip>Overall performance of a hypothetical investment made at inception of the tranche</InfoTooltip>\n  //     </div>\n  //   ),\n  //   render: function PerformanceSinceInception(item) {\n  //     const { ePoolHelperContract } = useSEPools();\n  //     const [value, setValue] = useState<BigNumber | undefined>();\n\n  //     useEffect(() => {\n  //       ePoolHelperContract\n  //         .getTokenATokenBForEToken(item.poolAddress, item.eTokenAddress, new BigNumber(item.sFactorE))\n  //         .then(({ amountA, amountB }) => {\n  //           const tokenBTransformedInTokenA = amountB\n  //             .dividedBy(10 ** item.tokenB.decimals)\n  //             .multipliedBy(item.tokenB.state.price)\n  //             .dividedBy(item.tokenA.state.price);\n  //           setValue(\n  //             amountA\n  //               .dividedBy(10 ** item.tokenA.decimals)\n  //               .plus(tokenBTransformedInTokenA)\n  //               .minus(1),\n  //           );\n  //         });\n  //     }, [\n  //       ePoolHelperContract,\n  //       item.eTokenAddress,\n  //       item.poolAddress,\n  //       item.sFactorE,\n  //       item.tokenA.decimals,\n  //       item.tokenA.state.price,\n  //       item.tokenB.decimals,\n  //       item.tokenB.state.price,\n  //     ]);\n\n  //     let color: 'green' | 'red' | 'grey' = 'grey';\n  //     let sign = '';\n  //     if (value?.isGreaterThan(0)) {\n  //       color = 'green';\n  //       sign = '+';\n  //     }\n  //     if (value?.isLessThan(0)) {\n  //       color = 'red';\n  //       sign = '-';\n  //     }\n\n  //     return <Badge color={color} size=\"large\">{`${sign} ${formatPercent(value?.abs(), 2) ?? '-'}`}</Badge>;\n  //   },\n  // },\n  {\n    heading: (\n      <div className=\"flex align-center col-gap-4\">\n        Exposure token conversion rate{' '}\n        <InfoTooltip>1 token of this tranche can be redeemed for this amount</InfoTooltip>\n      </div>\n    ),\n    render: item => (\n      <>\n        <div className=\"text-p1 fw-semibold color-primary\">{formatUSD(item.state.eTokenPrice)}</div>\n        <div className=\"text-sm fw-semibold color-secondary text-nowrap\">per {item.eTokenSymbol}</div>\n      </>\n    ),\n  },\n  {\n    heading: '',\n    render: item => (\n      <NavLink to={`/smart-exposure/pools/${item.poolAddress}/${item.eTokenAddress}`} className=\"button-ghost\">\n        View details\n      </NavLink>\n    ),\n  },\n];\n\ntype Props = {\n  pool: PoolApiType;\n};\n\nexport const PairsTable: React.FC<Props> = ({ pool }) => {\n  const [tranches, setTranches] = useState<TranchesItemApiType[]>([]);\n  const seAPI = useSeAPI();\n\n  useEffect(() => {\n    seAPI.fetchTranches(pool.poolAddress).then(setTranches);\n  }, [pool.poolAddress]);\n\n  return <Table<TranchesItemApiType> columns={tableColumns} data={tranches} />;\n};\n\ntype RatioLabelPropsType = {\n  current: number;\n  target: number;\n};\n\nconst RatioLabel: React.FC<RatioLabelPropsType> = ({ current, target }) => {\n  if (current < target) {\n    return (\n      <div className=\"text-sm fw-semibold color-red flex\">\n        {formatPercent(current)}\n        <Icon name=\"arrow\" rotate={45} className=\"mr-8\" size={16} color=\"red\" />\n      </div>\n    );\n  }\n  if (current > target) {\n    return (\n      <div className=\"text-sm fw-semibold color-green flex\">\n        {formatPercent(current)}\n        <Icon name=\"arrow\" rotate={315} className=\"mr-8\" size={16} color=\"green\" />\n      </div>\n    );\n  }\n\n  return <div className=\"text-sm fw-semibold color-secondary flex\">{formatPercent(current)}</div>;\n};\n","import { Fragment, useEffect, useMemo, useState } from 'react';\nimport cn from 'classnames';\nimport { format } from 'date-fns';\nimport { formatUSD } from 'web3/utils';\n\nimport Tooltip from 'components/antd/tooltip';\nimport IconOld from 'components/custom/icon';\nimport { InfoTooltip } from 'components/custom/tooltip';\nimport { Text } from 'components/custom/typography';\nimport { Icon } from 'components/icon';\nimport { useKnownTokens } from 'components/providers/knownTokensProvider';\nimport { TokenIconNames, TokenIconPair } from 'components/token-icon';\nimport { PoolApiType, useSeAPI } from 'modules/smart-exposure/api';\n\nimport { PairsTable } from './table';\n\nimport { getRelativeTime } from 'utils';\n\nconst PoolsView: React.FC = () => {\n  const [pools, setPools] = useState<PoolApiType[]>([]);\n  const [selectedPools, setSelectedPools] = useState<PoolApiType[]>([]);\n  const { getTokenBySymbol } = useKnownTokens();\n  const seAPI = useSeAPI();\n\n  useEffect(() => {\n    seAPI.fetchPools().then(result => {\n      setPools(result ?? []);\n    });\n  }, []);\n\n  const poolsToDisplay = selectedPools.length ? selectedPools : pools;\n\n  const totalValueLocked = useMemo(\n    () => pools.reduce((acc, pool) => acc + Number(pool.state.poolLiquidity), 0),\n    [pools],\n  );\n\n  return (\n    <>\n      <div className=\"tab-cards mb-40\">\n        {pools.map(pool => {\n          const tokenA = getTokenBySymbol(pool.tokenA.symbol);\n          const tokenB = getTokenBySymbol(pool.tokenB.symbol);\n          const isActive = true; // poolsCtx.pools.some(p => p.protocolId === market.id);\n          const isSelected = selectedPools.includes(pool);\n\n          return (\n            <button\n              key={pool.poolName}\n              type=\"button\"\n              className={cn('tab-card', isActive && isSelected && 'active')}\n              disabled={!isActive}\n              style={{ color: !isActive ? 'red' : '' }}\n              onClick={() => {\n                const newSelection = selectedPools.includes(pool)\n                  ? selectedPools.filter(ps => ps !== pool)\n                  : [...selectedPools, pool];\n                setSelectedPools(newSelection);\n                // setMarketsSelection(newSelection.map(m => m.id).join('<#>'));\n              }}>\n              <TokenIconPair\n                name1={tokenA?.icon as TokenIconNames}\n                name2={tokenB?.icon as TokenIconNames}\n                size={40}\n                className=\"mr-16\"\n              />\n              <div>\n                <Text type=\"p1\" weight=\"semibold\" color=\"primary\">\n                  {pool.poolName}\n                </Text>\n                <Text type=\"small\" weight=\"semibold\" color=\"secondary\">\n                  Pools\n                </Text>\n              </div>\n              <IconOld\n                name={isActive && isSelected ? 'checkbox-checked' : 'checkbox'}\n                style={{\n                  marginLeft: 24,\n                  flexShrink: 0,\n                }}\n              />\n            </button>\n          );\n        })}\n      </div>\n\n      <Text type=\"p1\" weight=\"semibold\" color=\"secondary\" className=\"mb-4\">\n        Total value locked\n      </Text>\n      <div className=\"mb-40 flex align-center\">\n        <Text type=\"h2\" weight=\"bold\" color=\"primary\" className=\"mr-8\">\n          {formatUSD(totalValueLocked)}\n        </Text>\n        <Tooltip\n          title={\n            <>\n              The BarnBridge SMART Exposure contracts are covered by:\n              <br /> - Bridge Mutual,{' '}\n              <a\n                href=\"https://app.bridgemutual.io/user/cover/0xdb9A242cfD588507106919051818e771778202e9\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\">\n                click here\n              </a>{' '}\n              to purchase coverage\n            </>\n          }>\n          <Icon name=\"insured\" color=\"green\" size={32} />\n        </Tooltip>\n      </div>\n\n      {poolsToDisplay.map(pool => {\n        const tokenA = getTokenBySymbol(pool.tokenA.symbol);\n        const tokenB = getTokenBySymbol(pool.tokenB.symbol);\n\n        return (\n          <Fragment key={pool.poolAddress}>\n            <div className=\"card mb-8 p-24 flex wrap align-center col-gap-64 row-gap-16\">\n              <div className=\"flex\">\n                <TokenIconPair\n                  name1={tokenA?.icon as TokenIconNames}\n                  name2={tokenB?.icon as TokenIconNames}\n                  size={40}\n                  className=\"mr-16\"\n                />\n                <div>\n                  <Text type=\"p1\" weight=\"semibold\" color=\"primary\" className=\"mb-4\">\n                    {pool.poolName} total liquidity\n                  </Text>\n                  <Text type=\"small\" weight=\"semibold\" color=\"secondary\">\n                    {formatUSD(pool.state.poolLiquidity)}\n                  </Text>\n                </div>\n              </div>\n              <div>\n                <Text type=\"small\" weight=\"semibold\" color=\"secondary\" className=\"flex align-middle col-gap-4 mb-4\">\n                  Rebalancing Strategy\n                  <InfoTooltip>\n                    Rebalancing of the tranche is triggered based on the conditions the pool is set up with. They can be\n                    either time or deviation based.\n                  </InfoTooltip>\n                </Text>\n                <Text type=\"p1\" weight=\"semibold\" color=\"primary\" className=\"flex align-center\">\n                  Every {getRelativeTime(pool.state.rebalancingInterval) || '0 seconds'}\n                </Text>\n              </div>\n              <div>\n                <Text type=\"small\" weight=\"semibold\" color=\"secondary\" className=\"mb-4\">\n                  Last rebalance\n                </Text>\n                <Text type=\"p1\" weight=\"semibold\" color=\"primary\" className=\"flex align-center\">\n                  {pool.state.lastRebalance\n                    ? format(new Date(pool.state.lastRebalance * 1000), 'dd.MM.yyyy HH:mm')\n                    : 'Always'}\n                </Text>\n              </div>\n            </div>\n\n            <div className=\"card mb-32\">\n              <PairsTable pool={pool} />\n            </div>\n          </Fragment>\n        );\n      })}\n    </>\n  );\n};\n\nexport default PoolsView;\n"],"sourceRoot":""}