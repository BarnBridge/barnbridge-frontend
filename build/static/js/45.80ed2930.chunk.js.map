{"version":3,"sources":["components/antd/form/index.tsx","components/antd/divider/index.tsx","components/antd/form/s.module.scss","components/antd/divider/s.module.scss","components/antd/input/index.tsx","components/custom/slider/index.tsx","components/custom/token-amount-new/index.tsx","components/custom/dropdown/index.tsx","components/custom/dropdown/s.module.scss","components/custom/slider/s.module.scss","components/custom/token-amount-new/s.module.scss","components/antd/input/s.module.scss","components/custom/transaction-details/index.tsx","components/custom/transaction-details/s.module.scss","modules/smart-exposure/views/change-tranche-view/index.tsx"],"names":["Form","props","className","children","formProps","cn","s","form","layout","requiredMark","Item","label","hint","extra","itemProps","item","flow","gap","align","title","name","size","List","listProps","Divider","dividerProps","divider","module","exports","Input","disabled","inputProps","component","autoComplete","Slider","value","rest","max","Number","slicedMax","Math","floor","percent","type","input","style","TokenAmount","forwardRef","ref","onChange","before","secondary","classNameBefore","slider","errors","decimals","maxValue","BigNumber","from","ZERO","classNames","tokenAmount","error","length","tokenAmountBefore","tokenAmountValues","tokenAmountValue","inputMode","pattern","onWheel","ev","currentTarget","blur","e","target","tokenAmountHint","isZero","alignSelf","onClick","toString","map","idx","weight","color","marginTop","tokenAmountSlider","min","step","TokenAmountPreview","tokenAmountPreview","tokenAmountPreviewBefore","tokenAmountPreviewValues","tokenAmountPreviewValue","readOnly","tokenAmountPreviewHint","TokenSelect","tokens","getTokenBySymbol","useKnownTokens","foundToken","items","reduce","acc","token","found","icon","symbol","setOpen","open","isOpen","tokenAmountSelectToken","marginLeft","modifiers","options","offset","enabled","phase","requires","fn","state","styles","popper","minWidth","rects","reference","width","effect","elements","offsetWidth","DropdownBase","content","React","useState","referenceElement","useRef","popperElement","usePopper","current","placement","strategy","attributes","forceUpdate","useEffect","outyInstance","nodes","referenceWrapEl","push","popperEl","outy","remove","ReactDOM","createPortal","display","document","querySelector","body","DropdownList","tokenSelectList","href","tokenSelectListButton","to","Dropdown","dropdown","dropdownChevron","transform","SLIPPAGE_OPTIONS","TransactionCustomization","showSlippage","slippage","showDeadline","deadline","Antd","useForm","handleValuesChange","useCallback","values","strValue","String","slice","setFieldsValue","handleReset","resetFields","handleFinish","initialValues","validateTrigger","onValuesChange","onFinish","opt","rules","required","message","validator","_","Promise","resolve","reject","noStyle","deadlineInput","suffix","htmlType","TransactionDetails","slippageHint","visible","setVisible","handleChange","container","overlayStyle","onVisibleChange","text","ChangeTrancheView","useParams","poolAddress","pool","trancheAddress","tranche","setTranche","seAPI","useSeAPI","fetchTranche","then","result","console","log","tokenState","setTokenState","useMemo","selectedToken","setSelectedToken","tokenA","tokenB","maxWidth","name1","name2","tokenARatio","tokenBRatio","height","placeholder","fd"],"mappings":"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","file":"static/js/45.80ed2930.chunk.js","sourcesContent":["import React from 'react';\nimport AntdForm, {\n  FormItemProps as AntdFormItemProps,\n  FormListProps as AntdFormListProps,\n  FormProps as AntdFormProps,\n} from 'antd/lib/form';\nimport cn from 'classnames';\n\nimport { Icon } from 'components/icon';\n\nimport Grid from '../../custom/grid';\nimport Tooltip from '../tooltip';\n\nimport s from './s.module.scss';\n\nexport type FormListProps = AntdFormListProps;\n\nconst FormList: React.FC<FormListProps> = props => {\n  const { children, ...listProps } = props;\n\n  return <AntdForm.List {...listProps}>{children}</AntdForm.List>;\n};\n\nexport type FormItemProps = AntdFormItemProps<any> & {\n  hint?: string;\n};\n\nconst FormItem: React.FC<FormItemProps> = props => {\n  const { className, label, hint, extra, children, ...itemProps } = props;\n\n  return (\n    <AntdForm.Item\n      className={cn(s.item, className)}\n      {...itemProps}\n      label={\n        <>\n          <Grid flow=\"col\" gap={4} align=\"center\">\n            {label}\n            {hint && (\n              <Tooltip title={hint}>\n                <span>\n                  <Icon name=\"info\" size={15} />\n                </span>\n              </Tooltip>\n            )}\n          </Grid>\n          {extra}\n        </>\n      }>\n      {children}\n    </AntdForm.Item>\n  );\n};\n\nexport type FormProps = AntdFormProps;\n\nconst Form: React.FC<FormProps> = props => {\n  const { className, children, ...formProps } = props;\n\n  return (\n    <AntdForm className={cn(s.form, className)} layout=\"vertical\" requiredMark={false} {...formProps}>\n      {children}\n    </AntdForm>\n  );\n};\n\nexport type StaticFormProps = {\n  Item: React.FC<FormItemProps>;\n  List: React.FC<FormListProps>;\n};\n\n(Form as any as StaticFormProps).Item = FormItem;\n(Form as any as StaticFormProps).List = FormList;\n\nexport default Form as React.FC<FormProps> & StaticFormProps;\n","import React from 'react';\nimport AntdDivider, { DividerProps as AntdDividerProps } from 'antd/lib/divider';\nimport cn from 'classnames';\n\nimport s from './s.module.scss';\n\nconst Divider: React.FC<AntdDividerProps> = props => {\n  const { className, ...dividerProps } = props;\n\n  return <AntdDivider className={cn(s.divider, className)} {...dividerProps} />;\n};\n\nexport default Divider;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"s_form__36nMg\",\"item\":\"s_item__2gbuN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divider\":\"s_divider__3YM-J\"};","import React from 'react';\nimport AntdInput, { InputProps as AntdInputProps } from 'antd/lib/input';\nimport cn from 'classnames';\n\nimport s from './s.module.scss';\n\nexport type InputProps = AntdInputProps;\n\nconst Input: React.FC<InputProps> = props => {\n  const { className, disabled, ...inputProps } = props;\n\n  return (\n    <AntdInput\n      className={cn(s.component, className, disabled && s.disabled)}\n      disabled={disabled}\n      autoComplete=\"off\"\n      {...inputProps}\n    />\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport cn from 'classnames';\n\nimport s from './s.module.scss';\n\ntype Props = React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\nexport const Slider: React.FC<Props> = ({ className, value, ...rest }) => {\n  const max = Number(rest.max) || 0;\n  const slicedMax = Math.floor(max * 1e6) / 1e6;\n  const slicedValue = Math.floor(Number(value) * 1e6) / 1e6;\n  const percent = (slicedValue / slicedMax) * 100 || 0;\n  const disabled = slicedMax === 0;\n\n  return (\n    <input\n      {...rest}\n      type=\"range\"\n      className={cn(s.input, className)}\n      style={{ '--track-fill': `${!disabled ? percent : 0}%` } as React.CSSProperties}\n      max={disabled ? 1 : slicedMax}\n      disabled={disabled}\n      value={!disabled ? value || '0' : '0'}\n    />\n  );\n};\n","import { ButtonHTMLAttributes, CSSProperties, FC, ForwardedRef, ReactNode, forwardRef } from 'react';\nimport BigNumber from 'bignumber.js';\nimport cn from 'classnames';\nimport classNames from 'classnames';\n\nimport { DropdownList } from 'components/custom/dropdown';\nimport { Slider } from 'components/custom/slider';\nimport { Text } from 'components/custom/typography';\nimport { Icon } from 'components/icon';\nimport { KnownTokens, useKnownTokens } from 'components/providers/knownTokensProvider';\nimport { TokenIcon, TokenIconNames } from 'components/token-icon';\n\nimport s from './s.module.scss';\n\ntype TokenAmountType = {\n  value: string;\n  onChange: (value: string) => void;\n  before: ReactNode;\n  secondary?: ReactNode;\n  className?: string;\n  classNameBefore?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  max?: BigNumber | number;\n  slider?: boolean;\n  decimals?: number;\n  errors?: string[];\n  ref?: ForwardedRef<HTMLInputElement>;\n};\n\nexport const TokenAmount: FC<TokenAmountType> = forwardRef<HTMLInputElement, TokenAmountType>(\n  (\n    {\n      onChange,\n      before,\n      secondary,\n      className,\n      classNameBefore,\n      slider,\n      errors = [],\n      decimals = 6,\n      max: maxValue,\n      ...rest\n    },\n    ref,\n  ) => {\n    const max = BigNumber.from(maxValue) ?? BigNumber.ZERO;\n\n    return (\n      <div className={className}>\n        <div className={classNames(s.tokenAmount, { [s.error]: errors.length })}>\n          {before && <div className={cn(s.tokenAmountBefore, classNameBefore)}>{before}</div>}\n          <div className={s.tokenAmountValues}>\n            <input\n              ref={ref}\n              className={s.tokenAmountValue}\n              type=\"text\"\n              inputMode=\"decimal\"\n              pattern=\"[0-9]+([\\.,][0-9]+)?\"\n              onWheel={ev => {\n                ev.currentTarget.blur();\n              }}\n              onChange={e => {\n                onChange(e.target.value);\n              }}\n              {...rest}\n            />\n            <div className={s.tokenAmountHint}>{secondary}</div>\n          </div>\n          {!max.isZero() && (\n            <button\n              type=\"button\"\n              className=\"button-ghost\"\n              style={{ alignSelf: 'center' }}\n              disabled={rest.disabled || max.isZero()}\n              onClick={() => onChange(max.toString())}>\n              MAX\n            </button>\n          )}\n        </div>\n        {!!errors.length &&\n          errors.map((error, idx) => (\n            <Text key={idx} type=\"small\" weight=\"semibold\" color=\"red\" style={{ marginTop: '8px' }}>\n              {error}\n            </Text>\n          ))}\n        {slider && !max.isZero() ? (\n          <Slider\n            type=\"range\"\n            className={s.tokenAmountSlider}\n            min=\"0\"\n            max={max.toString()}\n            step={1 / 10 ** Math.min(decimals, 6)}\n            value={rest.value ?? 0}\n            disabled={rest.disabled || max.isZero()}\n            onChange={e => {\n              onChange(e.target.value);\n            }}\n          />\n        ) : null}\n      </div>\n    );\n  },\n);\n\ntype TokenAmountPreviewType = {\n  value?: string;\n  before: ReactNode;\n  secondary?: ReactNode;\n  className?: string;\n  classNameBefore?: string;\n};\n\nexport const TokenAmountPreview: FC<TokenAmountPreviewType> = ({\n  value,\n  before,\n  secondary,\n  className,\n  classNameBefore,\n}) => {\n  return (\n    <div className={cn(s.tokenAmountPreview, className)}>\n      {before && <div className={cn(s.tokenAmountPreviewBefore, classNameBefore)}>{before}</div>}\n      <div className={s.tokenAmountPreviewValues}>\n        <input className={s.tokenAmountPreviewValue} type=\"text\" value={value || ''} readOnly />\n        <div className={s.tokenAmountPreviewHint}>{secondary}</div>\n      </div>\n    </div>\n  );\n};\n\ntype TokenSelectType = {\n  value: KnownTokens;\n  onChange: (value: KnownTokens) => void;\n  tokens: KnownTokens[];\n  className?: string;\n  style?: CSSProperties;\n};\n\nexport const TokenSelect: FC<TokenSelectType> = ({ value, onChange, tokens, className, style }) => {\n  const { getTokenBySymbol } = useKnownTokens();\n  const foundToken = getTokenBySymbol(value);\n\n  return (\n    <DropdownList\n      items={tokens.reduce((acc: ButtonHTMLAttributes<HTMLButtonElement>[], token) => {\n        const found = getTokenBySymbol(token);\n        if (!found) return acc;\n        return [\n          ...acc,\n          {\n            onClick: () => {\n              onChange(token as KnownTokens);\n            },\n            children: (\n              <>\n                <TokenIcon name={getTokenBySymbol(token)?.icon as TokenIconNames} className=\"mr-8\" />\n                {getTokenBySymbol(token)?.name}\n              </>\n            ),\n            'aria-selected': foundToken?.symbol === found.symbol ? 'true' : 'false',\n          },\n        ];\n      }, [])}>\n      {({ ref, setOpen, open }) => (\n        <button\n          type=\"button\"\n          ref={ref}\n          onClick={() => setOpen(isOpen => !isOpen)}\n          className={cn(s.tokenAmountSelectToken, className)}\n          style={style}>\n          {foundToken ? <TokenIcon name={foundToken.icon as TokenIconNames} size={24} className=\"mr-16\" /> : null}\n          <Text type=\"p1\" weight=\"semibold\" color=\"primary\">\n            {foundToken?.symbol}\n          </Text>\n          <Icon\n            name={open ? 'dropdown-active' : 'dropdown'}\n            size=\"24\"\n            className=\"token-select-chevron\"\n            style={{\n              marginLeft: 4,\n            }}\n          />\n        </button>\n      )}\n    </DropdownList>\n  );\n};\n","import React, { HTMLProps } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Modifier, usePopper } from 'react-popper';\nimport { Link, LinkProps } from 'react-router-dom';\nimport * as PopperJS from '@popperjs/core';\nimport { ModifierPhases } from '@popperjs/core';\nimport classNames from 'classnames';\nimport outy from 'outy';\n\nimport { Icon } from 'components/icon';\n\nimport s from './s.module.scss';\n\nconst modifiers: readonly Partial<Modifier<string, object>>[] = [\n  { name: 'offset', options: { offset: [0, 8] } },\n  {\n    name: 'sameWidth',\n    enabled: true,\n    phase: 'beforeWrite' as ModifierPhases,\n    requires: ['computeStyles'],\n    fn({ state }) {\n      state.styles.popper.minWidth = `${state.rects.reference.width}px`;\n    },\n    effect({ state }) {\n      // @ts-ignore\n      state.elements.popper.style.minWidth = `${state.elements.reference.offsetWidth}px`;\n    },\n  },\n];\n\nexport type DropdownBaseProps = {\n  content: (setOpen: React.Dispatch<React.SetStateAction<boolean>>) => React.ReactNode;\n  options?: Partial<PopperJS.Options>;\n  children: ({\n    ref,\n    setOpen,\n    open,\n  }: {\n    ref: React.MutableRefObject<null>;\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n    open: boolean;\n  }) => void;\n};\n\nexport const DropdownBase: React.FC<DropdownBaseProps> = ({ content, children, options }) => {\n  const [open, setOpen] = React.useState(false);\n  const referenceElement = React.useRef(null);\n  const popperElement = React.useRef(null);\n\n  const { styles, attributes, forceUpdate } = usePopper(referenceElement.current, popperElement.current, {\n    placement: 'bottom-start',\n    strategy: 'absolute',\n    modifiers,\n    ...options,\n  });\n\n  React.useEffect(() => {\n    let outyInstance: ReturnType<typeof outy>;\n    if (forceUpdate) {\n      forceUpdate();\n    }\n\n    if (open) {\n      const nodes: HTMLElement[] = [];\n\n      const referenceWrapEl = referenceElement.current;\n      if (referenceWrapEl) {\n        nodes.push(referenceWrapEl);\n      }\n      const popperEl = popperElement.current;\n      if (popperEl) {\n        nodes.push(popperEl);\n      }\n      outyInstance = outy(nodes, ['click' as unknown as MouseEvent, 'touchstart' as unknown as TouchEvent], () =>\n        setOpen(false),\n      );\n    }\n\n    return () => {\n      outyInstance?.remove();\n    };\n  }, [open]);\n\n  return (\n    <>\n      {children({ ref: referenceElement, setOpen, open })}\n      {ReactDOM.createPortal(\n        <div\n          ref={popperElement}\n          style={{\n            ...styles.popper,\n            // visibility: open ? 'visible' : 'hidden',\n            display: open ? '' : 'none',\n          }}\n          {...attributes.popper}>\n          {content(setOpen)}\n        </div>,\n        document.querySelector('#tooltip-root') || document.body,\n      )}\n    </>\n  );\n};\n\nexport type DropdownListProps = {\n  items: (HTMLProps<HTMLButtonElement> | HTMLProps<HTMLLinkElement> | LinkProps)[];\n  options?: Partial<PopperJS.Options>;\n  children: ({\n    ref,\n    setOpen,\n    open,\n  }: {\n    ref: React.MutableRefObject<null>;\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n    open: boolean;\n  }) => void;\n};\n\nexport const DropdownList: React.FC<DropdownListProps> = ({ items, children, options }) => {\n  return (\n    <DropdownBase\n      content={setOpen => (\n        <ul className={s.tokenSelectList}>\n          {items.map(({ onClick, ...rest }, idx) => {\n            if (rest.href) {\n              return (\n                <li key={idx}>\n                  {/**\n                   @ts-ignore */}\n                  <a\n                    href={rest.href}\n                    {...rest}\n                    className={s.tokenSelectListButton}\n                    onClick={e => {\n                      // if (onClick) onClick(e);\n                      setOpen(false);\n                    }}>\n                    {rest.children}\n                  </a>\n                </li>\n              );\n            }\n\n            // @ts-ignore\n            if (rest.to) {\n              return (\n                <li key={idx}>\n                  {/**\n                   @ts-ignore */}\n                  <Link\n                    {...rest}\n                    className={s.tokenSelectListButton}\n                    onClick={e => {\n                      // if (onClick) onClick(e);\n                      setOpen(false);\n                    }}\n                  />\n                </li>\n              );\n            }\n\n            return (\n              <li key={idx}>\n                {/**\n                 @ts-ignore */}\n                <button\n                  {...rest}\n                  className={s.tokenSelectListButton}\n                  onClick={e => {\n                    // @ts-ignore\n                    if (onClick) onClick(e);\n                    setOpen(false);\n                  }}\n                />\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      options={options}>\n      {children}\n    </DropdownBase>\n  );\n};\n\ntype DropdownProps = {\n  items: (HTMLProps<HTMLButtonElement> | HTMLProps<HTMLLinkElement> | LinkProps)[];\n  className?: string;\n  style?: React.CSSProperties;\n  size?: 'normal' | 'large';\n};\n\nexport const Dropdown: React.FC<DropdownProps> = ({ items, children, className, size = 'normal', style }) => {\n  return (\n    <DropdownList items={items}>\n      {({ ref, setOpen, open }) => (\n        <button\n          type=\"button\"\n          ref={ref}\n          onClick={() => setOpen(isOpen => !isOpen)}\n          className={classNames(s.dropdown, s[size], className)}\n          style={style}>\n          <div className=\"flex align-center flex-grow pr-16\">{children}</div>\n          <Icon\n            name=\"dropdown\"\n            size=\"24\"\n            className={s.dropdownChevron}\n            style={{ transform: open ? 'rotate(180deg)' : '' }}\n          />\n        </button>\n      )}\n    </DropdownList>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tokenSelectList\":\"s_tokenSelectList__1rsig\",\"tokenSelectListButton\":\"s_tokenSelectListButton__898YC\",\"active\":\"s_active__1VA0m\",\"dropdown\":\"s_dropdown__2I7kF\",\"large\":\"s_large__uF7P8\",\"dropdownChevron\":\"s_dropdownChevron__3cfM7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"s_input__1b3rZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tokenAmount\":\"s_tokenAmount__2n5WY\",\"error\":\"s_error__3x3RW\",\"tokenAmountBefore\":\"s_tokenAmountBefore__3YeAZ\",\"tokenAmountValues\":\"s_tokenAmountValues__1qT2P\",\"tokenAmountValue\":\"s_tokenAmountValue__2mG1w\",\"tokenAmountHint\":\"s_tokenAmountHint__3Jk8f\",\"tokenAmountSlider\":\"s_tokenAmountSlider__2LNhd\",\"tokenAmountPreview\":\"s_tokenAmountPreview__1qEON\",\"tokenAmountPreviewBefore\":\"s_tokenAmountPreviewBefore__2ZTVO\",\"tokenAmountPreviewValues\":\"s_tokenAmountPreviewValues__3WU83\",\"tokenAmountPreviewValue\":\"s_tokenAmountPreviewValue__2CGmA\",\"tokenAmountPreviewHint\":\"s_tokenAmountPreviewHint__1XGYo\",\"tokenSelectTrigger\":\"s_tokenSelectTrigger__39PsM\",\"tokenSelectChevron\":\"s_tokenSelectChevron__3_diD\",\"tokenSelectListButton\":\"s_tokenSelectListButton__qrRSq\",\"active\":\"s_active__hEyw6\",\"tokenAmountSelectToken\":\"s_tokenAmountSelectToken__8QBHp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"s_component__2HckH\",\"disabled\":\"s_disabled__3ybza\"};","import React, { useState } from 'react';\nimport * as Antd from 'antd';\nimport cn from 'classnames';\n\nimport Button from 'components/antd/button';\nimport Divider from 'components/antd/divider';\nimport Form from 'components/antd/form';\nimport Input from 'components/antd/input';\nimport Popover from 'components/antd/popover';\nimport { Hint, Text } from 'components/custom/typography';\nimport { Icon } from 'components/icon';\n\nimport s from './s.module.scss';\n\ntype FormData = {\n  slippage?: number;\n  deadline?: number;\n};\n\ntype TransactionCustomizationProps = {\n  showSlippage?: boolean;\n  slippage?: number;\n  showDeadline?: boolean;\n  deadline?: number;\n  onChange?: (values: FormData) => void;\n};\n\nconst SLIPPAGE_OPTIONS = [0.1, 0.3, 0.5];\n\nconst TransactionCustomization: React.FC<TransactionCustomizationProps> = props => {\n  const { showSlippage, slippage, showDeadline, deadline, onChange } = props;\n\n  const [form] = Antd.Form.useForm<FormData>();\n\n  const handleValuesChange = React.useCallback((values: FormData) => {\n    if (values.deadline) {\n      const strValue = String(values.deadline).slice(0, 6);\n\n      form.setFieldsValue({\n        deadline: Number(strValue),\n      });\n    }\n  }, []);\n\n  const handleReset = React.useCallback(() => {\n    form.resetFields();\n  }, []);\n\n  const handleFinish = React.useCallback((values: FormData) => {\n    onChange?.(values);\n  }, []);\n\n  return (\n    <Form\n      form={form}\n      initialValues={{\n        slippage,\n        deadline,\n      }}\n      validateTrigger={['onSubmit']}\n      onValuesChange={handleValuesChange}\n      onFinish={handleFinish}>\n      <div className=\"grid flow-row row-gap-32\">\n        {showSlippage && (\n          <Form.Item label=\"Slippage tolerance\">\n            <div className=\"grid flow-col col-gap-16\">\n              {SLIPPAGE_OPTIONS.map(opt => (\n                <Button\n                  key={opt}\n                  type=\"ghost\"\n                  style={{ width: 70 }}\n                  onClick={() => {\n                    form.setFieldsValue({\n                      slippage: Number(opt),\n                    });\n                  }}>\n                  {opt}%\n                </Button>\n              ))}\n              <Form.Item\n                name=\"slippage\"\n                rules={[\n                  { required: true, message: 'Required' },\n                  {\n                    validator: (_: any, value: number) => {\n                      return value > 0 && value <= 100 ? Promise.resolve() : Promise.reject();\n                    },\n                    message: 'Enter a valid slippage percentage',\n                  },\n                ]}\n                noStyle>\n                <Input type=\"number\" />\n              </Form.Item>\n            </div>\n          </Form.Item>\n        )}\n        {showDeadline && (\n          <Form.Item name=\"deadline\" label=\"Transaction deadline\" rules={[{ required: true, message: 'Required' }]}>\n            <Input\n              type=\"number\"\n              className={s.deadlineInput}\n              suffix={\n                <Text type=\"p1\" weight=\"semibold\" color=\"primary\">\n                  minutes\n                </Text>\n              }\n            />\n          </Form.Item>\n        )}\n        <div className=\"grid flow-col align-center justify-space-between\">\n          <Button type=\"light\" onClick={handleReset}>\n            Reset changes\n          </Button>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Apply changes\n          </Button>\n        </div>\n      </div>\n    </Form>\n  );\n};\n\ntype TransactionDetailsProps = {\n  className?: string;\n  showSlippage?: boolean;\n  slippage?: number;\n  slippageHint?: string;\n  showDeadline?: boolean;\n  deadline?: number;\n  onChange?: (values: FormData) => void;\n};\n\nconst TransactionDetails: React.FC<TransactionDetailsProps> = props => {\n  const { className, showSlippage = false, slippage, slippageHint, showDeadline = false, deadline, onChange } = props;\n\n  const [visible, setVisible] = useState<boolean>(false);\n\n  const handleChange = React.useCallback((values: FormData) => {\n    setVisible(false);\n    onChange?.(values);\n  }, []);\n\n  return (\n    <section className={cn(s.container, className)}>\n      <header className=\"flex ph-24 pv-16\">\n        <Text type=\"p2\" weight=\"semibold\" color=\"secondary\">\n          {props.children}\n        </Text>\n        <Popover\n          title=\"Customize transaction\"\n          overlayStyle={{ width: 423 }}\n          content={\n            <TransactionCustomization\n              showSlippage={showSlippage}\n              slippage={slippage}\n              showDeadline={showDeadline}\n              deadline={deadline}\n              onChange={handleChange}\n            />\n          }\n          visible={visible}\n          onVisibleChange={setVisible}>\n          <Button type=\"light\" className=\"ml-auto\">\n            <Icon name=\"gear\" />\n          </Button>\n        </Popover>\n      </header>\n      <Divider />\n      <div className=\"ph-24 pv-16\">\n        {showSlippage && (\n          <div className=\"flex mb-24\">\n            <Hint text={slippageHint}>\n              <Text type=\"small\" weight=\"semibold\" color=\"secondary\">\n                Slippage tolerance\n              </Text>\n            </Hint>\n            <Text type=\"small\" weight=\"semibold\" color=\"primary\" className=\"ml-auto\">\n              {slippage}%\n            </Text>\n          </div>\n        )}\n        {showDeadline && (\n          <div className=\"flex\">\n            <Hint text=\"Your transaction will revert if it isn't mined in this amount of time.\">\n              <Text type=\"small\" weight=\"semibold\" color=\"secondary\">\n                Transaction deadline\n              </Text>\n            </Hint>\n            <Text type=\"small\" weight=\"semibold\" color=\"primary\" className=\"ml-auto\">\n              {deadline} minutes\n            </Text>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default TransactionDetails;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"s_container__2ZM0_\",\"deadlineInput\":\"s_deadlineInput__pUUH-\"};","import React, { useEffect, useMemo, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport BigNumber from 'bignumber.js';\n\nimport { DropdownList } from 'components/custom/dropdown';\nimport Icon from 'components/custom/icon';\nimport { TokenAmount, TokenAmountPreview } from 'components/custom/token-amount-new';\nimport TransactionDetails from 'components/custom/transaction-details';\nimport { Text } from 'components/custom/typography';\nimport { useKnownTokens } from 'components/providers/knownTokensProvider';\nimport { TokenIconPair } from 'components/token-icon';\nimport { TrancheApiType, useSeAPI } from 'modules/smart-exposure/api';\n\ntype ETokenType = '75:25_WBTC_ETH' | '50:50_WBTC_ETH' | '25:75_WBTC_ETH';\n\ntype ETokenOptionType = {\n  value: ETokenType;\n  name: string;\n};\n\nconst ChangeTrancheView: React.FC = () => {\n  const { pool: poolAddress, tranche: trancheAddress } = useParams<{ pool: string; tranche: string }>();\n  const [tranche, setTranche] = useState<TrancheApiType>();\n  const seAPI = useSeAPI();\n  const { getTokenBySymbol } = useKnownTokens();\n\n  useEffect(() => {\n    seAPI.fetchTranche(trancheAddress).then(result => {\n      setTranche(result);\n      console.log('tranche', result);\n    });\n  }, [trancheAddress]);\n\n  const [tokenState, setTokenState] = useState<string>('');\n\n  const tokens: ETokenOptionType[] = useMemo(() => {\n    return [\n      {\n        value: '75:25_WBTC_ETH',\n        name: '75% WBTC / 25% ETH',\n      },\n      {\n        value: '50:50_WBTC_ETH',\n        name: '50% WBTC / 50% ETH',\n      },\n      {\n        value: '25:75_WBTC_ETH',\n        name: '25% WBTC / 75% ETH',\n      },\n    ];\n  }, []);\n\n  const [selectedToken, setSelectedToken] = useState<ETokenOptionType>(tokens[0]);\n\n  if (!tranche) {\n    return null;\n  }\n\n  const tokenA = getTokenBySymbol(tranche.tokenA.symbol);\n  const tokenB = getTokenBySymbol(tranche.tokenB.symbol);\n\n  return (\n    <>\n      <div\n        className=\"flexbox-list align-middle mb-40 mh-auto\"\n        style={\n          {\n            maxWidth: 640,\n            width: '100%',\n            '--gap': '24px 64px',\n            '--sm-gap': '24px',\n            '--min': 'auto',\n          } as React.CSSProperties\n        }>\n        <div className=\"flex\">\n          <TokenIconPair name1={tokenA?.icon} name2={tokenB?.icon} size={40} className=\"mr-16\" />\n          <div>\n            <div className=\"text-p1 fw-semibold color-primary mr-4\">{`${Number(tranche.tokenARatio) * 100}% ${\n              tokenA?.symbol\n            } / ${Number(tranche.tokenBRatio) * 100}% ${tokenB?.symbol}`}</div>\n            <div className=\"text-sm fw-semibold color-secondary\">{`${tokenA?.name} / ${tokenB?.name}`}</div>\n          </div>\n        </div>\n        <div>\n          <div className=\"text-sm fw-semibold color-secondary mb-4\">Wallet balance</div>\n          <div>\n            <span className=\"text-p1 fw-semibold color-primary mr-8\">9.789</span>\n            <span className=\"text-sm fw-semibold color-secondary\">25:75_WBTC_ETH</span>\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"card ph-32 pv-32 mh-auto\"\n        style={{\n          width: '100%',\n          maxWidth: 640,\n        }}>\n        <Text type=\"h3\" weight=\"semibold\" color=\"primary\" className=\"mb-16\">\n          Change tranche\n        </Text>\n        <Text type=\"p2\" weight=\"semibold\" color=\"secondary\" className=\"mb-32\">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse efficitur odio nunc, a sodales ligula\n          varius nec. Phasellus venenatis nulla mi, sit amet rutrum lorem semper et\n        </Text>\n        <form>\n          <div className=\"flex mb-8\">\n            <span className=\"text-sm fw-semibold color-secondary\">Select new tranche</span>\n          </div>\n          <DropdownList items={tokens.map(token => ({ children: token.name, onClick: () => setSelectedToken(token) }))}>\n            {({ ref, setOpen, open }) => (\n              <button type=\"button\" ref={ref} onClick={() => setOpen(isOpen => !isOpen)} className=\"token-select mb-32\">\n                <TokenIconPair name1={tokenA?.icon} name2={tokenB?.icon} size={24} className=\"mr-16\" />\n                <Text type=\"p1\" weight=\"semibold\" color=\"primary\">\n                  {selectedToken.name}\n                </Text>\n                <Icon\n                  name=\"dropdown\"\n                  width=\"24\"\n                  height=\"24\"\n                  className=\"token-select-chevron ml-auto\"\n                  style={{ transform: open ? 'rotate(180deg)' : '' }}\n                />\n              </button>\n            )}\n          </DropdownList>\n\n          <div className=\"flex mb-8\">\n            <span className=\"text-sm fw-semibold color-secondary\">75:25_WBTC_ETH amount</span>\n          </div>\n          <TokenAmount\n            before={<TokenIconPair name1={tokenA?.icon} name2={tokenB?.icon} size={24} />}\n            value={tokenState}\n            onChange={setTokenState}\n            max={BigNumber.ZERO}\n            placeholder={`0 (Max ${9.789})`}\n            className=\"mb-40\"\n            slider\n          />\n\n          <div className=\"flex mb-8\">\n            <span className=\"text-sm fw-semibold color-secondary\">50:50_WBTC_ETH amount</span>\n          </div>\n          <TokenAmountPreview\n            before={<TokenIconPair name1={tokenA?.icon} name2={tokenB?.icon} size={24} />}\n            value=\"2.3116\"\n            className=\"mb-32\"\n          />\n\n          <TransactionDetails\n            className=\"mb-32\"\n            showSlippage\n            slippage={0.5}\n            slippageHint=\"Your transaction will revert if the amount of tokens you actually receive is smaller by this percentage.\"\n            showDeadline\n            deadline={20}\n            onChange={fd => console.log({ fd })}>\n            Transaction details\n          </TransactionDetails>\n\n          <div className=\"grid flow-col col-gap-32 align-center justify-space-between\">\n            <Link to={`/smart-exposure/pools/${poolAddress}/${trancheAddress}`} className=\"button-back\">\n              <Icon name=\"arrow-back\" width={16} height={16} className=\"mr-8\" color=\"inherit\" />\n              Cancel\n            </Link>\n            <button type=\"submit\" className=\"button-primary\">\n              Deposit\n            </button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default ChangeTrancheView;\n"],"sourceRoot":""}