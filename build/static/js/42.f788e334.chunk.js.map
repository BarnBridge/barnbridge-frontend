{"version":3,"sources":["components/antd/form/index.tsx","components/antd/divider/index.tsx","components/antd/form/s.module.scss","components/antd/divider/s.module.scss","components/custom/gas-fee-list/index.tsx","components/antd/radio-button/index.tsx","components/antd/radio-button/s.module.scss","components/custom/gas-fee-list/s.module.scss","components/antd/input/index.tsx","components/antd/input/s.module.scss","components/custom/transaction-details/index.tsx","components/custom/transaction-details/s.module.scss","modules/smart-yield/components/tx-confirm-modal/index.tsx","modules/smart-yield/components/tx-confirm-modal/s.module.scss","components/antd/slider/s.module.scss","components/custom/token-amount/s.module.scss","components/antd/slider/index.tsx","components/custom/numeric-input/index.tsx","components/custom/token-amount/index.tsx","modules/smart-yield/views/withdraw-view/instant-withdraw/index.tsx"],"names":["Form","props","className","children","formProps","cn","s","form","layout","requiredMark","Item","label","hint","extra","itemProps","item","flow","gap","align","title","name","size","List","listProps","Divider","dividerProps","divider","module","exports","GasFeeList","value","groupProps","onChange","activeNetwork","useNetwork","useMergeState","options","loading","selected","undefined","state","setState","React","useEffect","url","explorer","apiUrl","key","fetch","then","result","json","veryFast","Number","FastGasPrice","fast","ProposeGasPrice","average","Math","round","SafeGasPrice","safeLow","catch","length","Group","style","width","ev","target","list","map","option","type","weight","color","RadioButton","radioProps","component","Input","disabled","inputProps","autoComplete","SLIPPAGE_OPTIONS","TransactionCustomization","showSlippage","slippage","showDeadline","deadline","Antd","useForm","handleValuesChange","useCallback","values","strValue","String","slice","setFieldsValue","handleReset","resetFields","handleFinish","initialValues","validateTrigger","onValuesChange","onFinish","opt","onClick","rules","required","message","validator","_","Promise","resolve","reject","noStyle","deadlineInput","suffix","htmlType","TransactionDetails","slippageHint","useState","visible","setVisible","handleChange","container","overlayStyle","content","onVisibleChange","text","TxConfirmModal","header","submitText","onConfirm","modalProps","submitting","setSubmitting","a","gasPrice","onCancel","Slider","rest","tooltipPlacement","removeComma","replace","NumericInput","maximumFractionDigits","forceRender","valueRef","useRef","onChangeRef","current","stateVal","val","BigNumber","toFormat","bnValue","event","rx","RegExp","test","onBlur","TokenAmount","tokenIcon","max","slider","displayDecimals","step","min","bnMaxValue","MAX_UINT_256","placeholder","formatBigValue","addonBefore","addonAfter","inputValue","toNumber","tipFormatter","sliderValue","InitialFormValues","from","to","InstantWithdraw","history","useHistory","poolCtx","useSYPool","projectToken","useKnownTokens","getContract","useContractManager","withdrawModalVisible","showWithdrawModal","forfeits","setForfeits","formValues","setFormValues","priceReversible","setPriceReversible","pool","marketId","tokenId","actions","getForfeitsFor","handleTxDetailsChange","prevState","args","getFieldsValue","ZERO","smartYieldContract","smartYieldAddress","SYSmartYieldContract","decimals","underlyingDecimals","tokenAmount","getNonHumanValue","forfeitsValue","getPrice","price","toPay","multipliedBy","div","minus","minUnderlying","toFixed","deadlineTs","floor","Date","now","instantWithdraw","minimumReceived","useMemo","jTokenPrice","href","token","icon","bubble1Name","bubble2Name","market","active","getHumanValue","contracts","smartYield","balance","height","symbol","underlyingSymbol","dependencies","hidden","shouldUpdate","justify","push","pathname","search"],"mappings":"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","file":"static/js/42.f788e334.chunk.js","sourcesContent":["import React from 'react';\nimport AntdForm, {\n  FormItemProps as AntdFormItemProps,\n  FormListProps as AntdFormListProps,\n  FormProps as AntdFormProps,\n} from 'antd/lib/form';\nimport cn from 'classnames';\n\nimport { Icon } from 'components/icon';\n\nimport Grid from '../../custom/grid';\nimport Tooltip from '../tooltip';\n\nimport s from './s.module.scss';\n\nexport type FormListProps = AntdFormListProps;\n\nconst FormList: React.FC<FormListProps> = props => {\n  const { children, ...listProps } = props;\n\n  return <AntdForm.List {...listProps}>{children}</AntdForm.List>;\n};\n\nexport type FormItemProps = AntdFormItemProps<any> & {\n  hint?: string;\n};\n\nconst FormItem: React.FC<FormItemProps> = props => {\n  const { className, label, hint, extra, children, ...itemProps } = props;\n\n  return (\n    <AntdForm.Item\n      className={cn(s.item, className)}\n      {...itemProps}\n      label={\n        <>\n          <Grid flow=\"col\" gap={4} align=\"center\">\n            {label}\n            {hint && (\n              <Tooltip title={hint}>\n                <span>\n                  <Icon name=\"info\" size={15} />\n                </span>\n              </Tooltip>\n            )}\n          </Grid>\n          {extra}\n        </>\n      }>\n      {children}\n    </AntdForm.Item>\n  );\n};\n\nexport type FormProps = AntdFormProps;\n\nconst Form: React.FC<FormProps> = props => {\n  const { className, children, ...formProps } = props;\n\n  return (\n    <AntdForm className={cn(s.form, className)} layout=\"vertical\" requiredMark={false} {...formProps}>\n      {children}\n    </AntdForm>\n  );\n};\n\nexport type StaticFormProps = {\n  Item: React.FC<FormItemProps>;\n  List: React.FC<FormListProps>;\n};\n\n(Form as any as StaticFormProps).Item = FormItem;\n(Form as any as StaticFormProps).List = FormList;\n\nexport default Form as React.FC<FormProps> & StaticFormProps;\n","import React from 'react';\nimport AntdDivider, { DividerProps as AntdDividerProps } from 'antd/lib/divider';\nimport cn from 'classnames';\n\nimport s from './s.module.scss';\n\nconst Divider: React.FC<AntdDividerProps> = props => {\n  const { className, ...dividerProps } = props;\n\n  return <AntdDivider className={cn(s.divider, className)} {...dividerProps} />;\n};\n\nexport default Divider;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"s_form__36nMg\",\"item\":\"s_item__2gbuN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divider\":\"s_divider__3YM-J\"};","import React from 'react';\nimport AntdRadio, { RadioChangeEvent, RadioGroupProps } from 'antd/lib/radio';\nimport AntdSpin from 'antd/lib/spin';\n\nimport RadioButton from 'components/antd/radio-button';\nimport Grid from 'components/custom/grid';\nimport { Text } from 'components/custom/typography';\nimport { useNetwork } from 'components/providers/networkProvider';\nimport useMergeState from 'hooks/useMergeState';\n\nimport s from './s.module.scss';\n\ntype GasFeeOption = {\n  key: string;\n  name: string;\n  value: number;\n};\n\ntype GasFeeListState = {\n  options: GasFeeOption[];\n  loading: boolean;\n  selected?: GasFeeOption;\n};\n\nexport type GasFeeListProps = RadioGroupProps & {\n  value?: GasFeeOption;\n  onChange?: (value: GasFeeOption) => void;\n};\n\nconst GasFeeList: React.FC<GasFeeListProps> = props => {\n  const { className, value, onChange, ...groupProps } = props;\n\n  const { activeNetwork } = useNetwork();\n  const [state, setState] = useMergeState<GasFeeListState>({\n    options: [],\n    loading: false,\n    selected: undefined,\n  });\n\n  React.useEffect(() => {\n    setState({\n      loading: true,\n    });\n\n    const url = `${activeNetwork.explorer.apiUrl}/api?module=gastracker&action=gasoracle&apikey=${activeNetwork.explorer.key}`;\n\n    fetch(url)\n      .then(result => result.json())\n      .then(result => result.result)\n      .then(result => {\n        return {\n          veryFast: Number(result.FastGasPrice),\n          fast: Number(result.ProposeGasPrice),\n          average: Math.round((Number(result.ProposeGasPrice) + Number(result.SafeGasPrice)) / 2),\n          safeLow: Number(result.SafeGasPrice),\n        };\n      })\n      .then(result => {\n        const options = [\n          {\n            key: 'fastest',\n            name: 'Very fast',\n            value: result.veryFast,\n          },\n          {\n            key: 'fast',\n            name: 'Fast',\n            value: result.fast,\n          },\n          {\n            key: 'average',\n            name: 'Standard',\n            value: result.average,\n          },\n          {\n            key: 'safeLow',\n            name: 'Slow',\n            value: result.safeLow,\n          },\n        ];\n\n        setState({\n          loading: false,\n          options,\n        });\n      })\n      .catch(() => {\n        setState({\n          loading: false,\n        });\n      });\n  }, []);\n\n  React.useEffect(() => {\n    if (value === undefined && state.options.length > 2) {\n      props.onChange?.(state.options[2]);\n    }\n  }, [value, state.options]);\n\n  function handleChange(ev: RadioChangeEvent) {\n    props.onChange?.(ev.target.value);\n  }\n\n  React.useEffect(() => {\n    setState({\n      selected: value,\n    });\n  }, [value]);\n\n  return (\n    <AntdRadio.Group\n      className={className}\n      style={{ width: '100%' }}\n      {...groupProps}\n      value={state.selected}\n      onChange={handleChange}>\n      {state.loading ? (\n        <AntdSpin />\n      ) : (\n        <div className={s.list}>\n          {state.options.map(option => (\n            <RadioButton\n              key={option.key}\n              label={\n                <Text type=\"p1\" weight=\"semibold\" color=\"primary\">\n                  {option.name}\n                </Text>\n              }\n              hint={\n                <Grid flow=\"col\" gap={4}>\n                  <Text type=\"p1\" weight=\"semibold\" color=\"primary\">\n                    {option.value}\n                  </Text>\n                  <Text type=\"p2\" weight=\"semibold\" color=\"secondary\">\n                    Gwei\n                  </Text>\n                </Grid>\n              }\n              value={option}\n            />\n          ))}\n        </div>\n      )}\n    </AntdRadio.Group>\n  );\n};\n\nexport default GasFeeList;\n","import React from 'react';\nimport AntdRadio, { RadioProps as AntdRadioProps } from 'antd/lib/radio';\nimport cn from 'classnames';\n\nimport Grid from 'components/custom/grid';\n\nimport s from './s.module.scss';\n\nexport type RadioButtonProps = {\n  label: React.ReactNode;\n  hint?: React.ReactNode;\n};\n\nconst RadioButton: React.FC<AntdRadioProps & RadioButtonProps> = props => {\n  const { label, hint, className, ...radioProps } = props;\n\n  return (\n    <AntdRadio className={cn(s.component, className)} {...radioProps}>\n      <Grid flow=\"row\" gap={4}>\n        {label}\n        {hint}\n      </Grid>\n    </AntdRadio>\n  );\n};\n\nexport default RadioButton;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"s_component__2RWFR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"s_list__mhVNU\"};","import React from 'react';\nimport AntdInput, { InputProps as AntdInputProps } from 'antd/lib/input';\nimport cn from 'classnames';\n\nimport s from './s.module.scss';\n\nexport type InputProps = AntdInputProps;\n\nconst Input: React.FC<InputProps> = props => {\n  const { className, disabled, ...inputProps } = props;\n\n  return (\n    <AntdInput\n      className={cn(s.component, className, disabled && s.disabled)}\n      disabled={disabled}\n      autoComplete=\"off\"\n      {...inputProps}\n    />\n  );\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"s_component__2HckH\",\"disabled\":\"s_disabled__3ybza\"};","import React, { useState } from 'react';\nimport * as Antd from 'antd';\nimport cn from 'classnames';\n\nimport Button from 'components/antd/button';\nimport Divider from 'components/antd/divider';\nimport Form from 'components/antd/form';\nimport Input from 'components/antd/input';\nimport Popover from 'components/antd/popover';\nimport { Hint, Text } from 'components/custom/typography';\nimport { Icon } from 'components/icon';\n\nimport s from './s.module.scss';\n\ntype FormData = {\n  slippage?: number;\n  deadline?: number;\n};\n\ntype TransactionCustomizationProps = {\n  showSlippage?: boolean;\n  slippage?: number;\n  showDeadline?: boolean;\n  deadline?: number;\n  onChange?: (values: FormData) => void;\n};\n\nconst SLIPPAGE_OPTIONS = [0.1, 0.3, 0.5];\n\nconst TransactionCustomization: React.FC<TransactionCustomizationProps> = props => {\n  const { showSlippage, slippage, showDeadline, deadline, onChange } = props;\n\n  const [form] = Antd.Form.useForm<FormData>();\n\n  const handleValuesChange = React.useCallback((values: FormData) => {\n    if (values.deadline) {\n      const strValue = String(values.deadline).slice(0, 6);\n\n      form.setFieldsValue({\n        deadline: Number(strValue),\n      });\n    }\n  }, []);\n\n  const handleReset = React.useCallback(() => {\n    form.resetFields();\n  }, []);\n\n  const handleFinish = React.useCallback((values: FormData) => {\n    onChange?.(values);\n  }, []);\n\n  return (\n    <Form\n      form={form}\n      initialValues={{\n        slippage,\n        deadline,\n      }}\n      validateTrigger={['onSubmit']}\n      onValuesChange={handleValuesChange}\n      onFinish={handleFinish}>\n      <div className=\"grid flow-row row-gap-32\">\n        {showSlippage && (\n          <Form.Item label=\"Slippage tolerance\">\n            <div className=\"grid flow-col col-gap-16\">\n              {SLIPPAGE_OPTIONS.map(opt => (\n                <Button\n                  key={opt}\n                  type=\"ghost\"\n                  style={{ width: 70 }}\n                  onClick={() => {\n                    form.setFieldsValue({\n                      slippage: Number(opt),\n                    });\n                  }}>\n                  {opt}%\n                </Button>\n              ))}\n              <Form.Item\n                name=\"slippage\"\n                rules={[\n                  { required: true, message: 'Required' },\n                  {\n                    validator: (_: any, value: number) => {\n                      return value > 0 && value <= 100 ? Promise.resolve() : Promise.reject();\n                    },\n                    message: 'Enter a valid slippage percentage',\n                  },\n                ]}\n                noStyle>\n                <Input type=\"number\" />\n              </Form.Item>\n            </div>\n          </Form.Item>\n        )}\n        {showDeadline && (\n          <Form.Item name=\"deadline\" label=\"Transaction deadline\" rules={[{ required: true, message: 'Required' }]}>\n            <Input\n              type=\"number\"\n              className={s.deadlineInput}\n              suffix={\n                <Text type=\"p1\" weight=\"semibold\" color=\"primary\">\n                  minutes\n                </Text>\n              }\n            />\n          </Form.Item>\n        )}\n        <div className=\"grid flow-col align-center justify-space-between\">\n          <Button type=\"light\" onClick={handleReset}>\n            Reset changes\n          </Button>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Apply changes\n          </Button>\n        </div>\n      </div>\n    </Form>\n  );\n};\n\ntype TransactionDetailsProps = {\n  className?: string;\n  showSlippage?: boolean;\n  slippage?: number;\n  slippageHint?: string;\n  showDeadline?: boolean;\n  deadline?: number;\n  onChange?: (values: FormData) => void;\n};\n\nconst TransactionDetails: React.FC<TransactionDetailsProps> = props => {\n  const { className, showSlippage = false, slippage, slippageHint, showDeadline = false, deadline, onChange } = props;\n\n  const [visible, setVisible] = useState<boolean>(false);\n\n  const handleChange = React.useCallback((values: FormData) => {\n    setVisible(false);\n    onChange?.(values);\n  }, []);\n\n  return (\n    <section className={cn(s.container, className)}>\n      <header className=\"flex ph-24 pv-16\">\n        <Text type=\"p2\" weight=\"semibold\" color=\"secondary\">\n          {props.children}\n        </Text>\n        <Popover\n          title=\"Customize transaction\"\n          overlayStyle={{ width: 423 }}\n          content={\n            <TransactionCustomization\n              showSlippage={showSlippage}\n              slippage={slippage}\n              showDeadline={showDeadline}\n              deadline={deadline}\n              onChange={handleChange}\n            />\n          }\n          visible={visible}\n          onVisibleChange={setVisible}>\n          <Button type=\"light\" className=\"ml-auto\">\n            <Icon name=\"gear\" />\n          </Button>\n        </Popover>\n      </header>\n      <Divider />\n      <div className=\"ph-24 pv-16\">\n        {showSlippage && (\n          <div className=\"flex mb-24\">\n            <Hint text={slippageHint}>\n              <Text type=\"small\" weight=\"semibold\" color=\"secondary\">\n                Slippage tolerance\n              </Text>\n            </Hint>\n            <Text type=\"small\" weight=\"semibold\" color=\"primary\" className=\"ml-auto\">\n              {slippage}%\n            </Text>\n          </div>\n        )}\n        {showDeadline && (\n          <div className=\"flex\">\n            <Hint text=\"Your transaction will revert if it isn't mined in this amount of time.\">\n              <Text type=\"small\" weight=\"semibold\" color=\"secondary\">\n                Transaction deadline\n              </Text>\n            </Hint>\n            <Text type=\"small\" weight=\"semibold\" color=\"primary\" className=\"ml-auto\">\n              {deadline} minutes\n            </Text>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default TransactionDetails;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"s_container__2ZM0_\",\"deadlineInput\":\"s_deadlineInput__pUUH-\"};","import React from 'react';\nimport * as Antd from 'antd';\n\nimport Button from 'components/antd/button';\nimport Divider from 'components/antd/divider';\nimport Form from 'components/antd/form';\nimport Modal, { ModalProps } from 'components/antd/modal';\nimport GasFeeList from 'components/custom/gas-fee-list';\nimport Grid from 'components/custom/grid';\n\nimport s from './s.module.scss';\n\nexport type ConfirmTxModalArgs = {\n  gasPrice: number;\n};\n\ntype FormValues = {\n  gasPrice?: {\n    value: number;\n  };\n};\n\ntype ChildrenProps = {\n  form: Antd.FormInstance;\n  submitting: boolean;\n};\n\ntype Props = ModalProps & {\n  header?: React.ReactNode;\n  submitText: string;\n  children?: (props: ChildrenProps) => React.ReactNode;\n  onConfirm: <A extends ConfirmTxModalArgs>(args: A) => Promise<void>;\n};\n\nconst TxConfirmModal: React.FC<Props> = props => {\n  const { header, submitText, children, onConfirm, ...modalProps } = props;\n\n  const [form] = Antd.Form.useForm<FormValues>();\n  const [submitting, setSubmitting] = React.useState<boolean>(false);\n\n  async function handleSubmit(values: FormValues) {\n    const { gasPrice } = values;\n\n    if (!gasPrice) {\n      return;\n    }\n\n    setSubmitting(true);\n\n    try {\n      await onConfirm({\n        ...values,\n        gasPrice: gasPrice.value,\n      });\n      props.onCancel?.();\n    } catch {}\n\n    setSubmitting(false);\n  }\n\n  return (\n    <Modal width={560} {...modalProps}>\n      <Form form={form} validateTrigger={['onSubmit']} onFinish={handleSubmit}>\n        {header && (\n          <>\n            {header}\n            <Divider className={s.divider} />\n          </>\n        )}\n        <Grid flow=\"row\" gap={32}>\n          {children?.({ form, submitting })}\n\n          <Form.Item name=\"gasPrice\" label=\"Gas Fee (Gwei)\" rules={[{ required: true, message: 'Required' }]}>\n            <GasFeeList disabled={submitting} />\n          </Form.Item>\n\n          <Button htmlType=\"submit\" type=\"primary\" loading={submitting}>\n            {submitText}\n          </Button>\n        </Grid>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default TxConfirmModal;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divider\":\"s_divider__2CK3W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"s_component__1xVSX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"s_component__3CuS1\"};","import React from 'react';\nimport AntdSlider, { SliderSingleProps } from 'antd/lib/slider';\nimport cn from 'classnames';\n\nimport s from './s.module.scss';\n\nexport type SliderProps = SliderSingleProps;\n\nconst Slider: React.FC<SliderProps> = props => {\n  const { className, ...rest } = props;\n\n  return <AntdSlider className={cn(s.component, className)} tooltipPlacement=\"bottom\" {...rest} />;\n};\n\nexport default Slider;\n","import React from 'react';\nimport { InputProps } from 'antd/lib/input/Input';\nimport BigNumber from 'bignumber.js';\n\nimport Input from 'components/antd/input';\n\nexport type NumericInputProps = Omit<InputProps, 'value' | 'onChange'> & {\n  value?: BigNumber | number;\n  maximumFractionDigits?: number;\n  onChange?: (value: BigNumber | undefined) => void;\n};\n\nfunction removeComma(value: string): string {\n  return value.replace(/,/g, '');\n}\n\nconst NumericInput: React.FC<NumericInputProps> = props => {\n  const { maximumFractionDigits, ...inputProps } = props;\n\n  const [, forceRender] = React.useState({});\n  const valueRef = React.useRef<string>('');\n  const onChangeRef = React.useRef<(value: BigNumber | undefined) => void | undefined>();\n  onChangeRef.current = props.onChange;\n\n  const stateVal = valueRef.current;\n\n  React.useEffect(() => {\n    const val = props.value;\n\n    valueRef.current = val !== undefined ? new BigNumber(val).toFormat() : '';\n    forceRender({});\n  }, [props.value]);\n\n  React.useEffect(() => {\n    if (valueRef.current === '') {\n      onChangeRef.current?.(undefined);\n      return;\n    }\n\n    const val = removeComma(valueRef.current);\n    const bnValue = new BigNumber(val);\n\n    if (removeComma(bnValue.toFormat()) !== val) {\n      return;\n    }\n\n    valueRef.current = bnValue.toFormat();\n    onChangeRef.current?.(bnValue);\n  }, [stateVal]);\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const val = event.target.value;\n\n    let rx = `^[,|\\\\d*]*(\\\\.\\\\d*)?$`;\n\n    if (props.maximumFractionDigits) {\n      rx = `^[,|\\\\d*]*(\\\\.\\\\d{0,${props.maximumFractionDigits}})?$`;\n    }\n\n    if (new RegExp(rx, 'g').test(val)) {\n      valueRef.current = val;\n      forceRender({});\n    }\n  }\n\n  function handleBlur(event: React.FocusEvent<HTMLInputElement>) {\n    const val = removeComma(event.target.value);\n\n    if (val === '' || val === '.') {\n      valueRef.current = '';\n      onChangeRef.current?.(undefined);\n      forceRender({});\n      return;\n    }\n\n    const bnValue = new BigNumber(val);\n\n    if (bnValue.toFormat() !== val) {\n      onChangeRef.current?.(bnValue);\n    }\n  }\n\n  return <Input {...inputProps} onChange={handleChange} onBlur={handleBlur} value={valueRef.current} />;\n};\n\nexport default NumericInput;\n","import React from 'react';\nimport BigNumber from 'bignumber.js';\nimport cn from 'classnames';\nimport { formatBigValue } from 'web3/utils';\n\nimport Slider from 'components/antd/slider';\nimport Grid from 'components/custom/grid';\nimport NumericInput from 'components/custom/numeric-input';\nimport { TokenIcon, TokenIconNames } from 'components/token-icon';\n\nimport s from './s.module.scss';\n\nexport type TokenAmountProps = {\n  className?: string;\n  tokenIcon?: TokenIconNames | React.ReactNode;\n  max?: number | BigNumber;\n  maximumFractionDigits?: number;\n  value?: number | BigNumber;\n  disabled?: boolean;\n  slider?: boolean;\n  displayDecimals?: number;\n  onChange?: (value?: BigNumber) => void;\n};\n\nconst TokenAmount: React.FC<TokenAmountProps> = props => {\n  const {\n    className,\n    tokenIcon,\n    max,\n    maximumFractionDigits = 4,\n    value,\n    disabled = false,\n    slider = false,\n    displayDecimals = 4,\n    onChange,\n  } = props;\n\n  const step = 1 / 10 ** Math.min(displayDecimals, 6);\n  const bnMaxValue = new BigNumber(max ?? BigNumber.MAX_UINT_256);\n\n  const bnValue = value !== undefined ? BigNumber.min(new BigNumber(value), bnMaxValue) : undefined;\n\n  function onMaxHandle() {\n    onChange?.(bnMaxValue);\n  }\n\n  function handleInputChange(inputValue?: BigNumber) {\n    onChange?.(inputValue ? BigNumber.min(inputValue, bnMaxValue) : undefined);\n  }\n\n  function onSliderChange(sliderValue: number) {\n    onChange?.(new BigNumber(sliderValue));\n  }\n\n  return (\n    <Grid flow=\"row\" gap={32}>\n      <NumericInput\n        className={cn(s.component, className)}\n        placeholder={max !== undefined ? `0 (Max ${formatBigValue(bnMaxValue, displayDecimals)})` : ''}\n        addonBefore={\n          <>\n            {typeof tokenIcon === 'string' && <TokenIcon name={tokenIcon as TokenIconNames} size={36} />}\n            {typeof tokenIcon === 'object' && tokenIcon}\n          </>\n        }\n        addonAfter={\n          max !== undefined ? (\n            <button type=\"button\" className=\"button-ghost\" disabled={disabled} onClick={onMaxHandle}>\n              MAX\n            </button>\n          ) : null\n        }\n        maximumFractionDigits={maximumFractionDigits}\n        disabled={disabled}\n        value={bnValue}\n        onChange={handleInputChange}\n      />\n      {slider && (\n        <Slider\n          min={0}\n          max={bnMaxValue.toNumber()}\n          step={step}\n          tooltipPlacement=\"bottom\"\n          tipFormatter={sliderValue => (sliderValue ? formatBigValue(new BigNumber(sliderValue), displayDecimals) : 0)}\n          disabled={disabled}\n          value={bnValue?.toNumber()}\n          onChange={onSliderChange}\n        />\n      )}\n    </Grid>\n  );\n};\n\nexport default TokenAmount;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport * as Antd from 'antd';\nimport BigNumber from 'bignumber.js';\nimport { useContractManager } from 'web3/components/contractManagerProvider';\nimport { formatBigValue, getHumanValue, getNonHumanValue } from 'web3/utils';\n\nimport Button from 'components/antd/button';\nimport Divider from 'components/antd/divider';\nimport Form from 'components/antd/form';\nimport Input from 'components/antd/input';\nimport { ExternalLink } from 'components/button';\nimport Grid from 'components/custom/grid';\nimport Icon from 'components/custom/icon';\nimport TokenAmount from 'components/custom/token-amount';\nimport TransactionDetails from 'components/custom/transaction-details';\nimport { Text } from 'components/custom/typography';\nimport { useKnownTokens } from 'components/providers/knownTokensProvider';\nimport { TokenIcon, TokenIconNames } from 'components/token-icon';\nimport TxConfirmModal, { ConfirmTxModalArgs } from 'modules/smart-yield/components/tx-confirm-modal';\nimport SYSmartYieldContract from 'modules/smart-yield/contracts/sySmartYieldContract';\nimport { useSYPool } from 'modules/smart-yield/providers/pool-provider';\n\ntype FormData = {\n  from?: BigNumber;\n  to?: BigNumber;\n  slippage?: number;\n  deadline?: number;\n};\n\nconst InitialFormValues: FormData = {\n  from: undefined,\n  to: undefined,\n  slippage: 0.5,\n  deadline: 20,\n};\n\nconst InstantWithdraw: React.FC = () => {\n  const history = useHistory();\n  const poolCtx = useSYPool();\n  const { projectToken } = useKnownTokens();\n  const { getContract } = useContractManager();\n  const [form] = Antd.Form.useForm<FormData>();\n\n  const [withdrawModalVisible, showWithdrawModal] = React.useState<boolean>();\n  const [forfeits, setForfeits] = useState<BigNumber | undefined>();\n  const [formValues, setFormValues] = useState(InitialFormValues);\n  const [priceReversible, setPriceReversible] = useState(false);\n\n  const { pool, marketId, tokenId } = poolCtx;\n\n  function handleFormValuesChange(_: any, values: FormData) {\n    setFormValues(values);\n  }\n\n  React.useEffect(() => {\n    if (!pool || !formValues.from) {\n      return;\n    }\n\n    poolCtx.actions.getForfeitsFor(formValues.from).then(setForfeits);\n  }, [formValues.from]);\n\n  function handlePriceReverse() {\n    setPriceReversible(prevState => !prevState);\n  }\n\n  const handleTxDetailsChange = React.useCallback(values => {\n    form.setFieldsValue(values);\n    setFormValues(prevState => ({\n      ...prevState,\n      ...values,\n    }));\n  }, []);\n\n  function handleCancel() {\n    history.push({\n      pathname: `/smart-yield/withdraw`,\n      search: `?m=${marketId}&t=${tokenId}`,\n    });\n  }\n\n  function handleSubmit() {\n    showWithdrawModal(true);\n  }\n\n  function handleWithdrawCancel() {\n    showWithdrawModal(false);\n  }\n\n  async function handleWithdrawConfirm(args: ConfirmTxModalArgs) {\n    const { from = BigNumber.ZERO, slippage, deadline } = form.getFieldsValue();\n\n    if (!pool) {\n      return;\n    }\n\n    showWithdrawModal(false);\n\n    const smartYieldContract = getContract<SYSmartYieldContract>(pool.smartYieldAddress, () => {\n      return new SYSmartYieldContract(pool.smartYieldAddress);\n    });\n\n    try {\n      // uint256 debtShare = tokenAmount_ * 1e18 / SY.totalSupply();\n      // uint256 forfeits = (SY.abondDebt() * debtShare) / 1e18;\n      // uint256 toPay = (tokenAmount_ * SY.price()) / 1e18 - forfeits;\n      // minUnderlying => toPay - slippage\n\n      const decimals = pool.underlyingDecimals;\n      const tokenAmount = getNonHumanValue(new BigNumber(from), decimals);\n      const forfeitsValue = await poolCtx.actions.getForfeitsFor(tokenAmount);\n      const price = await smartYieldContract.getPrice();\n      const toPay = tokenAmount\n        .multipliedBy(price)\n        .div(1e18)\n        .minus(forfeitsValue ?? BigNumber.ZERO);\n      const minUnderlying = new BigNumber(toPay.multipliedBy(1 - (slippage ?? 0) / 100).toFixed(0)); // slippage / rounding mode\n      const deadlineTs = Math.floor(Date.now() / 1_000 + Number(deadline ?? 0) * 60);\n\n      await poolCtx.actions.instantWithdraw(tokenAmount, minUnderlying, deadlineTs, args.gasPrice);\n      form.resetFields();\n    } catch {}\n  }\n\n  const minimumReceived = React.useMemo(() => {\n    if (!pool || !forfeits) {\n      return undefined;\n    }\n\n    return formValues.from\n      ?.multipliedBy(pool.state.jTokenPrice)\n      .minus(forfeits)\n      .multipliedBy(1 - (formValues.slippage ?? 0) / 100);\n  }, [formValues.from, pool?.state.jTokenPrice, forfeits, formValues.slippage]);\n\n  if (!pool) {\n    return null;\n  }\n\n  return (\n    <div className=\"card p-24\">\n      <Text type=\"h3\" weight=\"semibold\" color=\"primary\" className=\"mb-16\">\n        Instant withdraw\n      </Text>\n      <Text type=\"p2\" weight=\"semibold\" className=\"mb-32\">\n        Choose the amount of junior tokens you want to redeem. Make sure you double check the amounts, including the\n        amount you forfeit. &nbsp;\n        <ExternalLink href=\"#\">Learn more</ExternalLink>\n      </Text>\n\n      <Form\n        className=\"grid flow-row\"\n        form={form}\n        initialValues={formValues}\n        onValuesChange={handleFormValuesChange}\n        validateTrigger={['onSubmit']}\n        onFinish={handleSubmit}>\n        <Form.Item className=\"mb-32\" name=\"from\" label=\"From\" rules={[{ required: true, message: 'Required' }]}>\n          <TokenAmount\n            tokenIcon={\n              <TokenIcon\n                name={pool.token?.icon as TokenIconNames}\n                bubble1Name={projectToken.icon}\n                bubble2Name={pool.market?.icon.active as TokenIconNames}\n                size={36}\n              />\n            }\n            max={getHumanValue(pool.contracts.smartYield.balance, pool.underlyingDecimals)}\n            maximumFractionDigits={pool.underlyingDecimals}\n            displayDecimals={pool.underlyingDecimals}\n            disabled={false}\n          />\n        </Form.Item>\n        <Icon name=\"down-arrow-circle\" width={32} height={32} className=\"mh-auto\" />\n        <Form.Item\n          className=\"mb-32\"\n          label=\"To\"\n          extra={\n            <div className=\"grid flow-col col-gap-8 justify-center\">\n              {priceReversible ? (\n                <Text type=\"small\" weight=\"semibold\" color=\"secondary\">\n                  {formatBigValue(1 / pool.state.jTokenPrice)} {pool.contracts.smartYield.symbol} per{' '}\n                  {pool.underlyingSymbol}\n                </Text>\n              ) : (\n                <Text type=\"small\" weight=\"semibold\" color=\"secondary\">\n                  {formatBigValue(pool.state.jTokenPrice)} {pool.underlyingSymbol} per{' '}\n                  {pool.contracts.smartYield.symbol}\n                </Text>\n              )}\n              <button type=\"button\" className=\"button-text\" onClick={handlePriceReverse}>\n                <Icon name=\"refresh\" width={16} height={16} />\n              </button>\n            </div>\n          }\n          dependencies={['from']}>\n          {() => {\n            const { from } = form.getFieldsValue();\n            const to =\n              from && pool\n                ? BigNumber.from(from.multipliedBy(pool.state.jTokenPrice).toFixed(pool.underlyingDecimals))\n                : undefined;\n\n            return (\n              <TokenAmount\n                tokenIcon={pool?.token?.icon as TokenIconNames}\n                maximumFractionDigits={pool.underlyingDecimals}\n                displayDecimals={pool.underlyingDecimals}\n                value={to}\n                disabled\n              />\n            );\n          }}\n        </Form.Item>\n\n        <Form.Item name=\"slippage\" noStyle hidden>\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"deadline\" noStyle hidden>\n          <Input />\n        </Form.Item>\n        <Form.Item shouldUpdate noStyle>\n          {() => {\n            const { slippage, deadline } = form.getFieldsValue();\n\n            return (\n              <TransactionDetails\n                className=\"mb-32\"\n                showSlippage\n                slippage={slippage}\n                showDeadline\n                deadline={deadline}\n                onChange={handleTxDetailsChange}>\n                Transaction details\n              </TransactionDetails>\n            );\n          }}\n        </Form.Item>\n\n        <div className=\"card mb-32\">\n          <div className=\"pv-24 ph-24\">\n            <Text type=\"p2\" weight=\"semibold\" color=\"secondary\">\n              Transaction summary\n            </Text>\n          </div>\n          <Divider />\n          <div className=\"pv-24 ph-24\">\n            <div className=\"grid flow-col justify-space-between mb-16\">\n              <Text type=\"small\" weight=\"semibold\" color=\"secondary\">\n                Forfeited balance\n              </Text>\n              <Text type=\"p2\" weight=\"semibold\" color=\"red\">\n                {formatBigValue(forfeits ?? BigNumber.ZERO, pool.underlyingDecimals)} {pool.underlyingSymbol}\n              </Text>\n            </div>\n            <div className=\"grid flow-col justify-space-between mb-16\">\n              <Text type=\"small\" weight=\"semibold\" color=\"secondary\">\n                Transaction fees\n              </Text>\n              <Text type=\"p2\" weight=\"semibold\" color=\"primary\">\n                0 {pool.underlyingSymbol} (0%)\n              </Text>\n            </div>\n            <div className=\"grid flow-col justify-space-between\">\n              <Text type=\"small\" weight=\"semibold\" color=\"secondary\">\n                Minimum received\n              </Text>\n              <Text type=\"p2\" weight=\"semibold\" color=\"primary\">\n                {formatBigValue(minimumReceived ?? BigNumber.ZERO)} {pool.underlyingSymbol}\n              </Text>\n            </div>\n          </div>\n        </div>\n\n        <Grid flow=\"col\" gap={64} align=\"center\" justify=\"space-between\">\n          <button type=\"button\" className=\"button-back\" onClick={handleCancel}>\n            <Icon name=\"arrow-back\" width={16} height={16} className=\"mr-8\" color=\"inherit\" />\n            Cancel\n          </button>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Withdraw\n          </Button>\n        </Grid>\n      </Form>\n\n      {withdrawModalVisible && (\n        <TxConfirmModal\n          title=\"Confirm your withdrawal\"\n          header={\n            <div className=\"grid flow-col col-gap-32\">\n              <div className=\"grid flow-row row-gap-4\">\n                <Text type=\"small\" weight=\"semibold\" color=\"secondary\">\n                  Minimum received\n                </Text>\n                <Text type=\"p1\" weight=\"semibold\" color=\"primary\">\n                  {formatBigValue(minimumReceived ?? BigNumber.ZERO)} {pool.underlyingSymbol}\n                </Text>\n              </div>\n              <div className=\"grid flow-row row-gap-4\">\n                <Text type=\"small\" weight=\"semibold\" color=\"secondary\">\n                  Withdrawal type\n                </Text>\n                <Text type=\"p1\" weight=\"semibold\" color=\"primary\">\n                  Instant\n                </Text>\n              </div>\n              <div className=\"grid flow-row row-gap-4\">\n                <Text type=\"small\" weight=\"semibold\" color=\"secondary\">\n                  Wait time\n                </Text>\n                <Text type=\"p1\" weight=\"semibold\" color=\"primary\">\n                  None\n                </Text>\n              </div>\n            </div>\n          }\n          submitText=\"Withdraw\"\n          onCancel={handleWithdrawCancel}\n          onConfirm={handleWithdrawConfirm}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default InstantWithdraw;\n"],"sourceRoot":""}