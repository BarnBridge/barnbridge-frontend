{"version":3,"sources":["components/custom/tabs/index.tsx","modules/smart-yield/api.tsx","modules/smart-yield/providers/pool-provider/index.tsx","modules/smart-yield/providers/markets.tsx","modules/smart-yield/contracts/sySmartYieldContract.ts","components/custom/tabs/s.module.scss","modules/smart-yield/providers/pools-provider/index.tsx","modules/smart-yield/providers/reward-pools-provider/index.tsx","modules/smart-yield/contracts/syRewardPoolContract.ts","modules/smart-yield/contracts/syAaveTokenContract.ts","hooks/useRouteQuery.ts","modules/smart-yield/providers/reward-pool-provider/index.tsx","modules/smart-yield/contracts/syControllerContract.ts","models/managedEntity.ts","modules/smart-yield/models/syRewardPoolEntity.ts","modules/smart-yield/contracts/sySeniorBondContract.ts","modules/smart-yield/components/tx-status-modal/index.tsx","modules/smart-yield/index.tsx"],"names":["PeriodTabsKey","NavTabs","className","tabs","shadows","cn","s","style","map","idx","children","restTab","to","tab","activeClassName","active","rel","target","HorizontalMenu","rest","horizontalMenu","Tabs","props","variation","activeKey","size","elasticTabs","id","onClick","tabRest","small","type","PortfolioPeriodTabsKey","periodTabs","day","week","month","PeriodChartTabs","portfolioPeriodTabs","PortfolioPeriodChartTabs","APISYTxHistoryType","APISYJuniorPastPositionType","HistoryShortTypes","Map","JUNIOR_DEPOSIT","JUNIOR_INSTANT_WITHDRAW","JUNIOR_REGULAR_WITHDRAW","JUNIOR_REDEEM","JTOKEN_SEND","JTOKEN_RECEIVE","JBOND_SEND","JBOND_RECEIVE","JUNIOR_STAKE","JUNIOR_UNSTAKE","SENIOR_DEPOSIT","SENIOR_REDEEM","SBOND_SEND","SBOND_RECEIVE","HistoryTypes","isPositiveHistoryType","includes","APISYRewardTxHistoryType","JuniorPastPositionTypes","RewardHistoryShortTypes","Context","createContext","InvariantContext","useSyAPI","useContext","useFetchSyPools","originator","baseUrl","config","useConfig","url","URL","api","searchParams","set","useFetch","transform","data","SyAPIProvider","value","fetchSYPools","fetch","toString","then","result","json","fetchSYPool","underlyingSymbol","fetchSYPoolAPY","syAddress","windowFilter","query","queryfy","window","fetchSYPoolLiquidity","fetchSYPoolTransactions","poolAddress","page","limit","transactionType","String","item","amount","BigNumber","fetchSYSeniorBonds","redeemed","sortBy","sortDir","sort","sortDirection","depositedAmount","redeemableAmount","fetchSYJuniorBonds","fetchSYUserTxHistory","address","token","Number","fetchSYSeniorRedeems","fetchSYJuniorPastPositions","tokensIn","underlyingOut","forfeits","fetchSYPortfolioValues","timestamp","Date","fetchSYSeniorPortfolioValues","fetchSYJuniorPortfolioValues","fetchSYRewardPools","fetchSYRewardPoolTransactions","userAddress","Provider","InitialState","marketId","undefined","tokenId","loading","pool","statusModal","visible","state","txHash","React","useSYPool","PoolProvider","history","useHistory","location","useLocation","wallet","useWallet","getEtherscanTxUrl","useWeb3","getContract","useContractManager","getToken","useTokens","useKnownTokens","projectToken","stkAaveToken","ethToken","convertTokenIn","convertTokenInUSD","syAPI","useReload","reload","version","useState","setState","isSeniorDeposit","Boolean","useRouteMatch","isJuniorDeposit","isJuniorWithdraw","useMemo","urlQuery","URLSearchParams","search","marketStr","get","decodeURIComponent","tokenStr","market","getAaveIncentivesAPY","cTokenAddress","uDecimals","uSymbol","a","aTokenAddress","aTokenDecimals","aToken","SYAaveTokenContract","setCallProvider","MainnetHttpsWeb3Provider","loadCommon","aTokenPriceInEth","symbol","uTokenPriceInEth","calculateIncentivesAPY","useEffect","prevState","Promise","reject","smartYield","smartYieldAddress","SYSmartYieldContract","catch","Error","underlying","underlyingAddress","Erc20Contract","controller","controllerAddress","SYControllerContract","protocolId","AaveMarket","underlyingDecimals","apy","all","extPool","getKnownMarketById","contracts","rewardPool","apr","rewardPools","length","rewardPoolAddress","SYRewardPoolContract","poolType","on","Web3Contract","UPDATE_DATA","loadRewardRateFor","poolSize","r","getDailyRewardFor","unscaleBy","decimals","yearlyReward","multipliedBy","p","dividedBy","poolBalance","gt","ZERO","console","error","setProvider","provider","setAccount","account","loadBalance","loadAllowance","providerAddress","getForfeitsFor","useCallback","totalSupply","getAbondDebt","abondDebt","createSmartYieldContract","txType","contract","approveUnderlying","enable","approve","seniorDeposit","principalAmount","minGain","deadline","forDays","gasPrice","buyBondSend","juniorDeposit","underlyingAmount","minTokens","buyTokensSend","twoStepWithdraw","tokenAmount","maxMaturesAt","buyJuniorBondSend","instantWithdraw","minUnderlying","sellTokensSend","actions","txLink","onCancel","onSuccessClick","push","pathname","name","icon","CreamFinanceMarket","warning","href","depositDisabled","KnownMarkets","find","km","ABI","stateMutability","inputs","outputs","internalType","price","abond","this","batch","method","from","principal","gain","issuedAt","Math","floor","toNumber","maturesAt","liquidated","emit","call","jBondIds","resolve","methods","jBondId","methodArgs","tokens","sBondIds","sBondId","send","getGasValue","module","exports","pools","usePools","PoolsProvider","getTokenBySymbol","bondToken","setStatusModal","forEach","getMarketTVL","filter","reduce","sum","entity","plus","seniorLiquidity","juniorLiquidity","redeemBond","smartYieldContract","redeemBondSend","redeemJuniorBond","redeemJuniorBondSend","transferFrom","seniorBondAddress","seniorBondContract","SYSeniorBondContract","transferFromSend","useRewardPools","RewardPoolsProvider","knownTokensCtx","contractManagerCtx","walletCtx","setLoading","setPools","meta","usdValue","getSYTotalStakedInUSD","SYRewardPoolEntity","onDataUpdate","loadCommonData","loadUserData","MULTI_ABI","isMulti","_isMulti","rewardTokensCount","rewardLeft","rewardRates","balances","claims","UPDATE_ACCOUNT","clear","numRewardTokens","rewardTokenAddress","rewardRatePerSecond","balance","getBalanceFor","myRatio","claim","AaveIncentivesABI","createAbiItem","SYAaveIncentivesContract","emissionPerSecond","AaveTokenABI","incentivesController","uTokenDecimals","emissionPerYear","incentivesControllerAddress","callProvider","loadAssetData","useRouteQuery","paramName","useRewardPool","RewardPoolProvider","rqCtx","uToken","setPool","ManagedEntity","_event","listener","off","emitDataUpdate","EventEmitter","rewardTokens","poolTokenAddress","rewardTkn","rewardToken","getTokenByAddress","KnownTokens","DAI","GUSD","USDC","USDT","eq","loadRewardLeftFor","loadBalanceFor","rewardContract","loadClaimFor","loadUserBalances","loadClaims","Array","_","index","TxStatusModal","modalProps","activeNetwork","useNetwork","width","title","height","weight","color","htmlType","explorer","MarketsView","lazy","StatsView","PortfolioView","DepositView","WithdrawView","PoolsView","PoolView","SmartYieldView","params","vt","activeTab","setActiveTab","isActive","match","startsWith","disabled","features","smartYieldReward","fallback","path","render","exact","component","initialized"],"mappings":"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","file":"static/js/47.563aeaf5.chunk.js","sourcesContent":["import React, { CSSProperties, FC, HTMLProps, ReactNode } from 'react';\nimport { NavLink, NavLinkProps } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport s from './s.module.scss';\n\ntype NavTabProps = NavLinkProps | HTMLProps<HTMLAnchorElement>;\n\ntype NavTabsProps = {\n  tabs: NavTabProps[];\n  className?: string;\n  /**\n   * @example\n   * <Tabs shadows=\"--theme-card-color\" /> in case of string, place background color variable,\n   * <Tabs shadows /> `--theme-body-color` will be used in case of `true`\n   */\n  shadows?: boolean | string;\n};\n\nexport const NavTabs: FC<NavTabsProps> = ({ className, tabs, shadows = false }) => {\n  return (\n    <div\n      className={cn(s.tabs, className, {\n        [s.shadows]: shadows,\n      })}\n      style={\n        {\n          '--tabs-bg': `var(${typeof shadows === 'string' ? shadows : '--theme-body-color'})`,\n        } as CSSProperties\n      }>\n      {tabs.map(({ className, children, ...restTab }, idx) => {\n        // @ts-ignore\n        if (restTab.to) {\n          return (\n            // @ts-ignore\n            <NavLink key={idx} className={cn(s.tab, className)} activeClassName={s.active} {...restTab}>\n              {children}\n            </NavLink>\n          );\n        }\n\n        return (\n          <a key={idx} className={cn(s.tab, className)} rel=\"noopener noreferrer\" target=\"_blank\" {...restTab}>\n            {children}\n          </a>\n        );\n      })}\n    </div>\n  );\n};\n\nexport const HorizontalMenu: FC<NavTabsProps> = ({ className, ...rest }) => {\n  return <NavTabs {...rest} className={cn(s.horizontalMenu, className)} />;\n};\n\ntype TabProps<T> = {\n  id: T;\n  children: ReactNode;\n  className?: string;\n  disabled?: boolean;\n  onClick?: (id: T) => void;\n};\n\ntype TabsProps<T> = {\n  variation?: 'normal' | 'elastic';\n  tabs: TabProps<T>[];\n  activeKey: TabProps<T>['id'];\n  size?: 'normal' | 'small';\n  className?: string;\n  style?: CSSProperties;\n  onClick?: (id: TabProps<T>['id']) => void;\n};\n\nexport const Tabs = <T extends string>(props: TabsProps<T>) => {\n  const { variation = 'normal', tabs, activeKey, size, className, style } = props;\n\n  return (\n    <div\n      className={cn(className, {\n        [s.tabs]: variation === 'normal',\n        [s.elasticTabs]: variation === 'elastic',\n      })}\n      style={style}>\n      {tabs.map(({ id, className, onClick, ...tabRest }) => (\n        <button\n          key={id}\n          className={cn(s.tab, className, {\n            [s.active]: id === activeKey,\n            [s.small]: size === 'small',\n          })}\n          type=\"button\"\n          onClick={() => {\n            props.onClick?.(id);\n            onClick?.(id);\n          }}\n          {...tabRest}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport enum PeriodTabsKey {\n  day = '24h',\n  week = '1w',\n  month = '30d',\n}\n\nconst periodTabs = [\n  {\n    id: PeriodTabsKey.day,\n    children: '24h',\n  },\n  {\n    id: PeriodTabsKey.week,\n    children: '1w',\n  },\n  {\n    id: PeriodTabsKey.month,\n    children: '1mo',\n  },\n];\n\ntype PeriodChartTabsProps = Omit<TabsProps<PeriodTabsKey>, 'tabs' | 'variation'>;\n\nexport const PeriodChartTabs: React.FC<PeriodChartTabsProps> = props => {\n  return <Tabs<PeriodTabsKey> {...props} tabs={periodTabs} variation=\"elastic\" />;\n};\n\nexport enum PortfolioPeriodTabsKey {\n  week = '1w',\n  month = '30d',\n}\n\nconst portfolioPeriodTabs = [\n  {\n    id: PortfolioPeriodTabsKey.week,\n    children: '1w',\n  },\n  {\n    id: PortfolioPeriodTabsKey.month,\n    children: '1mo',\n  },\n];\n\ntype PortfolioPeriodChartTabsProps = Omit<TabsProps<PortfolioPeriodTabsKey>, 'tabs' | 'variation'>;\n\nexport const PortfolioPeriodChartTabs: React.FC<PortfolioPeriodChartTabsProps> = props => {\n  return <Tabs<PortfolioPeriodTabsKey> {...props} tabs={portfolioPeriodTabs} variation=\"elastic\" />;\n};\n","import { FC, createContext, useContext } from 'react';\nimport BigNumber from 'bignumber.js';\n\nimport { useConfig } from 'components/providers/configProvider';\n\nimport { InvariantContext } from 'utils/context';\nimport { PaginatedResult, UseFetchReturn, queryfy, useFetch } from 'utils/fetch';\n\nexport type APISYPool = {\n  protocolId: string;\n  controllerAddress: string;\n  modelAddress: string;\n  providerAddress: string;\n  smartYieldAddress: string;\n  oracleAddress: string;\n  juniorBondAddress: string;\n  seniorBondAddress: string;\n  cTokenAddress: string;\n  underlyingAddress: string;\n  underlyingSymbol: string;\n  underlyingDecimals: number;\n  rewardPoolAddress: string;\n  state: {\n    blockNumber: number;\n    blockTimestamp: string;\n    seniorLiquidity: number;\n    juniorLiquidity: number;\n    jTokenPrice: number;\n    seniorApy: number;\n    juniorApy: number;\n    juniorAPYPast30DAvg: number;\n    numberOfJuniorsLocked: number;\n    originatorApy: number;\n    originatorNetApy: number;\n    avgSeniorMaturityDays: number;\n    numberOfSeniors: number;\n    numberOfJuniors: number;\n    juniorLiquidityLocked: number;\n  };\n};\n\nexport type APISYPoolAPY = {\n  point: Date;\n  seniorApy: number;\n  juniorApy: number;\n  originatorNetApy: number;\n};\n\nexport type APISYPoolLiquidity = {\n  point: Date;\n  seniorLiquidity: number;\n  juniorLiquidity: number;\n};\n\nexport type APISYPoolTransaction = {\n  protocolId: string;\n  pool: string;\n  underlyingTokenAddress: string;\n  underlyingTokenSymbol: string;\n  amount: BigNumber;\n  tranche: string;\n  transactionType: string;\n  transactionHash: string;\n  blockTimestamp: number;\n  blockNumber: number;\n  accountAddress: string;\n};\n\nexport type APISYSeniorBonds = {\n  seniorBondId: number;\n  maturityDate: number;\n  redeemed: boolean;\n  accountAddress: string;\n  depositedAmount: BigNumber;\n  redeemableAmount: BigNumber;\n  underlyingTokenAddress: string;\n  underlyingTokenSymbol: string;\n  underlyingTokenDecimals: number;\n  transactionHash: string;\n  blockTimestamp: number;\n};\n\nexport type APISYJuniorBonds = {\n  juniorBondId: number;\n  maturityDate: number;\n  redeemed: boolean;\n  accountAddress: string;\n  depositedAmount: BigNumber;\n  underlyingTokenAddress: string;\n  underlyingTokenSymbol: string;\n  underlyingTokenDecimals: number;\n  transactionHash: string;\n  blockTimestamp: number;\n};\n\nexport enum APISYTxHistoryType {\n  JUNIOR_DEPOSIT = 'JUNIOR_DEPOSIT',\n  JUNIOR_INSTANT_WITHDRAW = 'JUNIOR_INSTANT_WITHDRAW',\n  JUNIOR_REGULAR_WITHDRAW = 'JUNIOR_REGULAR_WITHDRAW',\n  JUNIOR_REDEEM = 'JUNIOR_REDEEM',\n  SENIOR_DEPOSIT = 'SENIOR_DEPOSIT',\n  SENIOR_REDEEM = 'SENIOR_REDEEM',\n  JTOKEN_SEND = 'JTOKEN_SEND',\n  JTOKEN_RECEIVE = 'JTOKEN_RECEIVE',\n  JBOND_SEND = 'JBOND_SEND',\n  JBOND_RECEIVE = 'JBOND_RECEIVE',\n  SBOND_SEND = 'SBOND_SEND',\n  SBOND_RECEIVE = 'SBOND_RECEIVE',\n  JUNIOR_STAKE = 'JUNIOR_STAKE',\n  JUNIOR_UNSTAKE = 'JUNIOR_UNSTAKE',\n}\n\nexport const HistoryShortTypes = new Map<string, string>([\n  [APISYTxHistoryType.JUNIOR_DEPOSIT, 'Deposit'],\n  [APISYTxHistoryType.JUNIOR_INSTANT_WITHDRAW, 'Instant Withdraw'],\n  [APISYTxHistoryType.JUNIOR_REGULAR_WITHDRAW, '2 Step Withdraw'],\n  [APISYTxHistoryType.JUNIOR_REDEEM, 'Redeem'],\n  [APISYTxHistoryType.JTOKEN_SEND, 'Token Send'],\n  [APISYTxHistoryType.JTOKEN_RECEIVE, 'Token Receive'],\n  [APISYTxHistoryType.JBOND_SEND, 'Bond Send'],\n  [APISYTxHistoryType.JBOND_RECEIVE, 'Bond Receive'],\n  [APISYTxHistoryType.JUNIOR_STAKE, 'Stake'],\n  [APISYTxHistoryType.JUNIOR_UNSTAKE, 'Unstake'],\n  [APISYTxHistoryType.SENIOR_DEPOSIT, 'Deposit'],\n  [APISYTxHistoryType.SENIOR_REDEEM, 'Redeem'],\n  [APISYTxHistoryType.SBOND_SEND, 'Bond Send'],\n  [APISYTxHistoryType.SBOND_RECEIVE, 'Bond Receive'],\n]);\n\nexport const HistoryTypes = new Map<string, string>([\n  [APISYTxHistoryType.JUNIOR_DEPOSIT, 'Junior Deposit'],\n  [APISYTxHistoryType.JUNIOR_INSTANT_WITHDRAW, 'Junior Instant Withdraw'],\n  [APISYTxHistoryType.JUNIOR_REGULAR_WITHDRAW, 'Junior 2 Step Withdraw'],\n  [APISYTxHistoryType.JUNIOR_REDEEM, 'Junior Redeem'],\n  [APISYTxHistoryType.JTOKEN_SEND, 'Junior Token Send'],\n  [APISYTxHistoryType.JTOKEN_RECEIVE, 'Junior Token Receive'],\n  [APISYTxHistoryType.JBOND_SEND, 'Junior Bond Send'],\n  [APISYTxHistoryType.JBOND_RECEIVE, 'Junior Bond Receive'],\n  [APISYTxHistoryType.JUNIOR_STAKE, 'Junior Stake'],\n  [APISYTxHistoryType.JUNIOR_UNSTAKE, 'Junior Unstake'],\n  [APISYTxHistoryType.SENIOR_DEPOSIT, 'Senior Deposit'],\n  [APISYTxHistoryType.SENIOR_REDEEM, 'Senior Redeem'],\n  [APISYTxHistoryType.SBOND_SEND, 'Senior Bond Send'],\n  [APISYTxHistoryType.SBOND_RECEIVE, 'Senior Bond Receive'],\n]);\n\nexport function isPositiveHistoryType(type: APISYTxHistoryType) {\n  return [\n    APISYTxHistoryType.JUNIOR_DEPOSIT,\n    APISYTxHistoryType.JTOKEN_RECEIVE,\n    APISYTxHistoryType.JBOND_RECEIVE,\n    APISYTxHistoryType.JUNIOR_STAKE,\n    APISYTxHistoryType.SENIOR_DEPOSIT,\n    APISYTxHistoryType.SBOND_RECEIVE,\n  ].includes(type);\n}\n\nexport type APISYUserTxHistory = {\n  protocolId: string;\n  pool: string;\n  underlyingTokenAddress: string;\n  underlyingTokenSymbol: string;\n  amount: number;\n  tranche: string;\n  transactionType: string;\n  transactionHash: string;\n  blockTimestamp: number;\n  blockNumber: number;\n};\n\nexport type APISYSeniorRedeem = {\n  seniorBondAddress: string;\n  userAddress: string;\n  seniorBondId: number;\n  smartYieldAddress: string;\n  fee: number;\n  underlyingIn: number;\n  gain: number;\n  forDays: number;\n  blockTimestamp: number;\n  transactionHash: string;\n};\n\nexport enum APISYJuniorPastPositionType {\n  JUNIOR_REDEEM = 'JUNIOR_REDEEM',\n  JUNIOR_INSTANT_WITHDRAW = 'JUNIOR_INSTANT_WITHDRAW',\n}\n\nexport const JuniorPastPositionTypes = new Map<string, string>([\n  [APISYJuniorPastPositionType.JUNIOR_REDEEM, 'Redeem'],\n  [APISYJuniorPastPositionType.JUNIOR_INSTANT_WITHDRAW, 'Instant Withdraw'],\n]);\n\nexport type APISYJuniorPastPosition = {\n  protocolId: string;\n  smartYieldAddress: string;\n  underlyingTokenAddress: string;\n  underlyingTokenSymbol: string;\n  tokensIn: BigNumber;\n  underlyingOut: BigNumber;\n  forfeits: BigNumber;\n  transactionType: string;\n  blockTimestamp: number;\n  transactionHash: string;\n};\n\nexport type APISYPortfolioValue = {\n  timestamp: Date;\n  seniorValue: number;\n  juniorValue: number;\n};\n\nexport type APISYSeniorPortfolioValue = {\n  timestamp: Date;\n  seniorValue: number;\n};\n\nexport type APISYJuniorPortfolioValue = {\n  timestamp: Date;\n  juniorValue: number;\n};\n\nexport type APISYRewardPool = {\n  poolAddress: string;\n  poolTokenAddress: string;\n  poolTokenDecimals: number;\n  poolType: string; // SINGLE | MULTI\n  protocolId: string;\n  rewardTokens: {\n    address: string;\n    symbol: string;\n    decimals: number;\n  }[];\n  underlyingAddress: string;\n  underlyingSymbol: string;\n  poolControllerAddress: string;\n};\n\nexport enum APISYRewardTxHistoryType {\n  JUNIOR_STAKE = 'JUNIOR_STAKE',\n  JUNIOR_UNSTAKE = 'JUNIOR_UNSTAKE',\n}\n\nexport const RewardHistoryShortTypes = new Map<string, string>([\n  [APISYRewardTxHistoryType.JUNIOR_STAKE, 'Stake'],\n  [APISYRewardTxHistoryType.JUNIOR_UNSTAKE, 'Unstake'],\n]);\n\nexport type APISYRewardPoolTransaction = {\n  userAddress: string;\n  transactionType: string;\n  amount: BigNumber;\n  blockNumber: number;\n  blockTimestamp: number;\n  transactionHash: string;\n};\n\nexport type SyAPIType = {\n  fetchSYPools(originator?: string): Promise<APISYPool[]>;\n  fetchSYPool(originator: string, underlyingSymbol: string): Promise<APISYPool>;\n  fetchSYPoolAPY(syAddress: string, windowFilter?: string): Promise<APISYPoolAPY[]>;\n  fetchSYPoolLiquidity(syAddress: string, windowFilter?: string): Promise<APISYPoolLiquidity[]>;\n  fetchSYPoolTransactions(\n    poolAddress: string,\n    page: number,\n    limit: number,\n    transactionType?: string,\n  ): Promise<PaginatedResult<APISYPoolTransaction>>;\n  fetchSYSeniorBonds(\n    poolAddress: string,\n    page: number,\n    limit: number,\n    redeemed?: string,\n    sortBy?: string,\n    sortDir?: string,\n  ): Promise<PaginatedResult<APISYSeniorBonds>>;\n  fetchSYJuniorBonds(\n    poolAddress: string,\n    page: number,\n    limit: number,\n    redeemed?: string,\n    sortBy?: string,\n    sortDir?: string,\n  ): Promise<PaginatedResult<APISYJuniorBonds>>;\n  fetchSYUserTxHistory(\n    address: string,\n    page: number,\n    limit: number,\n    originator?: string,\n    token?: string,\n    transactionType?: string,\n  ): Promise<PaginatedResult<APISYUserTxHistory>>;\n  fetchSYSeniorRedeems(\n    address: string,\n    page: number,\n    limit: number,\n    originator?: string,\n    token?: string,\n  ): Promise<PaginatedResult<APISYSeniorRedeem>>;\n  fetchSYJuniorPastPositions(\n    address: string,\n    page: number,\n    limit: number,\n    originator?: string,\n    token?: string,\n    transactionType?: string,\n  ): Promise<PaginatedResult<APISYJuniorPastPosition>>;\n  fetchSYPortfolioValues(address: string): Promise<APISYPortfolioValue[]>;\n  fetchSYSeniorPortfolioValues(address: string): Promise<APISYSeniorPortfolioValue[]>;\n  fetchSYJuniorPortfolioValues(address: string): Promise<APISYJuniorPortfolioValue[]>;\n  fetchSYRewardPools(originator?: string, underlyingSymbol?: string): Promise<APISYRewardPool[]>;\n  fetchSYRewardPoolTransactions(\n    poolAddress: string,\n    page: number,\n    limit: number,\n    userAddress?: string,\n    transactionType?: string,\n  ): Promise<PaginatedResult<APISYRewardPoolTransaction>>;\n};\n\nconst Context = createContext<SyAPIType>(InvariantContext('SyAPIProvider'));\n\nexport function useSyAPI(): SyAPIType {\n  return useContext(Context);\n}\n\nconst SyAPIProvider: FC = props => {\n  const config = useConfig();\n\n  function fetchSYPools(originator = 'all'): Promise<APISYPool[]> {\n    const url = new URL(`/api/smartyield/pools?originator=${originator}`, config.api.baseUrl);\n\n    return fetch(url.toString())\n      .then(result => result.json())\n      .then(result => result.data);\n  }\n\n  function fetchSYPool(originator: string, underlyingSymbol: string): Promise<APISYPool> {\n    const url = new URL(\n      `/api/smartyield/pools?originator=${originator}&underlyingSymbol=${underlyingSymbol}`,\n      config.api.baseUrl,\n    );\n\n    return fetch(url.toString())\n      .then(result => result.json())\n      .then(result => result.data?.[0]);\n  }\n\n  function fetchSYPoolAPY(syAddress: string, windowFilter: string = '24h'): Promise<APISYPoolAPY[]> {\n    const query = queryfy({\n      window: windowFilter,\n    });\n\n    const url = new URL(`/api/smartyield/pools/${syAddress}/apy?${query}`, config.api.baseUrl);\n\n    return fetch(url.toString())\n      .then(result => result.json())\n      .then(result => result.data);\n  }\n\n  function fetchSYPoolLiquidity(syAddress: string, windowFilter: string = '24h'): Promise<APISYPoolLiquidity[]> {\n    const query = queryfy({\n      window: windowFilter,\n    });\n\n    const url = new URL(`/api/smartyield/pools/${syAddress}/liquidity?${query}`, config.api.baseUrl);\n\n    return fetch(url.toString())\n      .then(result => result.json())\n      .then(result => result.data);\n  }\n\n  function fetchSYPoolTransactions(\n    poolAddress: string,\n    page = 1,\n    limit = 10,\n    transactionType: string = 'all',\n  ): Promise<PaginatedResult<APISYPoolTransaction>> {\n    const query = queryfy({\n      page: String(page),\n      limit: String(limit),\n      transactionType,\n    });\n\n    const url = new URL(`/api/smartyield/pools/${poolAddress}/transactions?${query}`, config.api.baseUrl);\n\n    return fetch(url.toString())\n      .then(result => result.json())\n      .then((result: PaginatedResult<APISYPoolTransaction>) => ({\n        ...result,\n        data: (result.data ?? []).map((item: APISYPoolTransaction) => ({\n          ...item,\n          amount: new BigNumber(item.amount),\n        })),\n      }));\n  }\n\n  function fetchSYSeniorBonds(\n    poolAddress: string,\n    page = 1,\n    limit = 10,\n    redeemed?: string,\n    sortBy?: string,\n    sortDir?: string,\n  ): Promise<PaginatedResult<APISYSeniorBonds>> {\n    const query = queryfy({\n      page: String(page),\n      limit: String(limit),\n      redeemed,\n      sort: sortBy,\n      sortDirection: sortDir,\n    });\n\n    const url = new URL(`/api/smartyield/pools/${poolAddress}/senior-bonds?${query}`, config.api.baseUrl);\n\n    return fetch(url.toString())\n      .then(result => result.json())\n      .then((result: PaginatedResult<APISYSeniorBonds>) => ({\n        ...result,\n        data: (result.data ?? []).map((item: APISYSeniorBonds) => ({\n          ...item,\n          depositedAmount: new BigNumber(item.depositedAmount),\n          redeemableAmount: new BigNumber(item.redeemableAmount),\n        })),\n      }));\n  }\n\n  function fetchSYJuniorBonds(\n    poolAddress: string,\n    page = 1,\n    limit = 10,\n    redeemed?: string,\n    sortBy?: string,\n    sortDir?: string,\n  ): Promise<PaginatedResult<APISYJuniorBonds>> {\n    const query = queryfy({\n      page: String(page),\n      limit: String(limit),\n      redeemed,\n      sort: sortBy,\n      sortDirection: sortDir,\n    });\n\n    const url = new URL(`/api/smartyield/pools/${poolAddress}/junior-bonds?${query}`, config.api.baseUrl);\n\n    return fetch(url.toString())\n      .then(result => result.json())\n      .then((result: PaginatedResult<APISYJuniorBonds>) => ({\n        ...result,\n        data: (result.data ?? []).map((item: APISYJuniorBonds) => ({\n          ...item,\n          depositedAmount: new BigNumber(item.depositedAmount),\n        })),\n      }));\n  }\n\n  function fetchSYUserTxHistory(\n    address: string,\n    page = 1,\n    limit = 10,\n    originator = 'all',\n    token = 'all',\n    transactionType = 'all',\n  ): Promise<PaginatedResult<APISYUserTxHistory>> {\n    const query = queryfy({\n      page: String(page),\n      limit: String(limit),\n      originator,\n      token,\n      transactionType,\n    });\n\n    const url = new URL(`/api/smartyield/users/${address}/history?${query}`, config.api.baseUrl);\n\n    return fetch(url.toString())\n      .then(result => result.json())\n      .then((result: PaginatedResult<APISYUserTxHistory>) => ({\n        ...result,\n        data: (result.data ?? []).map((item: APISYUserTxHistory) => ({\n          ...item,\n          amount: Number(item.amount),\n        })),\n      }));\n  }\n\n  function fetchSYSeniorRedeems(\n    address: string,\n    page = 1,\n    limit = 10,\n    originator = 'all',\n    token = 'all',\n  ): Promise<PaginatedResult<APISYSeniorRedeem>> {\n    const query = queryfy({\n      page: String(page),\n      limit: String(limit),\n      originator,\n      token,\n    });\n\n    const url = new URL(`/api/smartyield/users/${address}/redeems/senior?=${query}`, config.api.baseUrl);\n\n    return fetch(url.toString())\n      .then(result => result.json())\n      .then((result: PaginatedResult<APISYSeniorRedeem>) => ({\n        ...result,\n        data: (result.data ?? []).map((item: APISYSeniorRedeem) => ({\n          ...item,\n        })),\n      }));\n  }\n\n  function fetchSYJuniorPastPositions(\n    address: string,\n    page = 1,\n    limit = 10,\n    originator = 'all',\n    token = 'all',\n    transactionType = 'all',\n  ): Promise<PaginatedResult<APISYJuniorPastPosition>> {\n    const query = queryfy({\n      page: String(page),\n      limit: String(limit),\n      originator,\n      token,\n      transactionType,\n    });\n\n    const url = new URL(`/api/smartyield/users/${address}/junior-past-positions?${query}`, config.api.baseUrl);\n\n    return fetch(url.toString())\n      .then(result => result.json())\n      .then((result: PaginatedResult<APISYJuniorPastPosition>) => ({\n        ...result,\n        data: (result.data ?? []).map((item: APISYJuniorPastPosition) => ({\n          ...item,\n          tokensIn: new BigNumber(item.tokensIn),\n          underlyingOut: new BigNumber(item.underlyingOut),\n          forfeits: new BigNumber(item.forfeits),\n        })),\n      }));\n  }\n\n  function fetchSYPortfolioValues(address: string): Promise<APISYPortfolioValue[]> {\n    const url = new URL(`/api/smartyield/users/${address}/portfolio-value`, config.api.baseUrl);\n\n    return fetch(url.toString())\n      .then(result => result.json())\n      .then(result =>\n        (result.data ?? []).map((item: APISYPortfolioValue) => ({\n          ...item,\n          timestamp: new Date(item.timestamp),\n        })),\n      );\n  }\n\n  function fetchSYSeniorPortfolioValues(address: string): Promise<APISYSeniorPortfolioValue[]> {\n    const url = new URL(`/api/smartyield/users/${address}/portfolio-value/senior`, config.api.baseUrl);\n\n    return fetch(url.toString())\n      .then(result => result.json())\n      .then(result =>\n        (result.data ?? []).map((item: APISYSeniorPortfolioValue) => ({\n          ...item,\n          timestamp: new Date(item.timestamp),\n        })),\n      );\n  }\n\n  function fetchSYJuniorPortfolioValues(address: string): Promise<APISYJuniorPortfolioValue[]> {\n    const url = new URL(`/api/smartyield/users/${address}/portfolio-value/junior`, config.api.baseUrl);\n\n    return fetch(url.toString())\n      .then(result => result.json())\n      .then(result =>\n        (result.data ?? []).map((item: APISYJuniorPortfolioValue) => ({\n          ...item,\n          timestamp: new Date(item.timestamp),\n        })),\n      );\n  }\n\n  function fetchSYRewardPools(\n    originator: string = 'all',\n    underlyingSymbol: string = 'all',\n  ): Promise<APISYRewardPool[]> {\n    const url = new URL(\n      `/api/smartyield/rewards/v2/pools?originator=${originator}&underlyingSymbol=${underlyingSymbol}`,\n      config.api.baseUrl,\n    );\n\n    return fetch(url.toString())\n      .then(result => result.json())\n      .then(result => result.data);\n  }\n\n  function fetchSYRewardPoolTransactions(\n    poolAddress: string,\n    page = 1,\n    limit = 10,\n    userAddress: string = 'all',\n    transactionType: string = 'all',\n  ): Promise<PaginatedResult<APISYRewardPoolTransaction>> {\n    const query = queryfy({\n      page: String(page),\n      limit: String(limit),\n      userAddress,\n      transactionType,\n    });\n\n    const url = new URL(`/api/smartyield/rewards/v2/pools/${poolAddress}/transactions?${query}`, config.api.baseUrl);\n\n    return fetch(url.toString())\n      .then(result => result.json())\n      .then((result: PaginatedResult<APISYRewardPoolTransaction>) => ({\n        ...result,\n        data: (result.data ?? []).map((item: APISYRewardPoolTransaction) => ({\n          ...item,\n          amount: new BigNumber(item.amount),\n        })),\n      }));\n  }\n\n  const value = {\n    fetchSYPools,\n    fetchSYPool,\n    fetchSYPoolAPY,\n    fetchSYPoolLiquidity,\n    fetchSYPoolTransactions,\n    fetchSYSeniorBonds,\n    fetchSYJuniorBonds,\n    fetchSYUserTxHistory,\n    fetchSYSeniorRedeems,\n    fetchSYJuniorPastPositions,\n    fetchSYPortfolioValues,\n    fetchSYSeniorPortfolioValues,\n    fetchSYJuniorPortfolioValues,\n    fetchSYRewardPools,\n    fetchSYRewardPoolTransactions,\n  };\n\n  return <Context.Provider value={value}>{props.children}</Context.Provider>;\n};\n\nexport default SyAPIProvider;\n\nexport function useFetchSyPools({\n  originator,\n  baseUrl,\n}: {\n  originator?: string;\n  baseUrl?: string;\n} = {}): UseFetchReturn<APISYPool[]> {\n  const config = useConfig();\n  const url = new URL('/api/smartyield/pools', baseUrl ?? config.api.baseUrl);\n\n  if (originator) {\n    url.searchParams.set('originator', originator);\n  }\n\n  return useFetch(url, {\n    transform: ({ data }) => data,\n  });\n}\n","import React from 'react';\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom';\nimport BigNumber from 'bignumber.js';\nimport { useContractManager } from 'web3/components/contractManagerProvider';\nimport Erc20Contract from 'web3/erc20Contract';\nimport Web3Contract from 'web3/web3Contract';\n\nimport { useKnownTokens } from 'components/providers/knownTokensProvider';\nimport { TokenType, useTokens } from 'components/providers/tokensProvider';\nimport { MainnetHttpsWeb3Provider, useWeb3 } from 'components/providers/web3Provider';\nimport { useReload } from 'hooks/useReload';\nimport { APISYPool, useSyAPI } from 'modules/smart-yield/api';\nimport TxStatusModal from 'modules/smart-yield/components/tx-status-modal';\nimport SYAaveTokenContract from 'modules/smart-yield/contracts/syAaveTokenContract';\nimport SYControllerContract from 'modules/smart-yield/contracts/syControllerContract';\nimport SYRewardPoolContract from 'modules/smart-yield/contracts/syRewardPoolContract';\nimport SYSmartYieldContract from 'modules/smart-yield/contracts/sySmartYieldContract';\nimport { AaveMarket, MarketMeta, getKnownMarketById } from 'modules/smart-yield/providers/markets';\nimport { useWallet } from 'wallets/walletProvider';\n\nimport { InvariantContext } from 'utils/context';\n\nexport type SYPool = APISYPool & {\n  token?: TokenType;\n  market?: MarketMeta;\n  contracts: {\n    smartYield: SYSmartYieldContract;\n    underlying: Erc20Contract;\n    controller: SYControllerContract;\n    rewardPool?: SYRewardPoolContract;\n  };\n  apy?: BigNumber;\n  apr?: BigNumber;\n};\n\ntype StatusModal = {\n  visible: boolean;\n  type?: 'deposit' | 'withdraw';\n  state?: 'progress' | 'success' | 'failure';\n  txHash?: string;\n};\n\ntype State = {\n  marketId?: string;\n  tokenId?: string;\n  loading: boolean;\n  pool?: SYPool | null;\n  statusModal: StatusModal;\n};\n\nconst InitialState: State = {\n  marketId: undefined,\n  tokenId: undefined,\n  loading: false,\n  pool: undefined,\n  statusModal: {\n    visible: false,\n    type: undefined,\n    state: undefined,\n    txHash: undefined,\n  },\n};\n\ntype Actions = {\n  getForfeitsFor: (amount: BigNumber) => Promise<BigNumber | undefined>;\n  approveUnderlying: (enable: boolean) => Promise<void>;\n  seniorDeposit: (\n    principalAmount: BigNumber,\n    minGain: BigNumber,\n    deadline: number,\n    forDays: number,\n    gasPrice: number,\n  ) => Promise<void>;\n  juniorDeposit: (\n    underlyingAmount: BigNumber,\n    minTokens: BigNumber,\n    deadline: number,\n    gasPrice: number,\n  ) => Promise<void>;\n  twoStepWithdraw: (tokenAmount: BigNumber, maxMaturesAt: number, deadline: number, gasPrice: number) => Promise<void>;\n  instantWithdraw: (\n    tokenAmount: BigNumber,\n    minUnderlying: BigNumber,\n    deadline: number,\n    gasPrice: number,\n  ) => Promise<void>;\n};\n\ntype ContextType = State & {\n  actions: Actions;\n};\n\nconst Context = React.createContext<ContextType>(InvariantContext('PoolProvider'));\n\nexport function useSYPool(): ContextType {\n  return React.useContext(Context);\n}\n\nconst PoolProvider: React.FC = props => {\n  const { children } = props;\n\n  const history = useHistory();\n  const location = useLocation();\n  const wallet = useWallet();\n  const { getEtherscanTxUrl } = useWeb3();\n  const { getContract } = useContractManager();\n  const { getToken } = useTokens();\n  const { projectToken, stkAaveToken, ethToken, convertTokenIn, convertTokenInUSD } = useKnownTokens();\n  const syAPI = useSyAPI();\n  const [reload, version] = useReload();\n  const [state, setState] = React.useState(InitialState);\n\n  const isSeniorDeposit = Boolean(useRouteMatch('/smart-yield/deposit/senior'));\n  const isJuniorDeposit = Boolean(useRouteMatch('/smart-yield/deposit/junior'));\n  const isJuniorWithdraw = Boolean(useRouteMatch('/smart-yield/withdraw'));\n\n  const [market, token] = React.useMemo(() => {\n    const urlQuery = new URLSearchParams(location.search);\n\n    let marketStr = urlQuery.get('m') ?? undefined;\n\n    if (marketStr) {\n      marketStr = decodeURIComponent(marketStr);\n    }\n\n    let tokenStr = urlQuery.get('t') ?? undefined;\n\n    if (tokenStr) {\n      tokenStr = decodeURIComponent(tokenStr);\n    }\n\n    return [marketStr, tokenStr];\n  }, [location.search]);\n\n  async function getAaveIncentivesAPY(\n    cTokenAddress: string,\n    uDecimals: number,\n    uSymbol: string,\n  ): Promise<BigNumber | undefined> {\n    const aTokenAddress = cTokenAddress;\n    const aTokenDecimals = uDecimals;\n\n    const aToken = new SYAaveTokenContract(aTokenAddress);\n    aToken.setCallProvider(MainnetHttpsWeb3Provider); // TODO: Re-think about mainnet provider\n    await aToken.loadCommon();\n\n    const aTokenPriceInEth = convertTokenIn(1, stkAaveToken.symbol, ethToken.symbol);\n    const uTokenPriceInEth = convertTokenIn(1, uSymbol, ethToken.symbol);\n\n    return aToken.calculateIncentivesAPY(aTokenPriceInEth!, uTokenPriceInEth!, aTokenDecimals);\n  }\n\n  React.useEffect(() => {\n    if (!market || !token) {\n      return;\n    }\n\n    setState(prevState => ({\n      ...prevState,\n      marketId: market,\n      tokenId: token,\n      loading: true,\n      pool: undefined,\n    }));\n\n    (async () => {\n      try {\n        const pool = await syAPI.fetchSYPool(market, token);\n\n        if (!pool) {\n          return await Promise.reject();\n        }\n\n        let extPool: SYPool;\n\n        const smartYield = getContract<SYSmartYieldContract>(pool.smartYieldAddress, () => {\n          return new SYSmartYieldContract(pool.smartYieldAddress);\n        });\n        await smartYield.loadCommon().catch(Error);\n\n        const underlying = getContract<Erc20Contract>(pool.underlyingAddress, () => {\n          return new Erc20Contract([], pool.underlyingAddress);\n        });\n\n        const controller = getContract<SYControllerContract>(pool.controllerAddress, () => {\n          return new SYControllerContract(pool.controllerAddress);\n        });\n\n        let apy;\n\n        if (pool.protocolId === AaveMarket.id) {\n          apy = await getAaveIncentivesAPY(pool.cTokenAddress, pool.underlyingDecimals, pool.underlyingSymbol);\n        }\n\n        await Promise.all([smartYield.loadCommon(), underlying.loadCommon()]);\n\n        let rewardPool: SYRewardPoolContract | undefined;\n\n        extPool = {\n          ...pool,\n          token: getToken(pool.underlyingSymbol),\n          market: getKnownMarketById(pool.protocolId),\n          contracts: {\n            smartYield,\n            underlying,\n            controller,\n            rewardPool,\n          },\n          apr: undefined,\n          apy,\n        };\n\n        const rewardPools = await syAPI.fetchSYRewardPools(pool.protocolId, pool.underlyingSymbol);\n\n        if (rewardPools?.length > 0) {\n          rewardPool = getContract<SYRewardPoolContract>(pool.rewardPoolAddress, () => {\n            return new SYRewardPoolContract(pool.rewardPoolAddress, rewardPools[0].poolType === 'MULTI');\n          });\n          extPool.contracts.rewardPool = rewardPool;\n          rewardPool.on(Web3Contract.UPDATE_DATA, reload);\n          rewardPool\n            .loadCommon()\n            .then(() => {\n              return rewardPool?.loadRewardRateFor(projectToken.address) as any;\n            })\n            .then(() => {\n              const { poolSize } = rewardPool!;\n\n              if (poolSize) {\n                const r = rewardPool?.getDailyRewardFor(projectToken.address)?.unscaleBy(projectToken.decimals);\n                const yearlyReward = convertTokenInUSD(r, projectToken.symbol!)?.multipliedBy(365);\n\n                const p = poolSize?.dividedBy(10 ** (smartYield.decimals ?? 0));\n                const poolBalance = convertTokenInUSD(p, smartYield.symbol!);\n\n                if (yearlyReward && poolBalance && poolBalance.gt(BigNumber.ZERO)) {\n                  extPool.apr = yearlyReward.dividedBy(poolBalance);\n                  reload();\n                }\n              }\n            });\n        }\n\n        setState(prevState => ({\n          ...prevState,\n          loading: false,\n          pool: extPool,\n        }));\n      } catch (e) {\n        console.error(e);\n        setState(prevState => ({\n          ...prevState,\n          loading: false,\n          pool: null,\n        }));\n      }\n    })();\n  }, [market, token]);\n\n  React.useEffect(() => {\n    const { pool } = state;\n\n    if (!pool) {\n      return;\n    }\n\n    pool.contracts.smartYield.setProvider(wallet.provider);\n    pool.contracts.underlying.setProvider(wallet.provider);\n    pool.contracts.controller.setProvider(wallet.provider);\n    pool.contracts.rewardPool?.setProvider(wallet.provider);\n  }, [state.pool, wallet.provider]);\n\n  React.useEffect(() => {\n    const { pool } = state;\n\n    if (!pool) {\n      return;\n    }\n\n    pool.contracts.smartYield.setAccount(wallet.account);\n    if (wallet.account) {\n      pool.contracts.smartYield.loadBalance().then(reload);\n    }\n\n    pool.contracts.underlying.setAccount(wallet.account);\n    if (wallet.account) {\n      pool.contracts.underlying.loadBalance().then(reload);\n      pool.contracts.underlying.loadAllowance(pool.providerAddress).then(reload);\n    }\n  }, [state.pool, wallet.account]);\n\n  const getForfeitsFor = React.useCallback(\n    async (amount: BigNumber): Promise<BigNumber | undefined> => {\n      const { pool } = state;\n\n      if (!pool) {\n        return undefined;\n      }\n\n      const { decimals, totalSupply } = pool.contracts.smartYield;\n\n      if (!totalSupply || !decimals) {\n        return undefined;\n      }\n\n      const abondDebt = await pool.contracts.smartYield.getAbondDebt();\n\n      return abondDebt\n        .dividedBy(10 ** decimals)\n        .multipliedBy(amount)\n        .dividedBy(totalSupply.dividedBy(10 ** decimals));\n    },\n    [state.pool],\n  );\n\n  const createSmartYieldContract = React.useCallback(\n    (txType: 'deposit' | 'withdraw'): SYSmartYieldContract | undefined => {\n      const { pool } = state;\n\n      if (!pool || !wallet.account) {\n        return undefined;\n      }\n\n      const contract = getContract<SYSmartYieldContract>(pool.smartYieldAddress, () => {\n        return new SYSmartYieldContract(pool.smartYieldAddress);\n      });\n\n      contract\n        .on('tx:hash', (txHash: string) => {\n          setState(prevState => ({\n            ...prevState,\n            statusModal: {\n              visible: true,\n              type: txType,\n              state: 'progress',\n              txHash,\n            },\n          }));\n        })\n        .on('tx:success', () => {\n          setState(prevState => ({\n            ...prevState,\n            statusModal: {\n              ...prevState.statusModal,\n              state: 'success',\n            },\n          }));\n        })\n        .on('tx:fail', () => {\n          setState(prevState => ({\n            ...prevState,\n            statusModal: {\n              ...prevState.statusModal,\n              state: 'failure',\n            },\n          }));\n        });\n\n      return contract;\n    },\n    [state.pool, wallet.provider, wallet.account],\n  );\n\n  function handleStatusModalCancel() {\n    setState(prevState => ({\n      ...prevState,\n      statusModal: {\n        visible: false,\n        type: undefined,\n        state: undefined,\n        txHash: undefined,\n      },\n    }));\n  }\n\n  function handleTxSuccess() {\n    if (isSeniorDeposit) {\n      history.push({\n        pathname: `/smart-yield/portfolio/senior`,\n      });\n    } else if (isJuniorDeposit || isJuniorWithdraw) {\n      history.push({\n        pathname: `/smart-yield/portfolio/junior`,\n      });\n    }\n  }\n\n  const approveUnderlying = React.useCallback(\n    (enable: boolean) => {\n      const { pool } = state;\n\n      if (!pool || !wallet.account) {\n        return Promise.reject();\n      }\n\n      return pool.contracts.underlying.approve(pool.providerAddress, enable).then(reload);\n    },\n    [state.pool],\n  );\n\n  const seniorDeposit = React.useCallback(\n    (principalAmount: BigNumber, minGain: BigNumber, deadline: number, forDays: number, gasPrice: number) => {\n      const contract = createSmartYieldContract('deposit');\n\n      if (!contract) {\n        return Promise.reject();\n      }\n\n      return contract.buyBondSend(principalAmount, minGain, deadline, forDays, gasPrice).then(() => {\n        state.pool?.contracts.underlying.loadBalance().then(reload);\n      });\n    },\n    [createSmartYieldContract],\n  );\n\n  const juniorDeposit = React.useCallback(\n    (underlyingAmount: BigNumber, minTokens: BigNumber, deadline: number, gasPrice: number) => {\n      const contract = createSmartYieldContract('deposit');\n\n      if (!contract) {\n        return Promise.reject();\n      }\n\n      return contract.buyTokensSend(underlyingAmount, minTokens, deadline, gasPrice).then(() => {\n        state.pool?.contracts.smartYield.loadBalance().then(reload);\n        state.pool?.contracts.underlying.loadBalance().then(reload);\n      });\n    },\n    [createSmartYieldContract],\n  );\n\n  const twoStepWithdraw = React.useCallback(\n    (tokenAmount: BigNumber, maxMaturesAt: number, deadline: number, gasPrice: number) => {\n      const contract = createSmartYieldContract('withdraw');\n\n      if (!contract) {\n        return Promise.reject();\n      }\n\n      return contract.buyJuniorBondSend(tokenAmount, maxMaturesAt, deadline, gasPrice).then(() => {\n        state.pool?.contracts.smartYield.loadBalance().then(reload);\n        state.pool?.contracts.underlying.loadBalance().then(reload);\n      });\n    },\n    [createSmartYieldContract],\n  );\n\n  const instantWithdraw = React.useCallback(\n    (tokenAmount: BigNumber, minUnderlying: BigNumber, deadline: number, gasPrice: number) => {\n      const contract = createSmartYieldContract('withdraw');\n\n      if (!contract) {\n        return Promise.reject();\n      }\n\n      return contract.sellTokensSend(tokenAmount, minUnderlying, deadline, gasPrice).then(() => {\n        state.pool?.contracts.smartYield.loadBalance().then(reload);\n        state.pool?.contracts.underlying.loadBalance().then(reload);\n      });\n    },\n    [createSmartYieldContract],\n  );\n\n  const actions = React.useMemo<Actions>(\n    () => ({\n      getForfeitsFor,\n      approveUnderlying,\n      seniorDeposit,\n      juniorDeposit,\n      twoStepWithdraw,\n      instantWithdraw,\n    }),\n    [getForfeitsFor, approveUnderlying, seniorDeposit, juniorDeposit, twoStepWithdraw, instantWithdraw],\n  );\n\n  const value = React.useMemo<ContextType>(\n    () => ({\n      ...state,\n      actions,\n    }),\n    [state, actions, version],\n  );\n\n  return (\n    <>\n      <Context.Provider value={value}>{children}</Context.Provider>\n      {state.statusModal.visible && (\n        <TxStatusModal\n          type={state.statusModal.type}\n          state={state.statusModal.state}\n          txLink={state.statusModal.txHash && getEtherscanTxUrl(state.statusModal.txHash)}\n          onCancel={handleStatusModalCancel}\n          onSuccessClick={handleTxSuccess}\n        />\n      )}\n    </>\n  );\n};\n\nexport default PoolProvider;\n","import { ReactElement } from 'react';\n\nimport { ExternalLink } from 'components/button';\n\nexport type MarketMeta = {\n  id: string;\n  name: string;\n  icon: {\n    active: string;\n  };\n  warning?: ReactElement;\n  depositDisabled?: boolean;\n};\n\nexport const CompoundMarket: MarketMeta = {\n  id: 'compound/v2',\n  name: 'Compound',\n  icon: {\n    active: 'compound',\n  },\n};\n\nexport const AaveMarket: MarketMeta = {\n  id: 'aave/v2',\n  name: 'AAVE',\n  icon: {\n    active: `aave`,\n  },\n};\n\nconst CreamFinanceMarket: MarketMeta = {\n  id: 'cream/v2',\n  name: 'C.R.E.A.M Finance',\n  icon: {\n    active: `cream`,\n  },\n  warning: (\n    <span>\n      C.R.E.A.M pool deposits have been disabled.\n      <br />\n      <ExternalLink variation=\"link\" href=\"https://medium.com/cream-finance/post-mortem-exploit-oct-27-507b12bb6f8e\">\n        Click here to learn more\n      </ExternalLink>\n    </span>\n  ),\n  depositDisabled: true,\n};\n\nexport const KnownMarkets: MarketMeta[] = [CompoundMarket, AaveMarket, CreamFinanceMarket];\n\nexport function getKnownMarketById(marketId: string): MarketMeta | undefined {\n  return KnownMarkets.find(km => km.id === marketId);\n}\n","import BigNumber from 'bignumber.js';\nimport Erc20Contract from 'web3/erc20Contract';\nimport { getGasValue } from 'web3/utils';\nimport Web3Contract, { BatchContractMethod } from 'web3/web3Contract';\n\nconst ABI: any[] = [\n  {\n    name: 'name',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\n  },\n  {\n    name: 'symbol',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\n  },\n  {\n    name: 'decimals',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [{ internalType: 'uint8', name: '', type: 'uint8' }],\n  },\n  {\n    name: 'balanceOf',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n  },\n  {\n    name: 'totalSupply',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n  },\n  {\n    name: 'price',\n    type: 'function',\n    stateMutability: 'nonpayable',\n    inputs: [],\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n  },\n  {\n    name: 'abondDebt',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n  },\n  {\n    name: 'abond',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      { internalType: 'uint256', name: 'principal', type: 'uint256' },\n      {\n        internalType: 'uint256',\n        name: 'gain',\n        type: 'uint256',\n      },\n      { internalType: 'uint256', name: 'issuedAt', type: 'uint256' },\n      {\n        internalType: 'uint256',\n        name: 'maturesAt',\n        type: 'uint256',\n      },\n      { internalType: 'bool', name: 'liquidated', type: 'bool' },\n    ],\n  },\n  {\n    name: 'bondGain',\n    type: 'function',\n    inputs: [\n      { name: 'principalAmount', type: 'uint256' },\n      { name: 'forDays', type: 'uint16' },\n    ],\n    outputs: [{ name: '', type: 'uint256' }],\n  },\n  {\n    name: 'juniorBonds',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    outputs: [\n      { internalType: 'uint256', name: 'tokens', type: 'uint256' },\n      {\n        internalType: 'uint256',\n        name: 'maturesAt',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    name: 'seniorBonds',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    outputs: [\n      { internalType: 'uint256', name: 'principal', type: 'uint256' },\n      {\n        internalType: 'uint256',\n        name: 'gain',\n        type: 'uint256',\n      },\n      { internalType: 'uint256', name: 'issuedAt', type: 'uint256' },\n      {\n        internalType: 'uint256',\n        name: 'maturesAt',\n        type: 'uint256',\n      },\n      { internalType: 'bool', name: 'liquidated', type: 'bool' },\n    ],\n  },\n  {\n    name: 'buyTokens',\n    type: 'function',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'underlyingAmount_',\n        type: 'uint256',\n      },\n      { internalType: 'uint256', name: 'minTokens_', type: 'uint256' },\n      {\n        internalType: 'uint256',\n        name: 'deadline_',\n        type: 'uint256',\n      },\n    ],\n    outputs: [],\n  },\n  {\n    name: 'buyBond',\n    type: 'function',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'principalAmount_',\n        type: 'uint256',\n      },\n      { internalType: 'uint256', name: 'minGain_', type: 'uint256' },\n      {\n        internalType: 'uint256',\n        name: 'deadline_',\n        type: 'uint256',\n      },\n      { internalType: 'uint16', name: 'forDays_', type: 'uint16' },\n    ],\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n  },\n  {\n    name: 'buyJuniorBond',\n    type: 'function',\n    stateMutability: 'nonpayable',\n    inputs: [\n      { internalType: 'uint256', name: 'tokenAmount_', type: 'uint256' },\n      {\n        internalType: 'uint256',\n        name: 'maxMaturesAt_',\n        type: 'uint256',\n      },\n      { internalType: 'uint256', name: 'deadline_', type: 'uint256' },\n    ],\n    outputs: [],\n  },\n  {\n    name: 'sellTokens',\n    type: 'function',\n    stateMutability: 'nonpayable',\n    inputs: [\n      { internalType: 'uint256', name: 'tokenAmount_', type: 'uint256' },\n      {\n        internalType: 'uint256',\n        name: 'minUnderlying_',\n        type: 'uint256',\n      },\n      { internalType: 'uint256', name: 'deadline_', type: 'uint256' },\n    ],\n    outputs: [],\n  },\n  {\n    name: 'redeemJuniorBond',\n    type: 'function',\n    stateMutability: 'nonpayable',\n    inputs: [{ internalType: 'uint256', name: 'jBondId_', type: 'uint256' }],\n    outputs: [],\n  },\n  {\n    name: 'redeemBond',\n    type: 'function',\n    stateMutability: 'nonpayable',\n    inputs: [{ internalType: 'uint256', name: 'bondId_', type: 'uint256' }],\n    outputs: [],\n  },\n];\n\nexport type SYJuniorBondToken = {\n  jBondId: number;\n  tokens: BigNumber;\n  maturesAt: number;\n};\n\nexport type SYSeniorBondToken = {\n  sBondId: number;\n  principal: BigNumber;\n  gain: BigNumber;\n  issuedAt: number;\n  maturesAt: number;\n  liquidated: boolean;\n};\n\nexport type SYAbond = {\n  principal: BigNumber;\n  gain: BigNumber;\n  issuedAt: number;\n  maturesAt: number;\n  liquidated: boolean;\n};\n\nclass SYSmartYieldContract extends Erc20Contract {\n  constructor(address: string) {\n    super(ABI, address);\n  }\n\n  price?: BigNumber;\n  abondDebt?: BigNumber;\n  abond?: SYAbond;\n\n  async loadCommon(): Promise<void> {\n    super.loadCommon();\n\n    return this.batch([\n      {\n        method: 'price',\n        transform: value => BigNumber.from(value),\n      },\n      {\n        method: 'abondDebt',\n        transform: value => BigNumber.from(value),\n      },\n      {\n        method: 'abond',\n        transform: (value: SYAbond) => ({\n          principal: BigNumber.from(value.principal),\n          gain: BigNumber.from(value.gain),\n          issuedAt: Math.floor(new BigNumber(value.issuedAt).dividedBy(1e18).toNumber()),\n          maturesAt: Math.floor(new BigNumber(value.maturesAt).dividedBy(1e18).toNumber()),\n          liquidated: value.liquidated,\n        }),\n      },\n    ]).then(([price, abondDebt, abond]) => {\n      this.price = price.dividedBy(1e18);\n      this.abondDebt = abondDebt;\n      this.abond = abond;\n      this.emit(Web3Contract.UPDATE_DATA);\n    });\n  }\n\n  async getPrice(): Promise<BigNumber> {\n    return this.call('price').then(value => new BigNumber(value));\n  }\n\n  async getAbondDebt(): Promise<BigNumber> {\n    return this.call('abondDebt').then(value => new BigNumber(value));\n  }\n\n  async getAbond(): Promise<SYAbond> {\n    return this.call('abond').then(value => ({\n      principal: new BigNumber(value.principal),\n      gain: new BigNumber(value.gain),\n      issuedAt: Math.floor(new BigNumber(value.issuedAt).dividedBy(1e18).toNumber()),\n      maturesAt: Math.floor(new BigNumber(value.maturesAt).dividedBy(1e18).toNumber()),\n      liquidated: value.liquidated,\n    }));\n  }\n\n  async getBondGain(principalAmount: BigNumber, forDays: number): Promise<BigNumber> {\n    return this.call('bondGain', [principalAmount, forDays]).then(value => new BigNumber(value));\n  }\n\n  async getJuniorBonds(jBondIds: number[]): Promise<SYJuniorBondToken[]> {\n    if (jBondIds.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const methods = jBondIds.map<BatchContractMethod>(jBondId => ({\n      method: 'juniorBonds',\n      methodArgs: [jBondId],\n      transform: value => ({\n        jBondId,\n        tokens: BigNumber.from(value.tokens),\n        maturesAt: Number(value.maturesAt),\n      }),\n    }));\n\n    return this.batch(methods);\n  }\n\n  async getSeniorBonds(sBondIds: number[]): Promise<SYSeniorBondToken[]> {\n    if (sBondIds.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const methods = sBondIds.map<BatchContractMethod>(sBondId => ({\n      method: 'seniorBonds',\n      methodArgs: [sBondId],\n      transform: value => ({\n        sBondId,\n        principal: BigNumber.from(value.principal),\n        gain: BigNumber.from(value.gain),\n        issuedAt: Number(value.issuedAt),\n        maturesAt: Number(value.maturesAt),\n      }),\n    }));\n\n    return this.batch(methods);\n  }\n\n  buyTokensSend(underlyingAmount: BigNumber, minTokens: BigNumber, deadline: number, gasPrice: number): Promise<void> {\n    if (!this.account) {\n      return Promise.reject();\n    }\n\n    return this.send('buyTokens', [underlyingAmount, minTokens, deadline], {\n      from: this.account,\n      gasPrice: getGasValue(gasPrice),\n    });\n  }\n\n  buyBondSend(\n    principalAmount: BigNumber,\n    minGain: BigNumber,\n    deadline: number,\n    forDays: number,\n    gasPrice: number,\n  ): Promise<void> {\n    if (!this.account) {\n      return Promise.reject();\n    }\n\n    return this.send('buyBond', [principalAmount, minGain, deadline, forDays], {\n      from: this.account,\n      gasPrice: getGasValue(gasPrice),\n    });\n  }\n\n  buyJuniorBondSend(tokenAmount: BigNumber, maxMaturesAt: number, deadline: number, gasPrice: number): Promise<void> {\n    if (!this.account) {\n      return Promise.reject();\n    }\n\n    return this.send('buyJuniorBond', [tokenAmount, maxMaturesAt, deadline], {\n      from: this.account,\n      gasPrice: getGasValue(gasPrice),\n    });\n  }\n\n  sellTokensSend(tokenAmount: BigNumber, minUnderlying: BigNumber, deadline: number, gasPrice: number): Promise<void> {\n    if (!this.account) {\n      return Promise.reject();\n    }\n\n    return this.send('sellTokens', [tokenAmount, minUnderlying, deadline], {\n      from: this.account,\n      gasPrice: getGasValue(gasPrice),\n    });\n  }\n\n  redeemJuniorBondSend(jBondId: number, gasPrice: number): Promise<void> {\n    if (!this.account) {\n      return Promise.reject();\n    }\n\n    return this.send('redeemJuniorBond', [jBondId], {\n      from: this.account,\n      gasPrice: getGasValue(gasPrice),\n    });\n  }\n\n  redeemBondSend(sBondId: number, gasPrice: number): Promise<void> {\n    if (!this.account) {\n      return Promise.reject();\n    }\n\n    return this.send('redeemBond', [sBondId], {\n      from: this.account,\n      gasPrice: getGasValue(gasPrice),\n    });\n  }\n}\n\nexport default SYSmartYieldContract;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"s_tabs__32Wke\",\"shadows\":\"s_shadows__12PQF\",\"tab\":\"s_tab__2wEah\",\"active\":\"s_active__1mayN\",\"disabled\":\"s_disabled__xaH2p\",\"elasticTabs\":\"s_elasticTabs__2URoC\",\"elasticToggle\":\"s_elasticToggle__3M_xZ\",\"small\":\"s_small__c6etg\",\"horizontalMenu\":\"s_horizontalMenu__3BcI1\"};","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport BigNumber from 'bignumber.js';\nimport { useContractManager } from 'web3/components/contractManagerProvider';\nimport Erc20Contract from 'web3/erc20Contract';\nimport Web3Contract from 'web3/web3Contract';\n\nimport { useKnownTokens } from 'components/providers/knownTokensProvider';\nimport { TokenType, useTokens } from 'components/providers/tokensProvider';\nimport { MainnetHttpsWeb3Provider, useWeb3 } from 'components/providers/web3Provider';\nimport { useReload } from 'hooks/useReload';\nimport { APISYPool, useSyAPI } from 'modules/smart-yield/api';\nimport TxStatusModal from 'modules/smart-yield/components/tx-status-modal';\nimport SYAaveTokenContract from 'modules/smart-yield/contracts/syAaveTokenContract';\nimport SYRewardPoolContract from 'modules/smart-yield/contracts/syRewardPoolContract';\nimport SYSeniorBondContract from 'modules/smart-yield/contracts/sySeniorBondContract';\nimport SYSmartYieldContract from 'modules/smart-yield/contracts/sySmartYieldContract';\nimport { AaveMarket, MarketMeta, getKnownMarketById } from 'modules/smart-yield/providers/markets';\nimport { useWallet } from 'wallets/walletProvider';\n\nimport { InvariantContext } from 'utils/context';\n\nexport type PoolsSYPool = APISYPool & {\n  token?: TokenType;\n  market?: MarketMeta;\n  contracts: {\n    smartYield?: SYSmartYieldContract;\n    underlying?: Erc20Contract;\n    rewardPool?: SYRewardPoolContract;\n  };\n  apy?: BigNumber;\n  apr?: BigNumber;\n};\n\ntype State = {\n  loading: boolean;\n  pools: PoolsSYPool[];\n};\n\nconst InitialState: State = {\n  loading: false,\n  pools: [],\n};\n\ntype ContextType = State & {\n  getMarketTVL: (marketId?: string) => BigNumber;\n  redeemBond: (smartYieldAddress: string, sBondId: number, gasPrice: number) => Promise<void>;\n  redeemJuniorBond: (smartYieldAddress: string, jBondId: number, gasPrice: number) => Promise<void>;\n  transferFrom: (seniorBondAddress: string, address: string, sBondId: number, gasPrice: number) => Promise<void>;\n};\n\nconst Context = React.createContext<ContextType>(InvariantContext('PoolsProvider'));\n\ntype StatusModal = {\n  visible: boolean;\n  type?: 'redeem' | 'transfer' | 'redeemJunior';\n  state?: 'progress' | 'success' | 'failure';\n  txHash?: string;\n};\n\nexport function usePools(): ContextType {\n  return React.useContext(Context);\n}\n\nconst PoolsProvider: React.FC = props => {\n  const { children } = props;\n\n  const history = useHistory();\n  const wallet = useWallet();\n  const { getEtherscanTxUrl } = useWeb3();\n  const { getContract } = useContractManager();\n  const { getToken } = useTokens();\n  const { getTokenBySymbol, convertTokenIn, convertTokenInUSD, stkAaveToken, ethToken, bondToken } = useKnownTokens();\n  const [reload, version] = useReload();\n  const [state, setState] = React.useState<State>(InitialState);\n  const syAPI = useSyAPI();\n\n  const [statusModal, setStatusModal] = React.useState<StatusModal>({\n    visible: false,\n    type: undefined,\n    state: undefined,\n    txHash: undefined,\n  });\n\n  const getAaveIncentivesAPY = useCallback(\n    async (cTokenAddress: string, uDecimals: number, uSymbol: string): Promise<BigNumber | undefined> => {\n      const aTokenAddress = cTokenAddress;\n      const aTokenDecimals = uDecimals;\n\n      const aToken = new SYAaveTokenContract(aTokenAddress); // TODO: re-think\n      aToken.setCallProvider(MainnetHttpsWeb3Provider); // TODO: Re-think about mainnet provider\n      await aToken.loadCommon();\n\n      const aTokenPriceInEth = convertTokenIn(1, stkAaveToken.symbol, ethToken.symbol);\n      const uTokenPriceInEth = convertTokenIn(1, uSymbol, ethToken.symbol);\n\n      return aToken.calculateIncentivesAPY(aTokenPriceInEth!, uTokenPriceInEth!, aTokenDecimals);\n    },\n    [convertTokenIn, ethToken, getTokenBySymbol, stkAaveToken],\n  );\n\n  React.useEffect(() => {\n    setState(prevState => ({\n      ...prevState,\n      loading: true,\n      pools: [],\n    }));\n\n    (async () => {\n      try {\n        const pools = await syAPI.fetchSYPools();\n\n        setState(prevState => ({\n          ...prevState,\n          loading: false,\n          pools: (pools ?? []).map(pool => {\n            const smartYield = getContract<SYSmartYieldContract>(pool.smartYieldAddress, () => {\n              return new SYSmartYieldContract(pool.smartYieldAddress);\n            });\n            smartYield.on(Web3Contract.UPDATE_DATA, reload);\n            const underlying = getContract<Erc20Contract>(pool.underlyingAddress, () => {\n              return new Erc20Contract([], pool.underlyingAddress);\n            });\n            underlying.on(Web3Contract.UPDATE_DATA, reload);\n\n            smartYield.loadCommon();\n            underlying.loadCommon();\n\n            const result: PoolsSYPool = {\n              ...pool,\n              token: getToken(pool.underlyingSymbol),\n              market: getKnownMarketById(pool.protocolId),\n              contracts: {\n                smartYield,\n                underlying,\n                rewardPool: undefined,\n              },\n              apy: undefined,\n              apr: undefined,\n            };\n\n            if (pool.rewardPoolAddress) {\n              const rewardPool = getContract<SYRewardPoolContract>(pool.rewardPoolAddress, () => {\n                return new SYRewardPoolContract(pool.rewardPoolAddress, pool.protocolId === AaveMarket.id);\n              });\n              rewardPool.on(Web3Contract.UPDATE_DATA, reload);\n              rewardPool\n                .loadCommon()\n                .then(() => {\n                  return rewardPool.loadRewardRateFor(bondToken.address) as any;\n                })\n                .then(() => {\n                  const { poolSize } = rewardPool;\n\n                  if (poolSize) {\n                    const r = rewardPool.getDailyRewardFor(bondToken.address)?.unscaleBy(bondToken.decimals);\n                    const yearlyReward = convertTokenInUSD(r, bondToken.symbol!)?.multipliedBy(365);\n\n                    const p = poolSize.dividedBy(10 ** (smartYield.decimals ?? 0));\n                    const poolBalance = convertTokenInUSD(p, smartYield.symbol!);\n\n                    if (yearlyReward && poolBalance && poolBalance.gt(BigNumber.ZERO)) {\n                      result.apr = yearlyReward.dividedBy(poolBalance);\n                      reload();\n                    }\n                  }\n                });\n              result.contracts.rewardPool = rewardPool;\n            }\n\n            if (pool.protocolId === AaveMarket.id) {\n              getAaveIncentivesAPY(pool.cTokenAddress, pool.underlyingDecimals, pool.underlyingSymbol).then(apy => {\n                result.apy = apy;\n                reload();\n              });\n            }\n\n            return result;\n          }),\n        }));\n      } catch {\n        setState(prevState => ({\n          ...prevState,\n          loading: false,\n        }));\n      }\n    })();\n  }, []);\n\n  React.useEffect(() => {\n    state.pools.forEach(pool => {\n      pool.contracts.smartYield?.setProvider(wallet.provider);\n      pool.contracts.smartYield?.setAccount(wallet.account);\n\n      pool.contracts.underlying?.setProvider(wallet.provider);\n      pool.contracts.underlying?.setAccount(wallet.account);\n      if (wallet.account) {\n        pool.contracts.underlying?.loadBalance();\n      }\n\n      pool.contracts.rewardPool?.setProvider(wallet.provider);\n      pool.contracts.rewardPool?.setAccount(wallet.account);\n    });\n  }, [state.pools, wallet.account]);\n\n  // React.useEffect(() => { /// ???\n  //   state.pools.forEach(pool => {\n  //     const { smartYield, rewardPool } = pool.contracts;\n  //\n  //     if (!smartYield || !rewardPool) {\n  //       return;\n  //     }\n  //\n  //     const { poolSize, dailyReward } = rewardPool;\n  //\n  //     if (poolSize && dailyReward) {\n  //       const bondPrice = BondToken.price ?? 1;\n  //       const jTokenPrice = smartYield.price ?? 1;\n  //\n  //       const yearlyReward = dailyReward\n  //         .dividedBy(10 ** BondToken.decimals)\n  //         .multipliedBy(bondPrice)\n  //         .multipliedBy(365);\n  //       const poolBalance = poolSize\n  //         .dividedBy(10 ** (smartYield.decimals ?? 0))\n  //         .multipliedBy(jTokenPrice)\n  //         .multipliedBy(1);\n  //\n  //       if (poolBalance.isEqualTo(BigNumber.ZERO)) {\n  //         return BigNumber.ZERO;\n  //       }\n  //\n  //       pool.rewardAPR = yearlyReward.dividedBy(poolBalance);\n  //       reload();\n  //     }\n  //   });\n  // }, [state.pools, BondToken.price, version]);\n\n  const getMarketTVL = React.useCallback(\n    (marketId?: string) => {\n      return state.pools\n        .filter(pool => pool.protocolId === (marketId ?? pool.protocolId))\n        .reduce((sum, entity) => {\n          return sum.plus(entity.state.seniorLiquidity).plus(entity.state.juniorLiquidity);\n        }, BigNumber.ZERO);\n    },\n    [state.pools],\n  );\n\n  const redeemBond = React.useCallback(\n    (smartYieldAddress: string, sBondId: number, gasPrice: number) => {\n      const smartYieldContract = getContract<SYSmartYieldContract>(smartYieldAddress, () => {\n        return new SYSmartYieldContract(smartYieldAddress);\n      });\n\n      smartYieldContract\n        .on('tx:hash', (txHash: string) => {\n          setStatusModal(prevState => ({\n            ...prevState,\n            visible: true,\n            type: 'redeem',\n            state: 'progress',\n            txHash,\n          }));\n        })\n        .on('tx:success', () => {\n          setStatusModal(prevState => ({\n            ...prevState,\n            state: 'success',\n          }));\n        })\n        .on('tx:fail', () => {\n          setStatusModal(prevState => ({\n            ...prevState,\n            state: 'failure',\n          }));\n        });\n\n      return smartYieldContract.redeemBondSend(sBondId, gasPrice);\n    },\n    [wallet.account, wallet.provider],\n  );\n\n  const redeemJuniorBond = React.useCallback(\n    (smartYieldAddress: string, jBondId: number, gasPrice: number) => {\n      const smartYieldContract = getContract<SYSmartYieldContract>(smartYieldAddress, () => {\n        return new SYSmartYieldContract(smartYieldAddress);\n      });\n\n      smartYieldContract\n        .on('tx:hash', (txHash: string) => {\n          setStatusModal(prevState => ({\n            ...prevState,\n            visible: true,\n            type: 'redeemJunior',\n            state: 'progress',\n            txHash,\n          }));\n        })\n        .on('tx:success', () => {\n          setStatusModal(prevState => ({\n            ...prevState,\n            state: 'success',\n          }));\n        })\n        .on('tx:fail', () => {\n          setStatusModal(prevState => ({\n            ...prevState,\n            state: 'failure',\n          }));\n        });\n\n      return smartYieldContract.redeemJuniorBondSend(jBondId, gasPrice);\n    },\n    [wallet.account, wallet.provider],\n  );\n\n  const transferFrom = React.useCallback(\n    (seniorBondAddress: string, address: string, sBondId: number, gasPrice: number) => {\n      const seniorBondContract = getContract<SYSeniorBondContract>(seniorBondAddress, () => {\n        return new SYSeniorBondContract(seniorBondAddress);\n      });\n\n      seniorBondContract\n        .on('tx:hash', (txHash: string) => {\n          setStatusModal(prevState => ({\n            ...prevState,\n            visible: true,\n            type: 'transfer',\n            state: 'progress',\n            txHash,\n          }));\n        })\n        .on('tx:success', () => {\n          setStatusModal(prevState => ({\n            ...prevState,\n            state: 'success',\n          }));\n        })\n        .on('tx:fail', () => {\n          setStatusModal(prevState => ({\n            ...prevState,\n            state: 'failure',\n          }));\n        });\n\n      return seniorBondContract.transferFromSend(wallet.account!, address, sBondId, gasPrice);\n    },\n    [wallet.account, wallet.provider],\n  );\n\n  function handleStatusModalCancel() {\n    setStatusModal(prevState => ({\n      ...prevState,\n      visible: false,\n      type: undefined,\n      state: undefined,\n      txHash: undefined,\n    }));\n  }\n\n  function handleTxSuccess() {\n    setStatusModal(prevState => ({\n      ...prevState,\n      visible: false,\n      type: undefined,\n      state: undefined,\n      txHash: undefined,\n    }));\n\n    history.push({\n      pathname: `/smart-yield/portfolio/senior`,\n    });\n  }\n\n  const value = React.useMemo<ContextType>(() => {\n    return {\n      ...state,\n      getMarketTVL,\n      redeemBond,\n      transferFrom,\n      redeemJuniorBond,\n    };\n  }, [state, version]);\n\n  return (\n    <>\n      <Context.Provider value={value}>{children}</Context.Provider>\n      {statusModal.visible && (\n        <TxStatusModal\n          type={statusModal.type}\n          state={statusModal.state}\n          txLink={statusModal.txHash && getEtherscanTxUrl(statusModal.txHash)}\n          onCancel={handleStatusModalCancel}\n          onSuccessClick={handleTxSuccess}\n        />\n      )}\n    </>\n  );\n};\n\nexport default PoolsProvider;\n","import React, { FC, createContext, useCallback, useContext, useEffect, useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport { useContractManager } from 'web3/components/contractManagerProvider';\n\nimport { useKnownTokens } from 'components/providers/knownTokensProvider';\nimport { useReload } from 'hooks/useReload';\nimport { useSyAPI } from 'modules/smart-yield/api';\nimport { SYRewardPoolEntity } from 'modules/smart-yield/models/syRewardPoolEntity';\nimport { useWallet } from 'wallets/walletProvider';\n\nimport { InvariantContext } from 'utils/context';\n\ntype RewardPoolsType = {\n  loading: boolean;\n  pools: SYRewardPoolEntity[];\n  getMarketTVL: (marketId?: string) => BigNumber;\n  getSYTotalStakedInUSD: () => BigNumber;\n};\n\nconst Context = createContext<RewardPoolsType>(InvariantContext('RewardPoolsProvider'));\n\nexport function useRewardPools(): RewardPoolsType {\n  return useContext(Context);\n}\n\nconst RewardPoolsProvider: FC = props => {\n  const { children } = props;\n\n  const knownTokensCtx = useKnownTokens();\n  const contractManagerCtx = useContractManager();\n  const walletCtx = useWallet();\n  const [reload] = useReload();\n  const syAPI = useSyAPI();\n\n  const [loading, setLoading] = useState(false);\n  const [pools, setPools] = useState<SYRewardPoolEntity[]>([]);\n\n  const getMarketTVL = useCallback(\n    (marketId?: string) => {\n      return pools\n        .filter(pool => pool.meta.protocolId === (marketId ?? pool.meta.protocolId))\n        .reduce((sum, entity) => {\n          const { poolSize } = entity.rewardPool;\n          const { decimals, symbol } = entity.smartYield;\n\n          if (!poolSize || !symbol) {\n            return sum;\n          }\n\n          const usdValue = knownTokensCtx.convertTokenInUSD(poolSize.unscaleBy(decimals), symbol);\n\n          if (!usdValue) {\n            return sum;\n          }\n\n          return sum.plus(usdValue);\n        }, BigNumber.ZERO);\n    },\n    [pools],\n  );\n\n  const getSYTotalStakedInUSD = useCallback(() => {\n    return pools.reduce((sum, entity) => {\n      const { poolSize } = entity.rewardPool;\n      const { decimals, symbol } = entity.smartYield;\n\n      if (!poolSize || !symbol) {\n        return sum;\n      }\n\n      const usdValue = knownTokensCtx.convertTokenInUSD(poolSize.unscaleBy(decimals), symbol);\n\n      if (!usdValue) {\n        return sum;\n      }\n\n      return sum.plus(usdValue);\n    }, BigNumber.ZERO);\n  }, [pools]);\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n\n      try {\n        const result = await syAPI.fetchSYRewardPools();\n        const rewardPools = result.map(item => {\n          const entity = new SYRewardPoolEntity(item, knownTokensCtx, contractManagerCtx);\n          entity.onDataUpdate(reload);\n          entity.loadCommonData();\n          return entity;\n        });\n\n        setPools(rewardPools);\n      } catch {}\n\n      setLoading(false);\n    })();\n  }, []);\n\n  useEffect(() => {\n    pools.forEach(pool => {\n      if (walletCtx.account) {\n        pool.loadUserData();\n      }\n    });\n  }, [pools, walletCtx.account]);\n\n  const value = {\n    loading,\n    pools,\n    getMarketTVL,\n    getSYTotalStakedInUSD,\n  };\n\n  return <Context.Provider value={value}>{children}</Context.Provider>;\n};\n\nexport default RewardPoolsProvider;\n","import BigNumber from 'bignumber.js';\nimport { AbiItem } from 'web3-utils';\nimport Web3Contract from 'web3/web3Contract';\n\nconst ABI: AbiItem[] = [\n  {\n    name: 'poolSize',\n    type: 'function',\n    inputs: [],\n    outputs: [{ name: 'amount', type: 'uint256' }],\n  },\n  {\n    name: 'rewardLeft',\n    type: 'function',\n    inputs: [],\n    outputs: [{ name: 'amount', type: 'uint256' }],\n  },\n  {\n    name: 'claim',\n    type: 'function',\n    inputs: [],\n    outputs: [{ name: 'amount', type: 'uint256' }],\n  },\n  {\n    name: 'balances',\n    type: 'function',\n    inputs: [{ name: 'address', type: 'address' }],\n    outputs: [{ name: 'amount', type: 'uint256' }],\n  },\n  {\n    name: 'rewardRatePerSecond',\n    type: 'function',\n    inputs: [],\n    outputs: [{ name: 'amount', type: 'uint256' }],\n  },\n  {\n    name: 'deposit',\n    type: 'function',\n    inputs: [{ name: 'amount', type: 'uint256' }],\n    outputs: [],\n  },\n  {\n    name: 'withdraw',\n    type: 'function',\n    inputs: [{ name: 'amount', type: 'uint256' }],\n    outputs: [],\n  },\n  {\n    name: 'withdrawAndClaim',\n    type: 'function',\n    inputs: [{ name: 'amount', type: 'uint256' }],\n    outputs: [{ name: '', type: 'uint256' }],\n  },\n];\n\nconst MULTI_ABI: AbiItem[] = [\n  {\n    name: 'poolSize',\n    type: 'function',\n    inputs: [],\n    outputs: [{ name: 'amount', type: 'uint256' }],\n  },\n  {\n    name: 'numRewardTokens',\n    type: 'function',\n    inputs: [],\n    outputs: [{ name: '', type: 'uint256' }],\n  },\n  {\n    name: 'rewardLeft',\n    type: 'function',\n    inputs: [{ name: 'address', type: 'address' }],\n    outputs: [{ name: 'amount', type: 'uint256' }],\n  },\n  {\n    name: 'rewardTokens',\n    type: 'function',\n    inputs: [{ name: '', type: 'uint256' }],\n    outputs: [{ name: '', type: 'address' }],\n  },\n  {\n    name: 'claim',\n    type: 'function',\n    inputs: [{ name: 'address', type: 'address' }],\n    outputs: [{ name: 'amount', type: 'uint256' }],\n  },\n  {\n    name: 'balances',\n    type: 'function',\n    inputs: [{ name: 'address', type: 'address' }],\n    outputs: [{ name: 'amount', type: 'uint256' }],\n  },\n  {\n    name: 'rewardRatesPerSecond',\n    type: 'function',\n    inputs: [{ name: 'address', type: 'address' }],\n    outputs: [{ name: 'amount', type: 'uint256' }],\n  },\n  {\n    name: 'deposit',\n    type: 'function',\n    inputs: [{ name: 'amount', type: 'uint256' }],\n    outputs: [],\n  },\n  {\n    name: 'withdraw',\n    type: 'function',\n    inputs: [{ name: 'amount', type: 'uint256' }],\n    outputs: [],\n  },\n  {\n    name: 'withdrawAndClaim',\n    type: 'function',\n    inputs: [{ name: 'amount', type: 'uint256' }],\n    outputs: [{ name: '', type: 'uint256' }],\n  },\n  {\n    name: 'claim_allTokens',\n    type: 'function',\n    inputs: [],\n    outputs: [{ name: 'amounts', type: 'uint256[]' }],\n  },\n];\n\nclass SYRewardPoolContract extends Web3Contract {\n  private readonly _isMulti: boolean;\n\n  constructor(address: string, isMulti: boolean = false) {\n    super(isMulti ? MULTI_ABI : ABI, address, '');\n\n    this._isMulti = isMulti;\n    this.on(Web3Contract.UPDATE_ACCOUNT, () => {\n      this.balances.clear();\n      this.claims.clear();\n    });\n  }\n\n  // common data\n  poolSize?: BigNumber;\n  rewardTokensCount?: number;\n  rewardLeft: Map<string, BigNumber> = new Map();\n  rewardRates: Map<string, BigNumber> = new Map();\n\n  // user data\n  balances: Map<string, BigNumber> = new Map();\n  claims: Map<string, BigNumber> = new Map();\n\n  async loadCommon(): Promise<void> {\n    this.poolSize = undefined;\n\n    const [poolSize, numRewardTokens] = await this.batch([{ method: 'poolSize' }, { method: 'numRewardTokens' }]);\n\n    this.poolSize = BigNumber.from(poolSize);\n    this.rewardTokensCount = Number(numRewardTokens) || 1;\n    this.emit(Web3Contract.UPDATE_DATA);\n  }\n\n  async loadRewardLeftFor(rewardTokenAddress: string): Promise<void> {\n    const rewardLeft = await this.call('rewardLeft', this._isMulti ? [rewardTokenAddress] : []);\n\n    this.rewardLeft.set(rewardTokenAddress, new BigNumber(rewardLeft));\n    this.emit(Web3Contract.UPDATE_DATA);\n  }\n\n  async loadRewardRateFor(rewardTokenAddress: string): Promise<void> {\n    let rewardRatePerSecond;\n\n    if (this._isMulti) {\n      rewardRatePerSecond = await this.call('rewardRatesPerSecond', [rewardTokenAddress]);\n    } else {\n      rewardRatePerSecond = await this.call('rewardRatePerSecond', []);\n    }\n\n    this.rewardRates.set(rewardTokenAddress, new BigNumber(rewardRatePerSecond));\n    this.emit(Web3Contract.UPDATE_DATA);\n  }\n\n  getRewardLeftFor(rewardTokenAddress: string): BigNumber | undefined {\n    return this.rewardLeft.get(rewardTokenAddress);\n  }\n\n  getRewardRateFor(rewardTokenAddress: string): BigNumber | undefined {\n    return this.rewardRates.get(rewardTokenAddress);\n  }\n\n  getDailyRewardFor(rewardTokenAddress: string): BigNumber | undefined {\n    return this.rewardRates.get(rewardTokenAddress)?.multipliedBy(24 * 60 * 60);\n  }\n\n  getMyDailyRewardFor(rewardTokenAddress: string): BigNumber | undefined {\n    const balance = this.getBalanceFor(this.account!);\n\n    if (!balance || !this.poolSize || !this.poolSize.gt(BigNumber.ZERO)) {\n      return undefined;\n    }\n\n    const myRatio = balance.dividedBy(this.poolSize);\n\n    return this.getDailyRewardFor(rewardTokenAddress)?.multipliedBy(myRatio);\n  }\n\n  async loadBalanceFor(rewardTokenAddress: string): Promise<void> {\n    const balance = await this.call('balances', [rewardTokenAddress], { from: this.account });\n\n    this.balances.set(rewardTokenAddress, new BigNumber(balance));\n    this.emit(Web3Contract.UPDATE_DATA);\n  }\n\n  getBalanceFor(rewardTokenAddress: string): BigNumber | undefined {\n    return this.balances.get(rewardTokenAddress);\n  }\n\n  async loadClaimFor(rewardTokenAddress: string): Promise<void> {\n    const claim = await this.call('claim', this._isMulti ? [rewardTokenAddress] : [], { from: this.account });\n\n    this.claims.set(rewardTokenAddress, new BigNumber(claim));\n    this.emit(Web3Contract.UPDATE_DATA);\n  }\n\n  getClaimFor(rewardTokenAddress: string): BigNumber | undefined {\n    return this.claims.get(rewardTokenAddress);\n  }\n\n  async sendClaimAll(gasPrice?: number): Promise<void> {\n    await this.send(this._isMulti ? 'claim_allTokens' : 'claim', [], {}, gasPrice);\n  }\n\n  async sendDeposit(amount: BigNumber, gasPrice?: number): Promise<void> {\n    await this.send('deposit', [amount], {}, gasPrice);\n  }\n\n  async sendWithdraw(amount: BigNumber, gasPrice?: number): Promise<void> {\n    await this.send('withdraw', [amount], {}, gasPrice);\n  }\n\n  async sendWithdrawAndClaim(amount: BigNumber, gasPrice?: number): Promise<void> {\n    await this.send('withdrawAndClaim', [amount], {}, gasPrice);\n  }\n}\n\nexport default SYRewardPoolContract;\n","import BigNumber from 'bignumber.js';\nimport { AbiItem } from 'web3-utils';\nimport Web3Contract, { createAbiItem } from 'web3/web3Contract';\n\nconst AaveIncentivesABI: AbiItem[] = [createAbiItem('getAssetData', ['address'], ['uint256', 'uint256', 'uint256'])];\n\nclass SYAaveIncentivesContract extends Web3Contract {\n  constructor(address: string) {\n    super(AaveIncentivesABI, address, '');\n  }\n\n  emissionPerSecond?: BigNumber;\n\n  async loadAssetData(aTokenAddress: string): Promise<void> {\n    const { 1: emissionPerSecond } = await this.call('getAssetData', [aTokenAddress]);\n    this.emissionPerSecond = BigNumber.from(emissionPerSecond);\n    this.emit(Web3Contract.UPDATE_DATA);\n  }\n}\n\nconst AaveTokenABI: AbiItem[] = [\n  createAbiItem('totalSupply', [], ['uint256']),\n  createAbiItem('getIncentivesController', [], ['address']),\n];\n\nclass SYAaveTokenContract extends Web3Contract {\n  constructor(address: string) {\n    super(AaveTokenABI, address, '');\n  }\n\n  totalSupply?: BigNumber;\n  incentivesController?: SYAaveIncentivesContract;\n\n  calculateIncentivesAPY(\n    aTokenPriceInEth: BigNumber,\n    uTokenPriceInEth: BigNumber,\n    uTokenDecimals: number,\n  ): BigNumber | undefined {\n    if (!this.incentivesController) {\n      return undefined;\n    }\n\n    const { emissionPerSecond } = this.incentivesController;\n\n    const emissionPerYear = BigNumber.from(emissionPerSecond)\n      ?.unscaleBy(18) // TODO: ETH decimals\n      ?.multipliedBy(aTokenPriceInEth)\n      .multipliedBy(365 * 24 * 60 * 60);\n\n    if (!emissionPerYear) {\n      return undefined;\n    }\n\n    const totalSupply = this.totalSupply?.unscaleBy(uTokenDecimals)?.multipliedBy(uTokenPriceInEth);\n\n    if (!totalSupply) {\n      return undefined;\n    }\n\n    return emissionPerYear.dividedBy(totalSupply);\n  }\n\n  async loadCommon(): Promise<void> {\n    const [totalSupply, incentivesControllerAddress] = await this.batch([\n      { method: 'totalSupply' },\n      { method: 'getIncentivesController' },\n    ]);\n\n    this.totalSupply = BigNumber.from(totalSupply);\n\n    if (incentivesControllerAddress) {\n      this.incentivesController = new SYAaveIncentivesContract(incentivesControllerAddress);\n      this.incentivesController.setCallProvider(this.callProvider);\n      await this.incentivesController.loadAssetData(this.address);\n    }\n\n    this.emit(Web3Contract.UPDATE_DATA);\n  }\n}\n\nexport default SYAaveTokenContract;\n","import { useCallback, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nfunction useRouteQuery() {\n  const location = useLocation();\n  const urlQuery = useMemo(() => new URLSearchParams(location.search), [location.search]);\n\n  const get = useCallback(\n    (paramName: string): string | undefined => {\n      const value = urlQuery.get(paramName) ?? undefined;\n\n      return value ? decodeURIComponent(value) : undefined;\n    },\n    [location.search],\n  );\n\n  return {\n    urlQuery,\n    get,\n  };\n}\n\nexport default useRouteQuery;\n","import React, { FC, createContext, useContext, useEffect, useMemo, useState } from 'react';\nimport { useContractManager } from 'web3/components/contractManagerProvider';\n\nimport { TokenMeta, useKnownTokens } from 'components/providers/knownTokensProvider';\nimport { useReload } from 'hooks/useReload';\nimport useRouteQuery from 'hooks/useRouteQuery';\nimport { useSyAPI } from 'modules/smart-yield/api';\nimport { SYRewardPoolEntity } from 'modules/smart-yield/models/syRewardPoolEntity';\nimport { MarketMeta, getKnownMarketById } from 'modules/smart-yield/providers/markets';\nimport { useWallet } from 'wallets/walletProvider';\n\nimport { InvariantContext } from 'utils/context';\n\ntype RewardPoolType = {\n  market?: MarketMeta;\n  uToken?: TokenMeta;\n  loading: boolean;\n  pool?: SYRewardPoolEntity;\n};\n\nconst Context = createContext<RewardPoolType>(InvariantContext('RewardPoolProvider'));\n\nexport function useRewardPool(): RewardPoolType {\n  return useContext(Context);\n}\n\nconst RewardPoolProvider: FC = props => {\n  const { children } = props;\n\n  const walletCtx = useWallet();\n  const [reload] = useReload();\n  const rqCtx = useRouteQuery();\n  const knownTokensCtx = useKnownTokens();\n  const contractManagerCtx = useContractManager();\n  const { getTokenBySymbol } = knownTokensCtx;\n  const syAPI = useSyAPI();\n\n  const market = useMemo(() => {\n    const marketId = rqCtx.get('m');\n    return marketId ? getKnownMarketById(marketId) : undefined;\n  }, [rqCtx.get]);\n\n  const uToken = useMemo(() => {\n    const tokenId = rqCtx.get('t');\n    return tokenId ? getTokenBySymbol(tokenId) : undefined;\n  }, [rqCtx.get]);\n\n  const [loading, setLoading] = useState(false);\n  const [pool, setPool] = useState<SYRewardPoolEntity | undefined>();\n\n  useEffect(() => {\n    if (!market || !uToken) {\n      return;\n    }\n\n    (async () => {\n      setLoading(true);\n\n      try {\n        const pools = await syAPI.fetchSYRewardPools(market.id, uToken.symbol);\n\n        if (pools.length === 0) {\n          return;\n        }\n\n        const entity = new SYRewardPoolEntity(pools[0], knownTokensCtx, contractManagerCtx);\n        entity.onDataUpdate(reload);\n        entity.loadCommonData();\n        setPool(entity);\n      } catch {}\n\n      setLoading(false);\n    })();\n  }, [market, uToken]);\n\n  useEffect(() => {\n    if (walletCtx.account) {\n      pool?.loadUserData();\n\n      if (pool?.rewardPool.address && pool?.smartYield.account) {\n        pool?.smartYield.loadAllowance(pool?.rewardPool.address);\n      }\n    }\n  }, [pool, walletCtx.account, pool?.smartYield.account]);\n\n  const value = {\n    market,\n    uToken,\n    loading,\n    pool,\n  };\n\n  return <Context.Provider value={value}>{children}</Context.Provider>;\n};\n\nexport default RewardPoolProvider;\n","import BigNumber from 'bignumber.js';\nimport Web3Contract from 'web3/web3Contract';\n\nconst ABI: any[] = [\n  {\n    name: 'BOND_LIFE_MAX',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [{ name: '', type: 'uint256' }],\n  },\n  {\n    name: 'FEE_BUY_JUNIOR_TOKEN',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [{ name: '', type: 'uint256' }],\n  },\n  {\n    name: 'FEE_REDEEM_SENIOR_BOND',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [{ name: '', type: 'uint256' }],\n  },\n  {\n    name: 'harvest',\n    type: 'function',\n    stateMutability: 'nonpayable',\n    inputs: [{ name: '', type: 'uint256' }],\n    outputs: [\n      { name: 'rewardAmountGot', type: 'uint256' },\n      { name: 'underlyingHarvestReward', type: 'uint256' },\n    ],\n  },\n\n  // {\n  //   inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n  //   name: 'harvest',\n  //   outputs: [\n  //     { internalType: 'uint256', name: 'rewardAmountGot', type: 'uint256' },\n  //     { internalType: 'uint256', name: 'underlyingHarvestReward', type: 'uint256' },\n  //   ],\n  //   stateMutability: 'nonpayable',\n  //   type: 'function',\n  // },\n];\n\nclass SYControllerContract extends Web3Contract {\n  constructor(address: string) {\n    super(ABI, address, '');\n  }\n\n  getBondLifeMax(): Promise<number> {\n    return this.call('BOND_LIFE_MAX').then(value => Number(value));\n  }\n\n  getJuniorBuyFee(): Promise<BigNumber> {\n    return this.call('FEE_BUY_JUNIOR_TOKEN').then(value => new BigNumber(value));\n  }\n\n  getSeniorRedeemFee(): Promise<BigNumber> {\n    return this.call('FEE_REDEEM_SENIOR_BOND').then(value => new BigNumber(value));\n  }\n\n  getHarvestAmount(): Promise<BigNumber> {\n    return this.call('harvest').then(value => new BigNumber(value));\n  }\n\n  harvest(gasPrice: number): Promise<void> {\n    return this.send('harvest', [0], {}, gasPrice);\n  }\n}\n\nexport default SYControllerContract;\n","import EventEmitter from 'wolfy87-eventemitter';\n\nexport default class ManagedEntity {\n  private readonly _event: EventEmitter;\n\n  constructor() {\n    this._event = new EventEmitter();\n  }\n\n  get event(): EventEmitter {\n    return this._event;\n  }\n\n  onDataUpdate = (listener: Function): Function => {\n    this._event.on('data:update', listener);\n\n    return () => {\n      return this._event.off('data:update', listener);\n    };\n  };\n\n  emitDataUpdate = () => {\n    this._event?.emit('data:update');\n  };\n}\n","import BigNumber from 'bignumber.js';\nimport { ContractManagerType } from 'web3/components/contractManagerProvider';\nimport Erc20Contract from 'web3/erc20Contract';\nimport Web3Contract from 'web3/web3Contract';\n\nimport { KnownTokens, KnownTokensContextType, TokenMeta } from 'components/providers/knownTokensProvider';\nimport { MainnetHttpsWeb3Provider } from 'components/providers/web3Provider';\nimport ManagedEntity from 'models/managedEntity';\nimport { APISYRewardPool } from 'modules/smart-yield/api';\nimport SYAaveTokenContract from 'modules/smart-yield/contracts/syAaveTokenContract';\nimport SYRewardPoolContract from 'modules/smart-yield/contracts/syRewardPoolContract';\nimport SYSmartYieldContract from 'modules/smart-yield/contracts/sySmartYieldContract';\nimport { AaveMarket } from 'modules/smart-yield/providers/markets';\n\nexport class SYRewardPoolEntity extends ManagedEntity {\n  meta: APISYRewardPool;\n  smartYield: SYSmartYieldContract;\n  rewardPool: SYRewardPoolContract;\n  rewardTokens: Map<string, TokenMeta>;\n  knownTokensCtx: KnownTokensContextType;\n  contractManagerCtx: ContractManagerType;\n\n  apy?: BigNumber;\n\n  constructor(meta: APISYRewardPool, knownTokensCtx: KnownTokensContextType, contractManagerCtx: ContractManagerType) {\n    // TODO: Refactor\n    super();\n    this.meta = meta;\n    this.knownTokensCtx = knownTokensCtx;\n    this.contractManagerCtx = contractManagerCtx;\n    this.smartYield = this.contractManagerCtx.getContract<SYSmartYieldContract>(meta.poolTokenAddress, () => {\n      return new SYSmartYieldContract(meta.poolTokenAddress);\n    });\n    this.smartYield.on(Web3Contract.UPDATE_DATA, this.emitDataUpdate);\n    this.rewardPool = this.contractManagerCtx.getContract<SYRewardPoolContract>(meta.poolAddress, () => {\n      return new SYRewardPoolContract(meta.poolAddress, meta.poolType === 'MULTI');\n    });\n    this.rewardPool.on(Web3Contract.UPDATE_DATA, this.emitDataUpdate);\n    this.rewardTokens = new Map();\n\n    meta.rewardTokens.forEach(rewardTkn => {\n      const rewardToken =\n        knownTokensCtx.getTokenByAddress(rewardTkn.address) ??\n        ({\n          address: rewardTkn.address,\n          symbol: rewardTkn.symbol,\n          name: rewardTkn.symbol,\n          decimals: rewardTkn.decimals,\n          contract: this.contractManagerCtx.getContract<Erc20Contract>(rewardTkn.address, () => {\n            return new Erc20Contract([], rewardTkn.address);\n          }),\n        } as TokenMeta);\n      rewardToken.contract?.on(Web3Contract.UPDATE_DATA, this.emitDataUpdate);\n      this.rewardTokens.set(rewardTkn.address, rewardToken);\n    });\n\n    if (meta.protocolId === AaveMarket.id) {\n      /// TODO: !!!!\n      let aTokenAddress: string | undefined;\n      let aTokenDecimals: number | undefined;\n\n      if (meta.underlyingSymbol === KnownTokens.DAI) {\n        aTokenAddress = '0x028171bca77440897b824ca71d1c56cac55b68a3';\n        aTokenDecimals = 18;\n      } else if (meta.underlyingSymbol === KnownTokens.GUSD) {\n        aTokenAddress = '0xd37ee7e4f452c6638c96536e68090de8cbcdb583';\n        aTokenDecimals = 2;\n      } else if (meta.underlyingSymbol === KnownTokens.USDC) {\n        aTokenAddress = '0xbcca60bb61934080951369a648fb03df4f96263c';\n        aTokenDecimals = 6;\n      } else if (meta.underlyingSymbol === KnownTokens.USDT) {\n        aTokenAddress = '0x3ed3b47dd13ec9a98b44e6204a523e766b225811';\n        aTokenDecimals = 6;\n      }\n\n      if (aTokenAddress && aTokenDecimals) {\n        this.getAaveIncentivesAPY(aTokenAddress, aTokenDecimals, meta.underlyingSymbol).then(apy => {\n          this.apy = apy;\n        });\n      }\n    }\n  }\n\n  get apr(): BigNumber | undefined {\n    const { rewardPool, smartYield } = this;\n    const { poolSize } = rewardPool;\n\n    if (!poolSize) {\n      return undefined;\n    }\n\n    const { bondToken, convertTokenInUSD } = this.knownTokensCtx;\n    const r = rewardPool.getDailyRewardFor(bondToken.address)?.unscaleBy(bondToken.decimals);\n    const yearlyReward = convertTokenInUSD(r, bondToken.symbol!)?.multipliedBy(365);\n\n    const p = poolSize.dividedBy(10 ** (smartYield.decimals ?? 0));\n    const poolBalance = convertTokenInUSD(p, smartYield.symbol!);\n\n    if (!yearlyReward || !poolBalance || poolBalance.eq(BigNumber.ZERO)) {\n      return undefined;\n    }\n\n    return yearlyReward.dividedBy(poolBalance);\n  }\n\n  async getAaveIncentivesAPY(\n    cTokenAddress: string,\n    uDecimals: number,\n    uSymbol: string,\n  ): Promise<BigNumber | undefined> {\n    const aTokenAddress = cTokenAddress;\n    const aTokenDecimals = uDecimals;\n\n    const aToken = new SYAaveTokenContract(aTokenAddress);\n    aToken.setCallProvider(MainnetHttpsWeb3Provider); // TODO: Re-think about mainnet provider\n    await aToken.loadCommon();\n\n    const aTokenPriceInEth = this.knownTokensCtx.convertTokenIn(\n      1,\n      this.knownTokensCtx.stkAaveToken.symbol,\n      this.knownTokensCtx.ethToken.symbol,\n    );\n    const uTokenPriceInEth = this.knownTokensCtx.convertTokenIn(1, uSymbol, this.knownTokensCtx.ethToken.symbol);\n\n    return aToken.calculateIncentivesAPY(aTokenPriceInEth!, uTokenPriceInEth!, aTokenDecimals);\n  }\n\n  loadCommonData() {\n    this.smartYield.loadCommon().catch(Error);\n    this.rewardPool.loadCommon().catch(Error);\n    this.rewardTokens.forEach(rewardToken => {\n      this.rewardPool.loadRewardLeftFor(rewardToken.address).catch(Error);\n      this.rewardPool.loadRewardRateFor(rewardToken.address).catch(Error);\n      (rewardToken.contract as Erc20Contract)?.loadBalance(this.meta.poolAddress).catch(Error);\n    });\n  }\n\n  loadUserBalances() {\n    this.smartYield.loadBalance().catch(Error);\n    this.rewardTokens.forEach(rewardToken => {\n      (rewardToken.contract as Erc20Contract)?.loadBalance().catch(Error);\n      this.rewardPool.loadBalanceFor(rewardToken.address).catch(Error);\n    });\n    if (this.rewardPool.account) {\n      this.rewardPool.loadBalanceFor(this.rewardPool.account).catch(Error);\n    }\n  }\n\n  loadClaims() {\n    this.rewardTokens.forEach(rewardContract => {\n      this.rewardPool.loadClaimFor(rewardContract.address).catch(Error);\n    });\n  }\n\n  loadUserData() {\n    this.loadUserBalances();\n    this.loadClaims();\n  }\n}\n","import { getGasValue } from 'web3/utils';\nimport Web3Contract from 'web3/web3Contract';\n\nconst ABI: any[] = [\n  {\n    name: 'balanceOf',\n    type: 'function',\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    name: 'tokenOfOwnerByIndex',\n    type: 'function',\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        name: 'index',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    name: 'transferFrom',\n    type: 'function',\n    inputs: [\n      {\n        name: 'from',\n        type: 'address',\n      },\n      {\n        name: 'to',\n        type: 'address',\n      },\n      {\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    outputs: [],\n  },\n];\n\nclass SYSeniorBondContract extends Web3Contract {\n  constructor(address: string) {\n    super(ABI, address, '');\n  }\n\n  async getSeniorBondIds(): Promise<number[]> {\n    if (!this.account) {\n      return Promise.reject();\n    }\n\n    return this.call('balanceOf', [this.account])\n      .then(value => Number(value))\n      .then(balance => {\n        if (balance > 0) {\n          const methods = Array.from(Array(balance)).map((_, index) => ({\n            method: 'tokenOfOwnerByIndex',\n            methodArgs: [this.account, index],\n            transform: (value: any) => Number(value),\n          }));\n\n          return this.batch(methods);\n        }\n\n        return [];\n      });\n  }\n\n  transferFromSend(from: string, to: string, tokenId: number, gasPrice: number): Promise<void> {\n    if (!this.account) {\n      return Promise.reject();\n    }\n\n    return this.send('transferFrom', [from, to, tokenId], {\n      from: this.account,\n      gasPrice: getGasValue(gasPrice),\n    });\n  }\n}\n\nexport default SYSeniorBondContract;\n","import React from 'react';\n\nimport Button from 'components/antd/button';\nimport Modal, { ModalProps } from 'components/antd/modal';\nimport { ExternalLink } from 'components/button';\nimport Icon from 'components/custom/icon';\nimport { Text } from 'components/custom/typography';\nimport { useNetwork } from 'components/providers/networkProvider';\n\ntype Props = ModalProps & {\n  type?: 'deposit' | 'withdraw' | 'redeem' | 'transfer' | 'redeemJunior';\n  state?: 'progress' | 'success' | 'failure';\n  txLink?: string;\n  onSuccessClick?: () => void;\n};\n\nconst TxStatusModal: React.FC<Props> = props => {\n  const { type, state, txLink, onSuccessClick, ...modalProps } = props;\n  const { activeNetwork } = useNetwork();\n\n  return (\n    <Modal width={560} title=\"Transaction status\" {...modalProps}>\n      <div className=\"grid flow-row pv-8 ph-8\">\n        {state === 'progress' && (\n          <>\n            <Icon name=\"tx-progress\" width={180} height={160} className=\"mb-32 mh-auto\" />\n            <Text type=\"h3\" weight=\"semibold\" color=\"primary\" className=\"mb-64 text-center\">\n              Your transaction is being processed ...\n            </Text>\n            <ExternalLink href={txLink}>\n              <Button htmlType=\"submit\" type=\"primary\" className=\"full-width\">\n                View on {activeNetwork.explorer.name}\n              </Button>\n            </ExternalLink>\n          </>\n        )}\n        {state === 'success' && (\n          <>\n            <Icon name=\"tx-success\" width={180} height={160} className=\"mb-32 mh-auto\" />\n            <Text type=\"h3\" weight=\"semibold\" color=\"primary\" className=\"mb-16 text-center\">\n              Congratulations!\n            </Text>\n            <Text type=\"small\" weight=\"semibold\" color=\"secondary\" className=\"mb-64 text-center\">\n              Your transaction was successful.\n              <br />\n              {type === 'deposit' && 'You can see your new position in your portfolio'}\n              {type === 'withdraw' && 'You can see your past positions in your portfolio'}\n              {type === 'redeem' && 'You can see your past positions in your portfolio'}\n              {type === 'redeemJunior' && 'You can see your past positions in your portfolio'}\n            </Text>\n            {type !== 'transfer' && (\n              <Button htmlType=\"submit\" type=\"primary\" onClick={onSuccessClick}>\n                See your portfolio\n              </Button>\n            )}\n          </>\n        )}\n        {state === 'failure' && (\n          <>\n            <Icon name=\"tx-failure\" width={180} height={160} className=\"mb-32 mh-auto\" />\n            <Text type=\"h3\" weight=\"semibold\" color=\"primary\" className=\"mb-16 text-center\">\n              Failed!\n            </Text>\n            <Text type=\"small\" weight=\"semibold\" color=\"secondary\" className=\"mb-64 text-center\">\n              Your transaction failed to execute.\n              <br />\n              Please try again.\n            </Text>\n            <Button htmlType=\"submit\" type=\"primary\" onClick={props?.onCancel}>\n              Dismiss\n            </Button>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default TxStatusModal;\n","import React, { Suspense, lazy } from 'react';\nimport { NavLinkProps, Redirect, Route, Switch, useRouteMatch } from 'react-router-dom';\nimport AntdSpin from 'antd/lib/spin';\n\nimport { HorizontalMenu } from 'components/custom/tabs';\nimport { Icon } from 'components/icon';\nimport { useConfig } from 'components/providers/configProvider';\nimport SyAPIProvider from 'modules/smart-yield/api';\nimport RewardPoolProvider from 'modules/smart-yield/providers/reward-pool-provider';\nimport { useWallet } from 'wallets/walletProvider';\n\nimport PoolProvider from './providers/pool-provider';\nimport PoolsProvider from './providers/pools-provider';\nimport RewardPoolsProvider from './providers/reward-pools-provider';\n\nconst MarketsView = lazy(() => import('./views/markets-view'));\nconst StatsView = lazy(() => import('./views/stats-view'));\nconst PortfolioView = lazy(() => import('./views/portfolio-view'));\nconst DepositView = lazy(() => import('./views/deposit-view'));\nconst WithdrawView = lazy(() => import('./views/withdraw-view'));\nconst PoolsView = lazy(() => import('./views/pools-view'));\nconst PoolView = lazy(() => import('./views/pool-view'));\n\ntype SmartYieldViewParams = {\n  vt: string;\n};\n\nconst SmartYieldView: React.FC = () => {\n  const {\n    params: { vt = 'markets' },\n  } = useRouteMatch<SmartYieldViewParams>();\n  const config = useConfig();\n  const wallet = useWallet();\n  const [activeTab, setActiveTab] = React.useState<string>(vt);\n\n  React.useEffect(() => {\n    if (['stats', 'deposit'].includes(vt)) {\n      setActiveTab('markets');\n      return;\n    }\n\n    if (vt === 'withdraw') {\n      setActiveTab('portfolio');\n      return;\n    }\n\n    if (vt === 'pool') {\n      setActiveTab('pools');\n      return;\n    }\n\n    if (vt !== activeTab) {\n      setActiveTab(vt);\n    }\n  }, [vt]);\n\n  const tabs = [\n    {\n      children: (\n        <>\n          <Icon name=\"overview\" className=\"mr-8\" /> Markets\n        </>\n      ),\n      to: '/smart-yield/markets',\n      isActive: (match, location) => {\n        return (\n          match ||\n          location.pathname.startsWith('/smart-yield/stats') ||\n          location.pathname.startsWith('/smart-yield/deposit')\n        );\n      },\n    } as NavLinkProps,\n    {\n      children: (\n        <>\n          <Icon name=\"wallet\" className=\"mr-8\" /> Portfolio\n        </>\n      ),\n      to: '/smart-yield/portfolio',\n      isActive: (match, location) => {\n        return match || location.pathname.startsWith('/smart-yield/withdraw');\n      },\n      disabled: !wallet.account,\n    } as NavLinkProps,\n    ...(config.features.smartYieldReward\n      ? [\n          {\n            children: (\n              <>\n                <Icon name=\"pools\" className=\"mr-8\" /> Pools\n              </>\n            ),\n            to: '/smart-yield/pools',\n          },\n        ]\n      : []),\n  ];\n\n  return (\n    <SyAPIProvider>\n      <HorizontalMenu tabs={tabs} />\n      <div className=\"content-container-fix content-container\">\n        <Suspense fallback={<AntdSpin />}>\n          <Switch>\n            <Route\n              path=\"/smart-yield/:path(markets|portfolio)\"\n              render={({ location }) => (\n                <PoolsProvider>\n                  <RewardPoolsProvider>\n                    <Route path=\"/smart-yield/markets\" exact component={MarketsView} />\n                  </RewardPoolsProvider>\n                  {wallet.initialized && (\n                    <>\n                      {wallet.isActive ? (\n                        <Route path=\"/smart-yield/portfolio\" component={PortfolioView} />\n                      ) : (\n                        <Redirect to={{ pathname: '/smart-yield/markets', search: location.search }} />\n                      )}\n                    </>\n                  )}\n                </PoolsProvider>\n              )}\n            />\n            <Route\n              path=\"/smart-yield/:path(deposit|withdraw)\"\n              render={() =>\n                wallet.initialized && (\n                  <>\n                    {wallet.isActive ? (\n                      <PoolProvider>\n                        <Route path=\"/smart-yield/deposit\" component={DepositView} />\n                        <Route path=\"/smart-yield/withdraw\" component={WithdrawView} />\n                      </PoolProvider>\n                    ) : (\n                      <Redirect to=\"/smart-yield/markets\" />\n                    )}\n                  </>\n                )\n              }\n            />\n            <Route path=\"/smart-yield/stats\" exact>\n              <PoolProvider>\n                <RewardPoolsProvider>\n                  <StatsView />\n                </RewardPoolsProvider>\n              </PoolProvider>\n            </Route>\n            {config.features.smartYieldReward && (\n              <Route path=\"/smart-yield/pools\" exact>\n                <RewardPoolsProvider>\n                  <PoolsView />\n                </RewardPoolsProvider>\n              </Route>\n            )}\n            {config.features.smartYieldReward && (\n              <Route path=\"/smart-yield/pool\" component={PoolView}>\n                <RewardPoolProvider>\n                  <PoolView />\n                </RewardPoolProvider>\n              </Route>\n            )}\n            <Redirect to=\"/smart-yield/markets\" />\n          </Switch>\n        </Suspense>\n      </div>\n    </SyAPIProvider>\n  );\n};\n\nexport default SmartYieldView;\n"],"sourceRoot":""}