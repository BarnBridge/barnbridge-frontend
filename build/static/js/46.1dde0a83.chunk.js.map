{"version":3,"sources":["components/custom/spinner/index.tsx","hooks/useContract.tsx","components/custom/icons-set/index.tsx","components/custom/pagination/index.tsx","components/custom/table/index.tsx","components/custom/icons-set/s.module.scss","components/custom/spinner/s.module.scss","components/custom/label/index.tsx","components/custom/pagination/s.module.scss","components/custom/table/s.module.scss","components/custom/label/s.module.scss","modules/smart-yield/contracts/syJuniorBondContract.ts","modules/smart-yield/views/markets-view/pools-table/index.tsx","modules/smart-yield/views/markets-view/index.tsx"],"names":["Spinner","className","children","spinning","restProps","s","container","name","classNames","spinner","useDeepCompareMemoize","value","ref","useRef","isEqual","current","useContract","address","loadBalance","loadCommon","loadAllowance","useWallet","provider","account","useReload","reload","useContractManager","getContract","contract","useMemo","Erc20Contract","on","Web3Contract","UPDATE_DATA","useEffect","setAccount","then","catch","Error","memoisedAllowance","Array","isArray","forEach","i","useContractFactory","options","listeners","walletProvider","activeProvider","useWeb3","version","activeProviderRef","walletProviderRef","accountRef","contractsRef","Map","createContract","useCallback","factory","setCallProvider","setProvider","set","instance","afterInit","updateContracts","useDebounce","meta","onDestroy","getOrCreateContract","has","get","Listeners","from","map","key","useWeb3Contract","IconsSet","props","cn","component","icons","Pagination","total","pageSize","onChange","pages","Math","ceil","paginationList","last","l","delta","left","right","range","rangeWithDots","push","pagination","page","prev","type","onClick","disabled","rotate","size","idx","active","separator","next","Table","columns","data","loading","rowKey","variation","link","history","useHistory","tableContainer","table","clickable","dataIdx","heading","align","undefined","item","itemIdx","Render","render","color","arrowIcon","style","width","height","position","marginTop","marginLeft","TableFooter","text","generatedText","to","generateText","tableFooter","weight","module","exports","AprLabel","iconSize","aprLabel","aprLabelLarge","icon","aprLabelText","aprLabelTextGradient","length","ABI","inputs","outputs","SYJuniorBondContract","a","this","Promise","reject","call","Number","balance","methods","_","index","method","methodArgs","transform","batch","PoolsTable","activeMarket","wallet","poolsCtx","usePools","pools","entities","filter","pool","protocolId","id","showWalletBalance","entity","marketInsuranceLink","marketTokenSymbol","getMarketInsuranceLink","contracts","smartYield","symbol","token","bubble1Name","market","wrap","underlyingSymbol","title","href","rel","target","getToken","useTokens","sum","BigNumber","state","seniorLiquidity","multipliedBy","price","toString","formatToken","tokenName","formatUSD","compact","formatPercent","seniorApy","juniorLiquidity","useKnownTokens","bondToken","stkAaveToken","hasZeroBondRewardLeft","useRewardPools","find","rewardPool","rewardPoolAddress","rewardTokens","values","some","rewardToken","getRewardLeftFor","isZero","juniorApy","rewardTokensCount","apy","plus","apr","juniorAPYPast30DAvg","originatorNetApy","getAmountInUSD","juniorBalance","unscaleBy","underlyingDecimals","juniorTokenSymbol","jTokenPrice","seniorBalance","getTableColumns","isActive","smartYieldContract","smartYieldAddress","SYSmartYieldContract","seniorBondContract","seniorBondAddress","SYSeniorBondContract","juniorBondContract","juniorBondAddress","lockedSeniorBalancePromise","getSeniorBondIds","sBondIds","resolve","ZERO","getSeniorBonds","sBonds","reduce","sBond","principal","gain","lockedJuniorBalancePromise","getJuniorBondIds","jBondIds","getJuniorBonds","jBonds","tokens","activeJuniorBalancePromise","stakedJuniorBalancePromise","rewardContract","SYRewardPoolContract","loadBalanceFor","getBalanceFor","all","lockedSeniorBalance","activeJuniorBalance","lockedJuniorBalance","stakedJuniorBalance","MarketsView","activeNetwork","useNetwork","useSessionStorage","marketsSelection","setMarketsSelection","useState","selectedMarkets","setSelectedMarkets","marketsToDisplay","KnownMarkets","activeMarkets","split","marketId","getKnownMarketById","Boolean","isSelected","includes","newSelection","ps","m","join","PolygonNetwork","bubble2Name","warning","ev","stopPropagation","flexShrink","getMarketTVL","selectedMarket"],"mappings":"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","file":"static/js/46.1dde0a83.chunk.js","sourcesContent":["import classNames from 'classnames';\n\nimport { Icon } from 'components/icon';\nimport { FCx } from 'components/types.tx';\n\nimport s from './s.module.scss';\n\ntype PropsType = {\n  spinning?: boolean;\n};\n\nexport const Spinner: FCx<PropsType> = ({ className, children, spinning, ...restProps }) => {\n  if (children) {\n    if (spinning) {\n      return (\n        <div className={s.container}>\n          <div className={s.children}>{children}</div>\n          <Icon name=\"loader\" className={classNames(s.spinner, className)} {...restProps} />\n        </div>\n      );\n    }\n\n    return <>{children}</>;\n  }\n\n  return <Icon name=\"loader\" className={classNames(s.spinner, className)} {...restProps} />;\n};\n","import React, { ReactElement, useCallback, useEffect, useMemo, useRef } from 'react';\nimport useDebounce from '@rooks/use-debounce';\nimport isEqual from 'lodash/isEqual';\nimport ContractListener from 'web3/components/contract-listener';\nimport Erc20Contract from 'web3/erc20Contract';\nimport Web3Contract from 'web3/web3Contract';\n\nimport { useWeb3 } from 'components/providers/web3Provider';\nimport { useWallet } from 'wallets/walletProvider';\n\nimport { useContractManager } from '../web3/components/contractManagerProvider';\nimport { useReload } from './useReload';\n\nfunction useDeepCompareMemoize(value: any): typeof value {\n  const ref = useRef();\n\n  if (!isEqual(value, ref.current)) {\n    ref.current = value;\n  }\n\n  return ref.current;\n}\n\nexport const useContract = (\n  address: string | undefined,\n  {\n    loadBalance,\n    loadCommon,\n    loadAllowance,\n  }: { loadBalance?: boolean; loadCommon?: boolean; loadAllowance?: string[] } = {},\n): Erc20Contract | null => {\n  const { provider, account } = useWallet();\n  const [reload] = useReload();\n  const { getContract } = useContractManager();\n\n  const contract = useMemo(() => {\n    if (!address) {\n      return null;\n    }\n\n    const contract: Erc20Contract = getContract<Erc20Contract>(address, () => {\n      return new Erc20Contract([], address);\n    }); // (getTokenByAddress(address)?.contract as Erc20Contract) ?? new Erc20Contract([], address);\n    contract.on(Web3Contract.UPDATE_DATA, reload);\n\n    return contract;\n  }, [address, provider, reload]);\n\n  useEffect(() => {\n    if (contract && loadBalance) {\n      contract.setAccount(account);\n      contract.loadBalance();\n    }\n  }, [contract, loadBalance, account]);\n\n  useEffect(() => {\n    if (contract && loadCommon) {\n      contract\n        .loadCommon()\n        .then(() => reload())\n        .catch(Error);\n    }\n  }, [contract, loadCommon, reload]);\n\n  const memoisedAllowance = useDeepCompareMemoize(loadAllowance);\n\n  useEffect(() => {\n    if (contract && memoisedAllowance) {\n      if (Array.isArray(memoisedAllowance)) {\n        memoisedAllowance.forEach(i => contract.loadAllowance(i));\n      } else {\n        contract.loadAllowance(memoisedAllowance);\n      }\n    }\n  }, [contract, memoisedAllowance]);\n\n  return contract;\n};\n\nexport type UseContractOptions<T extends Web3Contract> = {\n  afterInit?: (contract: T) => void;\n  onDestroy?: (contract: T) => void;\n};\n\nexport type UseContractFactoryType = {\n  getOrCreateContract<T extends Web3Contract>(address: string, factory?: () => T, options?: UseContractOptions<T>): T;\n  getContract<T extends Web3Contract>(address: string): T | undefined;\n  Listeners: ReactElement | null;\n};\n\ntype CachedContractType = {\n  address: string;\n  factory: () => Web3Contract;\n  options?: UseContractOptions<Web3Contract>;\n  instance: Web3Contract;\n};\n\nexport type UseContractFactoryOptions = {\n  listeners?: boolean;\n};\n\nexport function useContractFactory(options?: UseContractFactoryOptions): UseContractFactoryType {\n  const { listeners = true } = options ?? {};\n  const { account, provider: walletProvider } = useWallet();\n  const { activeProvider } = useWeb3();\n  const [reload, version] = useReload();\n\n  const activeProviderRef = useRef(activeProvider);\n  const walletProviderRef = useRef(walletProvider);\n  const accountRef = useRef(account);\n\n  const contractsRef = useRef<Map<string, CachedContractType>>(new Map());\n\n  const createContract = useCallback(\n    (address: string, factory: () => Web3Contract, options?: UseContractOptions<Web3Contract>): Web3Contract => {\n      const contract = factory();\n      contract.setCallProvider(activeProviderRef.current);\n      contract.setProvider(walletProviderRef.current);\n      contract.setAccount(accountRef.current);\n\n      contractsRef.current.set(address, {\n        address,\n        factory,\n        options,\n        instance: contract,\n      });\n\n      options?.afterInit?.(contract);\n      reload();\n\n      return contract;\n    },\n    [activeProvider, account, reload],\n  );\n\n  const updateContracts = useDebounce(() => {\n    contractsRef.current.forEach(meta => {\n      meta.options?.onDestroy?.(meta.instance);\n      createContract(meta.address, () => meta.instance, meta.options);\n    });\n  }, 250);\n\n  if (activeProviderRef.current !== activeProvider) {\n    activeProviderRef.current = activeProvider;\n    updateContracts();\n  }\n\n  if (walletProviderRef.current !== walletProvider) {\n    walletProviderRef.current = walletProvider;\n    updateContracts();\n  }\n\n  if (accountRef.current !== account) {\n    accountRef.current = account;\n    updateContracts();\n  }\n\n  const getOrCreateContract = useCallback(\n    (address: string, factory: () => Web3Contract, options?: UseContractOptions<Web3Contract>): Web3Contract => {\n      let contract: Web3Contract;\n\n      if (contractsRef.current.has(address)) {\n        contract = contractsRef.current.get(address)!.instance;\n      } else {\n        contract = createContract(address, factory, options);\n      }\n\n      return contract;\n    },\n    [createContract],\n  );\n\n  const getContract = useCallback(\n    (address: string): Web3Contract | undefined => {\n      if (!contractsRef.current.has(address)) {\n        return undefined;\n      }\n\n      return contractsRef.current.get(address)!.instance;\n    },\n    [createContract],\n  );\n\n  const Listeners = useMemo(\n    () =>\n      listeners ? (\n        <>\n          {Array.from(contractsRef.current).map(([key, value]) => (\n            <ContractListener key={key} contract={value.instance} />\n          ))}\n        </>\n      ) : null,\n    [version, listeners],\n  );\n\n  return {\n    getOrCreateContract: getOrCreateContract as any,\n    getContract: getContract as any,\n    Listeners,\n  };\n}\n\nexport function useWeb3Contract<T extends Web3Contract>(factory: () => T, options?: UseContractOptions<T>): T {\n  return useContractFactory({ listeners: false }).getOrCreateContract<T>('$address', factory, options);\n}\n","import React from 'react';\nimport cn from 'classnames';\n\nimport s from './s.module.scss';\n\nexport type IconsSetProps = {\n  icons: React.ReactNode[];\n  className?: string;\n};\n\nconst IconsSet: React.FC<IconsSetProps> = props => {\n  return <div className={cn(s.component, props.className)}>{props.icons}</div>;\n};\n\nexport default IconsSet;\n","import { useMemo } from 'react';\nimport cn from 'classnames';\n\nimport { Icon } from 'components/icon';\n\nimport s from './s.module.scss';\n\n/**\n * @param {number} current\n * @param {number} last\n * @param {number} [delta=2]\n */\nfunction pagination(current: number, last: number, delta: number = 2) {\n  const left = current - delta;\n  const right = current + delta + 1;\n  const range: number[] = [];\n  const rangeWithDots: (number | null)[] = [];\n  let l: number;\n\n  if (last < 2) {\n    return [1];\n  }\n\n  range.push(1);\n  for (let i = current - delta; i <= current + delta; i++) {\n    if (i >= left && i < right && i < last && i > 1) {\n      range.push(i);\n    }\n  }\n  range.push(last);\n\n  range.forEach(i => {\n    if (l) {\n      if (i - l === 2) {\n        rangeWithDots.push(l + 1);\n      } else if (i - l !== 1) {\n        rangeWithDots.push(null);\n      }\n    }\n    rangeWithDots.push(i);\n    l = i;\n  });\n\n  return rangeWithDots;\n}\n\ntype Props = {\n  className?: string;\n  total: number;\n  current: number;\n  pageSize: number;\n  onChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({ className, total, current, pageSize, onChange }) => {\n  const pages = Math.ceil(total / pageSize);\n  const paginationList = useMemo(() => pagination(current, pages), [current, pages]);\n\n  if (pages < 2) {\n    return null;\n  }\n\n  return (\n    <div className={cn(s.pagination, className)}>\n      <button\n        className={cn(s.page, s.prev)}\n        type=\"button\"\n        onClick={() => onChange(current - 1)}\n        disabled={current <= 1}>\n        <Icon name=\"chevron\" rotate={180} size={24} />\n      </button>\n      {paginationList.map((page, idx) =>\n        page ? (\n          <button\n            key={idx}\n            onClick={() => onChange(page)}\n            className={cn(s.page, {\n              [s.active]: page === current,\n            })}\n            type=\"button\"\n            disabled={page === current}>\n            {page}\n          </button>\n        ) : (\n          <div key={idx} className={s.separator}>\n            ...\n          </div>\n        ),\n      )}\n      <button\n        className={cn(s.page, s.next)}\n        type=\"button\"\n        onClick={() => onChange(current + 1)}\n        disabled={current >= pages}>\n        <Icon name=\"chevron\" size={24} />\n      </button>\n    </div>\n  );\n};\n","import { useHistory } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Pagination } from 'components/custom/pagination';\nimport { Spinner } from 'components/custom/spinner';\nimport { Text } from 'components/custom/typography';\nimport { Icon } from 'components/icon';\n\nimport s from './s.module.scss';\n\nexport type ColumnType<T> = {\n  heading: React.ReactNode;\n  render: (item: T) => React.ReactElement;\n  align?: 'center' | 'right';\n};\n\ntype Props<T> = {\n  columns: ColumnType<T>[];\n  data: T[];\n  loading?: boolean;\n  rowKey?: (item: T) => string;\n  variation?: 'standard' | 'separated';\n  link?: (item: T) => string;\n};\n\nexport const Table = <T extends Record<string, any>>({\n  columns,\n  data,\n  loading,\n  rowKey,\n  variation = 'standard',\n  link,\n}: Props<T>) => {\n  const history = useHistory();\n\n  return (\n    <div\n      className={classNames('table-container', s.tableContainer, {\n        [s.loading]: loading,\n      })}>\n      <table\n        className={classNames(s.table, {\n          table: variation === 'standard',\n          'table-separated': variation === 'separated',\n          [s.clickable]: link,\n          [s.loading]: loading,\n        })}>\n        <thead>\n          <tr>\n            {columns.map(({ heading, align }, dataIdx) => (\n              <th key={dataIdx} className={align ? `text-${align}` : undefined}>\n                {heading}\n              </th>\n            ))}\n            {link ? <th /> : null}\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((item, itemIdx) => (\n            <tr key={rowKey?.(item) ?? itemIdx} onClick={link ? () => history.push(link(item)) : undefined}>\n              {columns.map(({ render: Render, align }, dataIdx) => (\n                <td key={dataIdx} className={align ? `text-${align}` : undefined}>\n                  <Render {...item} />\n                </td>\n              ))}\n              {link ? (\n                <td>\n                  <Icon name=\"arrow\" color=\"red\" className={s.arrowIcon} />\n                </td>\n              ) : null}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {loading && (\n        <Spinner\n          className={s.spinner}\n          style={{\n            width: 40,\n            height: 40,\n            position: 'absolute',\n            marginTop: -20,\n            marginLeft: -20,\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\ntype TableFooterType = {\n  total: number;\n  current: number;\n  pageSize: number;\n  children?: JSX.Element | (({ total, from, to }: { total: number; from: number; to: number }) => JSX.Element);\n  onChange: (page: number) => void;\n  text?: boolean | (({ total, from, to }) => React.ReactNode);\n};\n\nexport const TableFooter: React.FC<TableFooterType> = ({ children, text, total, current, pageSize, onChange }) => {\n  const generatedText = generateText({ text, total, current, pageSize });\n  return (\n    <div className={classNames(s.tableFooter, 'p-24')}>\n      {generatedText ? (\n        <Text type=\"p2\" weight=\"semibold\" color=\"secondary\">\n          {generatedText}\n        </Text>\n      ) : null}\n      <Pagination total={total} current={current} pageSize={pageSize} onChange={onChange} />\n    </div>\n  );\n};\n\nfunction generateText({ text, total, current, pageSize }) {\n  let generatedText: React.ReactNode;\n  if (text) {\n    const from = total ? (current - 1) * pageSize + 1 : 0;\n    const to = current * pageSize > total ? total : current * pageSize;\n\n    if (typeof text === 'function') {\n      generatedText = text({\n        total,\n        from,\n        to,\n      });\n    }\n\n    if (text === true) {\n      generatedText = (\n        <>\n          Showing {from} to {to} out of {total} entries\n        </>\n      );\n    }\n  }\n\n  return generatedText;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"s_component__2UoVy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"s_spinner__2lxg5\",\"rotate\":\"s_rotate__K9I_G\",\"container\":\"s_container__2DwVy\",\"children\":\"s_children__1ZC_G\"};","import classNames from 'classnames';\n\nimport IconsSet from 'components/custom/icons-set';\nimport { TokenIcon, TokenIconNames } from 'components/token-icon';\n\nimport s from './s.module.scss';\n\ntype AprLabelPropsType = {\n  icons: TokenIconNames[];\n  size?: 'large';\n};\n\nexport const AprLabel: React.FC<AprLabelPropsType> = ({ icons, size, children }) => {\n  const iconSize = size === 'large' ? 16 : 12;\n\n  return (\n    <div\n      className={classNames(s.aprLabel, {\n        [s.aprLabelLarge]: size === 'large',\n      })}>\n      <IconsSet\n        className=\"mr-4\"\n        icons={icons.map((icon, idx) => (\n          <TokenIcon key={idx} name={icon} size={iconSize} />\n        ))}\n      />\n      <div\n        className={classNames(s.aprLabelText, {\n          [s.aprLabelTextGradient]: icons.length > 1,\n        })}>\n        {children}\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"s_pagination__3UMZt\",\"page\":\"s_page__29oPu\",\"separator\":\"s_separator__1n_F1\",\"prev\":\"s_prev__2g1Q9\",\"next\":\"s_next__d_WwI\",\"active\":\"s_active__ec-7d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"s_tableContainer__2Dki2\",\"loading\":\"s_loading__1OMuZ\",\"table\":\"s_table__Nd1Ke\",\"clickable\":\"s_clickable__1x0tg\",\"arrowIcon\":\"s_arrowIcon__1zygh\",\"tableFooter\":\"s_tableFooter__3iZZl\",\"spinner\":\"s_spinner__1axuf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aprLabel\":\"s_aprLabel__2wyqU\",\"aprLabelLarge\":\"s_aprLabelLarge__2UJ3z\",\"aprLabelText\":\"s_aprLabelText__1POf6\",\"aprLabelTextGradient\":\"s_aprLabelTextGradient__3jxlu\"};","import Web3Contract from 'web3/web3Contract';\n\nconst ABI: any[] = [\n  {\n    name: 'balanceOf',\n    type: 'function',\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    name: 'tokenOfOwnerByIndex',\n    type: 'function',\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        name: 'index',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n  },\n];\n\nclass SYJuniorBondContract extends Web3Contract {\n  constructor(address: string) {\n    super(ABI, address, '');\n  }\n\n  async getJuniorBondIds(): Promise<number[]> {\n    if (!this.account) {\n      return Promise.reject();\n    }\n\n    return this.call('balanceOf', [this.account])\n      .then(value => Number(value))\n      .then(balance => {\n        if (balance > 0) {\n          const methods = Array.from(Array(balance)).map((_, index) => ({\n            method: 'tokenOfOwnerByIndex',\n            methodArgs: [this.account, index],\n            transform: (value: any) => Number(value),\n          }));\n\n          return this.batch(methods);\n        }\n\n        return [];\n      });\n  }\n}\n\nexport default SYJuniorBondContract;\n","import { useEffect, useMemo } from 'react';\nimport BigNumber from 'bignumber.js';\nimport { formatPercent, formatToken, formatUSD } from 'web3/utils';\n\nimport Tooltip from 'components/antd/tooltip';\nimport { ExternalLink } from 'components/button';\nimport { AprLabel } from 'components/custom/label';\nimport { ColumnType, Table } from 'components/custom/table';\nimport { Hint, Text } from 'components/custom/typography';\nimport { Icon } from 'components/icon';\nimport { useKnownTokens } from 'components/providers/knownTokensProvider';\nimport { useTokens } from 'components/providers/tokensProvider';\nimport { TokenIcon, TokenIconNames } from 'components/token-icon';\nimport { useContractFactory } from 'hooks/useContract';\nimport { useReload } from 'hooks/useReload';\nimport SYJuniorBondContract from 'modules/smart-yield/contracts/syJuniorBondContract';\nimport SYRewardPoolContract from 'modules/smart-yield/contracts/syRewardPoolContract';\nimport SYSeniorBondContract from 'modules/smart-yield/contracts/sySeniorBondContract';\nimport SYSmartYieldContract from 'modules/smart-yield/contracts/sySmartYieldContract';\nimport { MarketMeta } from 'modules/smart-yield/providers/markets';\nimport { PoolsSYPool, usePools } from 'modules/smart-yield/providers/pools-provider';\nimport { useRewardPools } from 'modules/smart-yield/providers/reward-pools-provider';\nimport { useWallet } from 'wallets/walletProvider';\n\ntype PoolEntity = PoolsSYPool & {\n  seniorBalance?: BigNumber;\n  juniorBalance?: BigNumber;\n  juniorTokenSymbol?: string;\n};\n\nfunction getMarketInsuranceLink(marketTokenSymbol?: string): string {\n  switch (marketTokenSymbol) {\n    case 'bb_cUSDC':\n      return 'https://app.riskharbor.com/pool/mainnet/0x6c6531b77831166ae657d586f9a466370775730b';\n    case 'bb_amDAI':\n      return 'https://app.riskharbor.com/pool/matic/0x3e114057bb7b0fceaf53f3254c084f3de16e5dab';\n    case 'bb_amUSDC':\n      return 'https://app.riskharbor.com/pool/matic/0xc25ab272e83e7b5105299e32bdc61e34598e094c';\n    case 'bb_amUSDT':\n      return 'https://app.riskharbor.com/pool/matic/0x326b4a921c61dd98cf80592323a9ab0df45e4604';\n    default:\n      return '';\n  }\n}\n\nfunction getTableColumns(showWalletBalance: boolean, activeMarket: MarketMeta): ColumnType<PoolEntity>[] {\n  return [\n    {\n      heading: 'Token Name',\n      render: entity => {\n        const marketInsuranceLink = getMarketInsuranceLink(entity.contracts.smartYield?.symbol);\n\n        return (\n          <div className=\"flex flow-col col-gap-16 align-center\">\n            <TokenIcon\n              name={entity.token?.icon as TokenIconNames}\n              bubble1Name={entity.market?.icon.active as TokenIconNames}\n            />\n            <div>\n              <div className=\"mb-4 flex align-center\">\n                <Text type=\"p1\" weight=\"semibold\" wrap={false} color=\"primary\" className=\"mr-4\">\n                  {entity.underlyingSymbol}\n                </Text>\n                {marketInsuranceLink ? (\n                  <Tooltip\n                    title={\n                      <>\n                        This market is covered by: <br /> - Nexus Mutual,{' '}\n                        <a\n                          href=\"https://app.nexusmutual.io/cover/buy/get-quote?address=0x4B8d90D68F26DEF303Dcb6CFc9b63A1aAEC15840\"\n                          rel=\"noopener noreferrer\"\n                          target=\"_blank\">\n                          click here\n                        </a>{' '}\n                        to purchase coverage <br /> - Bridge Mutual,{' '}\n                        <a\n                          href=\"https://app.bridgemutual.io/user/cover/0xdb9A242cfD588507106919051818e771778202e9\"\n                          rel=\"noopener noreferrer\"\n                          target=\"_blank\">\n                          click here\n                        </a>{' '}\n                        to purchase coverage <br /> - Risk Harbor,{' '}\n                        <a href={marketInsuranceLink} rel=\"noopener noreferrer\" target=\"_blank\">\n                          click here\n                        </a>{' '}\n                        to purchase coverage\n                      </>\n                    }>\n                    <Icon name=\"insured\" color=\"green\" size={24} />\n                  </Tooltip>\n                ) : null}\n              </div>\n              <Text type=\"small\" weight=\"semibold\" wrap={false}>\n                {entity.token?.name}\n              </Text>\n            </div>\n          </div>\n        );\n      },\n    },\n    {\n      heading: 'Senior Liquidity',\n      render: function Render(entity) {\n        const { getToken } = useTokens();\n        const token = getToken(entity.underlyingSymbol);\n        const sum =\n          BigNumber.from(entity.state.seniorLiquidity)\n            ?.multipliedBy(token?.price ?? 0)\n            .toString() ?? '0';\n\n        return (\n          <Tooltip\n            title={\n              <>\n                <Text type=\"p1\" weight=\"semibold\" color=\"primary\" className=\"mb-4\">\n                  {formatToken(entity.state.seniorLiquidity, {\n                    tokenName: entity.underlyingSymbol,\n                  })}\n                </Text>\n                <Text type=\"small\" weight=\"semibold\" color=\"secondary\">\n                  {formatUSD(sum)}\n                </Text>\n              </>\n            }>\n            <Text type=\"p1\" weight=\"semibold\" color=\"primary\" wrap={false} className=\"mb-4\">\n              {formatToken(entity.state.seniorLiquidity, {\n                tokenName: entity.underlyingSymbol,\n                compact: true,\n              })}\n            </Text>\n            <Text type=\"small\" weight=\"semibold\">\n              {formatUSD(sum, {\n                compact: true,\n              })}\n            </Text>\n          </Tooltip>\n        );\n      },\n    },\n    {\n      heading: (\n        <Hint\n          text={\n            <Text type=\"p2\" className=\"mb-8\">\n              The Senior APY shown is the maximum theoretically possible daily rate for senior bonds.\n            </Text>\n          }>\n          Senior (Fixed) APY\n        </Hint>\n      ),\n      render: entity => (\n        <Text type=\"p1\" weight=\"semibold\" color=\"green\">\n          {formatPercent(entity.state.seniorApy)}\n        </Text>\n      ),\n    },\n    {\n      heading: 'Junior Liquidity',\n      render: function Render(entity) {\n        const { getToken } = useTokens();\n        const token = getToken(entity.underlyingSymbol);\n        const sum =\n          BigNumber.from(entity.state.juniorLiquidity)\n            ?.multipliedBy(token?.price ?? 0)\n            .toString() ?? '0';\n\n        return (\n          <Tooltip\n            title={\n              <>\n                <Text type=\"p1\" weight=\"semibold\" color=\"primary\" className=\"mb-4\">\n                  {formatToken(entity.state.juniorLiquidity, {\n                    tokenName: entity.underlyingSymbol,\n                  })}\n                </Text>\n                <Text type=\"small\" weight=\"semibold\" color=\"secondary\">\n                  {formatUSD(sum)}\n                </Text>\n              </>\n            }>\n            <Text type=\"p1\" weight=\"semibold\" color=\"primary\" wrap={false} className=\"mb-4\">\n              {formatToken(entity.state.juniorLiquidity, {\n                tokenName: entity.underlyingSymbol,\n                compact: true,\n              })}\n            </Text>\n            <Text type=\"small\" weight=\"semibold\">\n              {formatUSD(sum, {\n                compact: true,\n              })}\n            </Text>\n          </Tooltip>\n        );\n      },\n    },\n    {\n      heading: (\n        <Hint\n          text={\n            <>\n              <Text type=\"p2\" className=\"mb-16\">\n                The Junior (Variable) APY is estimated based on the current state of the pool. The actual APY you get\n                for your positions might differ.\n              </Text>\n              <Text type=\"p2\" className=\"mb-8\">\n                The number next to it is the SMART Yield junior rewards APR. You can add that by staking tokens in\n                Pools. Below it, is the average Junior (Variable) APY for the past 30 days.\n              </Text>\n              <ExternalLink href=\"https://docs.barnbridge.com/beginners-guide-to-smart-yield#junior-apy\">\n                Learn more\n              </ExternalLink>\n            </>\n          }>\n          Junior (Variable) / 30d avg APY\n        </Hint>\n      ),\n      render: function Render(entity) {\n        const { bondToken, stkAaveToken } = useKnownTokens();\n        const { pools } = useRewardPools();\n\n        const hasZeroBondRewardLeft = pools.find(\n          pool =>\n            pool.rewardPool.address === entity.rewardPoolAddress &&\n            Array.from(pool.rewardTokens.values()).some(\n              rewardToken =>\n                !!(rewardToken === bondToken && pool.rewardPool.getRewardLeftFor(rewardToken.address)?.isZero()),\n            ),\n        );\n\n        return (\n          <>\n            <div className=\"flex align-center col-gap-8\">\n              <Text type=\"p1\" weight=\"semibold\" color=\"purple\">\n                {formatPercent(entity.state.juniorApy)}\n              </Text>\n              {entity.contracts.rewardPool?.rewardTokensCount! > 1 ? (\n                <AprLabel icons={[bondToken.icon!, stkAaveToken.icon!]}>\n                  +{formatPercent(entity.apy?.plus(hasZeroBondRewardLeft ? 0 : entity.apr ?? 0) ?? 0)} APR\n                </AprLabel>\n              ) : !hasZeroBondRewardLeft && entity.apr ? (\n                <AprLabel icons={['bond']}>+{formatPercent(entity.apr ?? 0)} APR</AprLabel>\n              ) : null}\n            </div>\n            <Text type=\"small\" weight=\"semibold\">\n              {formatPercent(entity.state.juniorAPYPast30DAvg)}\n            </Text>\n          </>\n        );\n      },\n    },\n    {\n      heading: (\n        <Hint\n          text={\n            <Text type=\"p2\" className=\"mb-8\">\n              The originator APY is the APY that deposits get on the 3rd party lending provider. This number includes\n              any governance token rewards.\n            </Text>\n          }>\n          {activeMarket.name} APY\n        </Hint>\n      ),\n      render: entity => (\n        <Text type=\"p1\" weight=\"semibold\" color=\"primary\">\n          {formatPercent(entity.state.originatorNetApy)}\n        </Text>\n      ),\n    },\n    ...(showWalletBalance\n      ? ([\n          {\n            heading: 'Junior Positions Balance',\n            render: function Render(entity) {\n              const { getAmountInUSD } = useTokens();\n              return (\n                <>\n                  <Text type=\"p1\" weight=\"semibold\" color=\"primary\" className=\"mb-4\">\n                    {formatToken(entity.juniorBalance?.unscaleBy(entity.underlyingDecimals), {\n                      tokenName: entity.juniorTokenSymbol,\n                    }) ?? '-'}\n                  </Text>\n                  <Text type=\"small\" weight=\"semibold\" wrap={false}>\n                    {formatUSD(\n                      getAmountInUSD(\n                        entity.juniorBalance\n                          ?.unscaleBy(entity.underlyingDecimals)\n                          ?.multipliedBy(entity.state.jTokenPrice),\n                        entity.underlyingSymbol,\n                      ),\n                    ) ?? '-'}\n                  </Text>\n                </>\n              );\n            },\n          },\n          {\n            heading: 'Senior Positions Balance',\n            render: function Render(entity) {\n              const { getAmountInUSD } = useTokens();\n              return (\n                <>\n                  <Text type=\"p1\" weight=\"semibold\" color=\"primary\" className=\"mb-4\">\n                    {formatToken(entity.seniorBalance?.unscaleBy(entity.underlyingDecimals), {\n                      tokenName: entity.underlyingSymbol,\n                    }) ?? '-'}\n                  </Text>\n                  <Text type=\"small\" weight=\"semibold\" wrap={false}>\n                    {formatUSD(\n                      getAmountInUSD(\n                        entity.seniorBalance?.unscaleBy(entity.underlyingDecimals),\n                        entity.underlyingSymbol,\n                      ),\n                    ) ?? '-'}\n                  </Text>\n                </>\n              );\n            },\n          },\n        ] as ColumnType<PoolEntity>[])\n      : []),\n  ];\n}\n\ntype Props = {\n  activeMarket?: MarketMeta;\n};\n\nconst PoolsTable: React.FC<Props> = props => {\n  const { activeMarket } = props;\n\n  const [reload] = useReload();\n  const wallet = useWallet();\n  const poolsCtx = usePools();\n  const { pools, loading } = poolsCtx;\n\n  const { getOrCreateContract } = useContractFactory();\n\n  const entities = useMemo<PoolEntity[]>(() => {\n    return pools.filter(pool => !activeMarket || pool.protocolId === activeMarket.id);\n  }, [pools, activeMarket]);\n\n  const columns = useMemo<ColumnType<PoolEntity>[]>(() => {\n    return getTableColumns(wallet.isActive, activeMarket!);\n  }, [wallet, activeMarket]);\n\n  useEffect(() => {\n    pools.forEach(pool => {\n      (pool as PoolEntity).seniorBalance = undefined;\n      (pool as PoolEntity).juniorBalance = undefined;\n    });\n\n    if (!wallet.isActive) {\n      return;\n    }\n\n    pools.map(async pool => {\n      const smartYieldContract = getOrCreateContract(\n        pool.smartYieldAddress,\n        () => {\n          return new SYSmartYieldContract(pool.smartYieldAddress);\n        },\n        {\n          afterInit: contract => {\n            contract.loadCommon().catch(Error);\n          },\n        },\n      );\n\n      const seniorBondContract = getOrCreateContract(pool.seniorBondAddress, () => {\n        return new SYSeniorBondContract(pool.seniorBondAddress);\n      });\n\n      const juniorBondContract = getOrCreateContract(pool.juniorBondAddress, () => {\n        return new SYJuniorBondContract(pool.juniorBondAddress);\n      });\n\n      const lockedSeniorBalancePromise = seniorBondContract.getSeniorBondIds().then(sBondIds => {\n        if (sBondIds.length === 0) {\n          return Promise.resolve(BigNumber.ZERO);\n        }\n\n        return smartYieldContract.getSeniorBonds(sBondIds).then(sBonds => {\n          if (sBonds.length === 0) {\n            return Promise.resolve(BigNumber.ZERO);\n          }\n\n          return sBonds.reduce((sum, sBond) => {\n            return sum.plus(sBond.principal).plus(sBond.gain);\n          }, BigNumber.ZERO);\n        });\n      });\n\n      const lockedJuniorBalancePromise = juniorBondContract.getJuniorBondIds().then(jBondIds => {\n        if (jBondIds.length === 0) {\n          return Promise.resolve(BigNumber.ZERO);\n        }\n\n        return smartYieldContract.getJuniorBonds(jBondIds).then(jBonds => {\n          if (jBonds.length === 0) {\n            return Promise.resolve(BigNumber.ZERO);\n          }\n\n          return jBonds.reduce((sum, sBond) => {\n            return sum.plus(sBond.tokens);\n          }, BigNumber.ZERO);\n        });\n      });\n\n      const activeJuniorBalancePromise = smartYieldContract.loadBalance().then(() => smartYieldContract.balance);\n\n      let stakedJuniorBalancePromise = Promise.resolve(BigNumber.ZERO);\n\n      if (pool.rewardPoolAddress) {\n        const rewardContract = getOrCreateContract(pool.rewardPoolAddress, () => {\n          return new SYRewardPoolContract(pool.rewardPoolAddress, false);\n        });\n\n        const account = wallet.account;\n\n        if (account) {\n          stakedJuniorBalancePromise = rewardContract.loadBalanceFor(account).then(() => {\n            return rewardContract.getBalanceFor(account) ?? BigNumber.ZERO;\n          });\n        }\n      }\n\n      const [\n        lockedSeniorBalance = BigNumber.ZERO,\n        activeJuniorBalance = BigNumber.ZERO,\n        lockedJuniorBalance = BigNumber.ZERO,\n        stakedJuniorBalance = BigNumber.ZERO,\n      ] = await Promise.all([\n        lockedSeniorBalancePromise,\n        activeJuniorBalancePromise,\n        lockedJuniorBalancePromise,\n        stakedJuniorBalancePromise,\n      ]);\n\n      (pool as PoolEntity).seniorBalance = lockedSeniorBalance;\n      (pool as PoolEntity).juniorBalance = activeJuniorBalance.plus(lockedJuniorBalance).plus(stakedJuniorBalance);\n      (pool as PoolEntity).juniorTokenSymbol = smartYieldContract.symbol;\n      reload();\n    });\n  }, [wallet.isActive, pools]);\n\n  return (\n    <Table<PoolEntity>\n      columns={columns}\n      data={entities}\n      variation=\"separated\"\n      loading={loading}\n      link={item => `/smart-yield/stats?m=${item.protocolId}&t=${item.underlyingSymbol}`}\n    />\n  );\n};\n\nexport default PoolsTable;\n","import { FC, Fragment, useEffect, useMemo, useState } from 'react';\nimport { useSessionStorage } from 'react-use-storage';\nimport AntdSpin from 'antd/lib/spin';\nimport cn from 'classnames';\nimport { formatUSD } from 'web3/utils';\n\nimport Tooltip from 'components/antd/tooltip';\nimport IconOld from 'components/custom/icon';\nimport { Text } from 'components/custom/typography';\nimport { Icon } from 'components/icon';\nimport { useNetwork } from 'components/providers/networkProvider';\nimport { TokenIcon, TokenIconNames } from 'components/token-icon';\nimport { KnownMarkets, MarketMeta, getKnownMarketById } from 'modules/smart-yield/providers/markets';\nimport { usePools } from 'modules/smart-yield/providers/pools-provider';\nimport PoolsTable from 'modules/smart-yield/views/markets-view/pools-table';\nimport { PolygonNetwork } from 'networks/polygon';\n\nconst MarketsView: FC = () => {\n  const { activeNetwork } = useNetwork();\n  const poolsCtx = usePools();\n\n  const [marketsSelection, setMarketsSelection] = useSessionStorage<string | undefined>(\n    `${activeNetwork.id}#sy-markets-selection`,\n  );\n\n  const [selectedMarkets, setSelectedMarkets] = useState<MarketMeta[]>([]);\n\n  const marketsToDisplay = useMemo(() => {\n    if (!selectedMarkets.length) {\n      return KnownMarkets.filter(market => {\n        return poolsCtx.pools.some(pool => pool.protocolId === market.id);\n      });\n    }\n\n    return selectedMarkets;\n  }, [selectedMarkets, poolsCtx.pools]);\n\n  useEffect(() => {\n    const activeMarkets = marketsSelection\n      ?.split('<#>')\n      .map(marketId => {\n        return getKnownMarketById(marketId)!;\n      })\n      .filter(Boolean);\n\n    setSelectedMarkets(activeMarkets ?? []);\n  }, [marketsSelection]);\n\n  return (\n    <>\n      <div className=\"tab-cards mb-64\">\n        {KnownMarkets.filter(market => {\n          return poolsCtx.pools.some(pool => pool.protocolId === market.id);\n        }).map(market => {\n          const isSelected = selectedMarkets.includes(market);\n\n          return (\n            <button\n              key={market.name}\n              type=\"button\"\n              className={cn('tab-card', isSelected && 'active')}\n              onClick={() => {\n                const newSelection = selectedMarkets.includes(market)\n                  ? selectedMarkets.filter(ps => ps !== market)\n                  : [...selectedMarkets, market];\n                setSelectedMarkets(newSelection);\n                setMarketsSelection(newSelection.map(m => m.id).join('<#>'));\n              }}>\n              <TokenIcon\n                name={market.icon.active as TokenIconNames}\n                {...(activeNetwork === PolygonNetwork ? { bubble2Name: 'polygon' } : undefined)}\n                size={24}\n                className=\"mr-16\"\n              />\n              <Text type=\"p1\" weight=\"semibold\" color=\"primary\">\n                {market.name}\n              </Text>\n              {market.warning && (\n                <div onClick={ev => ev.stopPropagation()} className=\"flex\">\n                  <Tooltip title={market.warning}>\n                    <IconOld name=\"warn-circle\" className=\"ml-8\" />\n                  </Tooltip>\n                </div>\n              )}\n              <IconOld\n                name={isSelected ? 'checkbox-checked' : 'checkbox'}\n                style={{\n                  marginLeft: 16,\n                  flexShrink: 0,\n                }}\n              />\n            </button>\n          );\n        })}\n      </div>\n      <Text type=\"p1\" weight=\"semibold\" color=\"secondary\" className=\"mb-4\">\n        Total value locked\n      </Text>\n      <div className=\"mb-40 flex align-center\">\n        <Text type=\"h2\" weight=\"bold\" color=\"primary\" className=\"mr-8\">\n          {formatUSD(poolsCtx.getMarketTVL())}\n        </Text>\n        <Tooltip\n          title={\n            <>\n              The BarnBridge SMART Yield contracts are covered by:\n              <br /> - Nexus Mutual,{' '}\n              <a\n                href=\"https://app.nexusmutual.io/cover/buy/get-quote?address=0x4B8d90D68F26DEF303Dcb6CFc9b63A1aAEC15840\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\">\n                click here\n              </a>{' '}\n              to purchase coverage\n              <br /> - Bridge Mutual,{' '}\n              <a\n                href=\"https://app.bridgemutual.io/user/cover/0xdb9A242cfD588507106919051818e771778202e9\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\">\n                click here\n              </a>{' '}\n              to purchase coverage\n            </>\n          }>\n          <Icon name=\"insured\" color=\"green\" size={32} />\n        </Tooltip>\n      </div>\n      <AntdSpin spinning={poolsCtx.loading}>\n        {marketsToDisplay.map(selectedMarket => (\n          <Fragment key={selectedMarket.id}>\n            <div className=\"card p-24 flex wrap align-center col-gap-64 row-gap-16\">\n              <div className=\"flex\">\n                <TokenIcon\n                  name={selectedMarket.icon.active as TokenIconNames}\n                  {...(selectedMarket.warning ? { bubble2Name: 'warn-circle' } : {})}\n                  size={40}\n                  className=\"mr-16\"\n                />\n                <div>\n                  <Text type=\"p1\" weight=\"semibold\" color=\"primary\" className=\"mb-4\">\n                    {selectedMarket.name}\n                  </Text>\n                  <Text type=\"small\" weight=\"semibold\" color=\"secondary\">\n                    Markets\n                  </Text>\n                </div>\n              </div>\n              <div>\n                <Text type=\"small\" weight=\"semibold\" color=\"secondary\" className=\"mb-4\">\n                  Total value locked\n                </Text>\n                <Text type=\"p1\" weight=\"semibold\" color=\"primary\">\n                  {formatUSD(poolsCtx.getMarketTVL(selectedMarket.id))}\n                </Text>\n              </div>\n            </div>\n            <div className=\"mb-32\">\n              <PoolsTable activeMarket={selectedMarket} />\n            </div>\n          </Fragment>\n        ))}\n      </AntdSpin>\n    </>\n  );\n};\n\nexport default MarketsView;\n"],"sourceRoot":""}