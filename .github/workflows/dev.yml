name: Development Environment

on:
  push:
    branches:
      - development

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Notify Slack
        if: success()
        id: slack
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: slackapi/slack-github-action@v1.15.0
        with:
          channel-id: infrastructure-notifications
          slack-message: ":pepegalight: STARTED barnbridge-frontend dev build"

      - name: Setup Nodejs
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Cache dependencies
        id: node-cache
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: dev-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build
        run: npm run build
        env:
          CI: false
          SKIP_PREFLIGHT_CHECK: true
          REACT_APP_ENV: 'development'

      - name: Save artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dev-frontend
          path: build

#      - name: Notify Slack success
#        if: success()
#        env:
#          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
#        uses: slackapi/slack-github-action@v1.15.0
#        with:
#          channel-id: infrastructure-notifications
#          slack-message: ":white_check_mark: barnbridge-frontend dev build"
#
#      - name: Notify Slack failure
#        if: failure()
#        env:
#          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
#        uses: slackapi/slack-github-action@v1.15.0
#        with:
#          channel-id: infrastructure-notifications
#          slack-message: ":octagonal_sign: barnbridge-frontend build FAILED"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack
        if: success()
        id: slack
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: slackapi/slack-github-action@v1.15.0
        with:
          channel-id: q-xyz-cicd
          slack-message: ":pepegalight: STARTED barnbridge-frontend dev deployment"

      - name: Get artifacts
        uses: actions/download-artifact@v2
        with:
          name: dev-frontend

      - name: Configure AWS credetials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy static site to S3
        run: ls -l && aws s3 sync . s3://dev-appdevqxyz-origin --delete

      - name: Invalidate CloudFront cache
        run: |
          #!/usr/bin/env bash
          set -eou pipefail

          CF_DIST_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[?Aliases.Items!=null] | [?contains(Aliases.Items, 'app.dev.q.xyz')].Id | [0]" | tr -d \")
          echo "Clearing cache for ${CF_DIST_ID}..."
          CF_INVALIDATION_ID=$(aws cloudfront create-invalidation --distribution-id ${CF_DIST_ID} --paths "/*" | jq -r '.Invalidation.Id')
          while [ $(aws cloudfront get-invalidation --distribution-id ${CF_DIST_ID} --id ${CF_INVALIDATION_ID} | jq -r '.Invalidation.Status') != "Completed" ]; do
            echo "CF_DIST_ID=${CF_DIST_ID} CF_INVALIDATION_ID=${CF_INVALIDATION_ID}: Waiting for CloudFront cache invalidation to complete..."
            sleep 5
          done

#      - name: Notify Slack success
#        if: success()
#        env:
#          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
#        uses: slackapi/slack-github-action@v1.15.0
#        with:
#          channel-id: infrastructure-notifications
#          slack-message: ":white_check_mark: barnbridge-frontend dev deployment successful"
#
#      - name: Notify Slack failure
#        if: failure()
#        env:
#          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
#        uses: slackapi/slack-github-action@v1.15.0
#        with:
#          channel-id: infrastructure-notifications
#          slack-message: ":octagonal_sign: barnbridge-frontend dev deployment FAILED"
