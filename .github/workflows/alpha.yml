name: Alpha Environment

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Notify Slack
      if: success()
      id: slack
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        channel_id: C01D16VJ84C
        status: BUILD STARTED
        color: warning

    - name: Setup Nodejs
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Cache dependencies
      id: node-cache
      uses: actions/cache@v2
      with:
        path: |
          **/node_modules
        key: alpha-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

    - name: Install dependencies
      if: steps.node-cache.outputs.cache-hit != 'true'
      run: npm ci

    - name: Build
      run: npm run build
      env:
        CI: false
        SKIP_PREFLIGHT_CHECK: true
        REACT_APP_ENV: 'production'
        REACT_APP_HTML_TITLE: 'BarnBridge'

        REACT_APP_WEB3_CHAIN_ID: 1
        REACT_APP_WEB3_POLLING_INTERVAL: 12000
        REACT_APP_WEB3_RPC_WSS_URL: 'wss://mainnet.infura.io/ws/v3/6c58700fe84943eb83c4cd5c23dff3d8'
        REACT_APP_WEB3_RPC_HTTPS_URL: 'https://mainnet.infura.io/v3/6c58700fe84943eb83c4cd5c23dff3d8'
        REACT_APP_WEB3_PORTIS_APP_ID: 'b0b0f776-bbf6-458c-a175-6483e0c452b7'
        REACT_APP_WEB3_WALLET_CONNECT_BRIDGE: 'https://bridge.walletconnect.org'
        REACT_APP_WEB3_COINBASE_APP_NAME: 'BarnBridge'
        REACT_APP_WEB3_TREZOR_EMAIL: 'bogdan@barnbridge.com'
        REACT_APP_WEB3_TREZOR_APP_URL: 'https://app.barnbridge.com/'
        REACT_APP_ETHERSCAN_API_KEY: '4RSJUUZQFMXUAUUJP5FI5UR5U59N7UIA32'

        REACT_APP_TOKEN_WBTC_ADDR: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599'
        REACT_APP_TOKEN_RENBTC_ADDR: '0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D'
        REACT_APP_TOKEN_WETH_ADDR: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'
        REACT_APP_TOKEN_BOND_ADDR: '0x0391D2021f89DC339F60Fff84546EA23E337750f'
        REACT_APP_TOKEN_USDC_ADDR: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48'
        REACT_APP_TOKEN_DAI_ADDR: '0x6B175474E89094C44Da98b954EedeAC495271d0F'
        REACT_APP_TOKEN_SUSD_ADDR: '0x57Ab1ec28D129707052df4dF418D58a2D46d5f51'
        REACT_APP_TOKEN_GUSD_ADDR: '0x056fd409e1d7a124bd7017459dfea2f387b6d5cd'
        REACT_APP_TOKEN_USDT_ADDR: '0xdac17f958d2ee523a2206206994597c13d831ec7'
        REACT_APP_TOKEN_UNIV2_ADDR: '0x6591c4BcD6D7A1eb4E537DA8B78676C1576Ba244'

        REACT_APP_TOKEN_STKAAVE_ADDR: '0x4da27a545c0c5b758a6ba100e3a049001de870f5'
        REACT_APP_TOKEN_AUSDC_ADDR: '0xBcca60bB61934080951369a648Fb03DF4F96263C'
        REACT_APP_TOKEN_ADAI_ADDR: '0x028171bCA77440897B824Ca71D1c56caC55b68A3'
        REACT_APP_TOKEN_AUSDT_ADDR: '0x3Ed3B47Dd13EC9a98b44e6204A523E766B225811'
        REACT_APP_TOKEN_AGUSD_ADDR: '0xD37EE7e4f452C6638c96536e68090De8cBcdb583'

        REACT_APP_TOKEN_BBC_USDC_ADDR: '0x4B8d90D68F26DEF303Dcb6CFc9b63A1aAEC15840'
        REACT_APP_TOKEN_BBC_DAI_ADDR: '0x673f9488619821aB4f4155FdFFe06f6139De518F'

        REACT_APP_TOKEN_BBA_USDC_ADDR: '0x3cf46DA7D65E9aa2168a31b73dd4BeEA5cA1A1f1'
        REACT_APP_TOKEN_BBA_DAI_ADDR: '0x6c9DaE2C40b1e5883847bF5129764e76Cb69Fc57'
        REACT_APP_TOKEN_BBA_USDT_ADDR: '0x660dAF6643191cF0eD045B861D820F283cA078fc'
        REACT_APP_TOKEN_BBA_GUSD_ADDR: '0x6324538cc222b43490dd95CEBF72cf09d98D9dAe'

        REACT_APP_TOKEN_BBCR_USDC_ADDR: '0x62e479060c89C48199FC7ad43b1432CC585BA1b9'
        REACT_APP_TOKEN_BBCR_DAI_ADDR: '0x89d82FdF095083Ded96B48FC6462Ed5dBD14151f'
        REACT_APP_TOKEN_BBCR_USDT_ADDR: '0xc45F49bE156888a1C0C93dc0fE7dC89091E291f5'

        REACT_APP_FEED_BTC_ADDR: '0xF4030086522a5bEEa4988F8cA5B36dbC97BeE88c'
        REACT_APP_FEED_ETH_ADDR: '0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419'
        REACT_APP_FEED_BOND_ADDR: '0x6591c4BcD6D7A1eb4E537DA8B78676C1576Ba244'
        REACT_APP_FEED_USDC_ADDR: '0x8fFfFfd4AfB6115b954Bd326cbe7B4BA576818f6'
        REACT_APP_FEED_DAI_ADDR: '0xAed0c38402a5d19df6E4c03F4E2DceD6e29c1ee9'
        REACT_APP_FEED_SUSD_ADDR: '0x8e0b7e6062272B5eF4524250bFFF8e5Bd3497757'
        REACT_APP_FEED_USDT_ADDR: '0x4e58ab12d2051ea2068e78e4fcee7ddee6785848'
        REACT_APP_FEED_UNIV2_ADDR: '0x6591c4BcD6D7A1eb4E537DA8B78676C1576Ba244'
        REACT_APP_FEED_BBC_USDC_ADDR: '0x4B8d90D68F26DEF303Dcb6CFc9b63A1aAEC15840'
        REACT_APP_FEED_BBC_DAI_ADDR: '0x673f9488619821aB4f4155FdFFe06f6139De518F'

        REACT_APP_CONTRACT_YF_STAKING_ADDR: '0xb0Fa2BeEe3Cf36a7Ac7E99B885b48538Ab364853'
        REACT_APP_CONTRACT_YF_STABLE_ADDR: '0xB3F7abF8FA1Df0fF61C5AC38d35e20490419f4bb'
        REACT_APP_CONTRACT_YF_UNILP_ADDR: '0xC25c37c387C5C909a94055F4f16184ca325D3a76'
        REACT_APP_CONTRACT_YF_BOND_ADDR: '0x3FdFb07472ea4771E1aD66FD3b87b265Cd4ec112'
        REACT_APP_CONTRACT_DAO_GOVERNANCE_ADDR: '0x4cAE362D7F227e3d306f70ce4878E245563F3069'
        REACT_APP_CONTRACT_DAO_BARN_ADDR: '0x10e138877df69Ca44Fdc68655f86c88CDe142D7F'
        REACT_APP_CONTRACT_DAO_REWARD_ADDR: '0x9d0CF50547D848cC4b6A12BeDCF7696e9b334a22'
        REACT_APP_CONTRACT_SE_EPOOL: ''
        REACT_APP_CONTRACT_SE_EPOOL_HELPER: ''
        REACT_APP_CONTRACT_SE_EPOOL_PERIPHERY: ''

        REACT_APP_DAO_ACTIVATION_THRESHOLD: 400000

        REACT_APP_BASE_API_URL: 'https://alpha.api.barnbridge.com'

    - name: Save artifacts
      uses: actions/upload-artifact@v2
      with:
        name: frontend
        path: build

    - name: Notify Slack success
      if: success()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        message_id: ${{ steps.slack.outputs.message_id }}
        channel_id: C01D16VJ84C
        status: BUILD SUCCESSFUL
        color: good

    - name: Notify Slack failure
      if: failure()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        message_id: ${{ steps.slack.outputs.message_id }}
        channel_id: C01D16VJ84C
        status: BUILD FAILED
        color: danger

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Notify Slack
      if: success()
      id: slack
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        channel_id: C01D16VJ84C
        status: DEPLOYMENT STARTED
        color: warning

    - name: Get artifacts
      uses: actions/download-artifact@v2
      with:
        name: frontend

    - name: Configure AWS credetials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Deploy static site to S3
      run: ls -l && aws s3 sync . s3://alpha-alphaappbarnbridgecom-origin --delete

    - name: Invalidate CloudFront cache
      run: |
        #!/usr/bin/env bash
        set -euo pipefail

        CF_DIST_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[?Aliases.Items!=null] | [?contains(Aliases.Items, 'alpha.app.barnbridge.com')].Id | [0]" | tr -d \")
        echo "Clearing cache for ${CF_DIST_ID}..."
        CF_INVALIDATION_ID=$(aws cloudfront create-invalidation --distribution-id ${CF_DIST_ID} --paths "/*" | jq -r '.Invalidation.Id')
        while [ $(aws cloudfront get-invalidation --distribution-id ${CF_DIST_ID} --id ${CF_INVALIDATION_ID} | jq -r '.Invalidation.Status') != "Completed" ]; do
          echo "CF_DIST_ID=${CF_DIST_ID} CF_INVALIDATION_ID=${CF_INVALIDATION_ID}: Waiting for CloudFront cache invalidation to complete..."
          sleep 5
        done

    - name: Notify Slack success
      if: success()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        message_id: ${{ steps.slack.outputs.message_id }}
        channel_id: C01D16VJ84C
        status: DEPLOYMENT SUCCESSFUL
        color: good

    - name: Notify Slack failure
      if: failure()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        message_id: ${{ steps.slack.outputs.message_id }}
        channel_id: C01D16VJ84C
        status: DEPLOYMENT FAILED
        color: danger
