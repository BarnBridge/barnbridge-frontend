name: Testnet Environment

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Notify Slack
        if: success()
        id: slack
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: C01D16VJ84C
          status: BUILD STARTED
          color: warning

      - name: Setup Nodejs
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Cache dependencies
        id: node-cache
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build
        run: npm run build
        env:
          CI: false
          SKIP_PREFLIGHT_CHECK: true
          REACT_APP_ENV: 'testnet'
          REACT_APP_HTML_TITLE: 'BarnBridge Testnet'

          REACT_APP_WEB3_CHAIN_ID: 42
          REACT_APP_WEB3_POLLING_INTERVAL: 12000
          REACT_APP_WEB3_RPC_WSS_URL: 'wss://kovan.infura.io/ws/v3/aacf4c6a162a483eab3163105bebe222'
          REACT_APP_WEB3_RPC_HTTPS_URL: 'https://kovan.infura.io/v3/aacf4c6a162a483eab3163105bebe222'
          REACT_APP_WEB3_PORTIS_APP_ID: 'b0b0f776-bbf6-458c-a175-6483e0c452b7'
          REACT_APP_WEB3_WALLET_CONNECT_BRIDGE: 'https://bridge.walletconnect.org'
          REACT_APP_WEB3_COINBASE_APP_NAME: 'barnbridge'
          REACT_APP_WEB3_TREZOR_EMAIL: 'bogdan@barnbridge.com'
          REACT_APP_WEB3_TREZOR_APP_URL: 'https://testnet.app.barnbridge.com/'
          REACT_APP_ETHERSCAN_API_KEY: '4RSJUUZQFMXUAUUJP5FI5UR5U59N7UIA32'

          REACT_APP_TOKEN_WBTC_ADDR: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599'
          REACT_APP_TOKEN_RENBTC_ADDR: '0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D'
          REACT_APP_TOKEN_WETH_ADDR: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'
          REACT_APP_TOKEN_BOND_ADDR: '0xc40a66AFB908789341A58B8423F89fE2cb7Dc1f9'
          REACT_APP_TOKEN_USDC_ADDR: '0x4A69d0F05c8667B993eFC2b500014AE1bC8fD958'
          REACT_APP_TOKEN_DAI_ADDR: '0xEa8BE82DF1519D4a25E2539bcA0342a1203CD591'
          REACT_APP_TOKEN_SUSD_ADDR: '0xED159a31184ADADC5c28CE5D9e4822ea2b0B6ef9'
          REACT_APP_TOKEN_GUSD_ADDR: '0x056fd409e1d7a124bd7017459dfea2f387b6d5cd'
          REACT_APP_TOKEN_USDT_ADDR: '0xdac17f958d2ee523a2206206994597c13d831ec7'
          REACT_APP_TOKEN_UNIV2_ADDR: '0xe594D2B3BeA4454D841e5b616627dCA6A5D7aCF1'

          REACT_APP_TOKEN_BBC_USDC_ADDR: '0x63fD30ed07c91B7b27Da5c828c7eB752F7e4676b'
          REACT_APP_TOKEN_BBC_DAI_ADDR: '0x3fc25d9e5a583E96E626D921660b5Ef6ecC8A19E'
          REACT_APP_TOKEN_BBA_USDC_ADDR: '0x7559E79fcFD34431bD3c6d9Cf82228477888E844'
          REACT_APP_TOKEN_BBA_DAI_ADDR: '0xc62441DE5dD50b4ee18265d5AD66FAAB2EEBc4Fe'
          REACT_APP_TOKEN_BBA_USDT_ADDR: '0x73d82Cd31CEe823B75E2078dbf16e11C7C174a6E'
          REACT_APP_TOKEN_BBA_GUSD_ADDR: ''
          REACT_APP_TOKEN_STKAAVE_ADDR: '0xf2fbf9a6710afda1c4aab2e922de9d69e0c97fd2'
          REACT_APP_TOKEN_ADAI_ADDR: '0xdCf0aF9e59C002FA3AA091a46196b37530FD48a8'
          REACT_APP_TOKEN_AUSDC_ADDR: '0xe12AFeC5aa12Cf614678f9bFeeB98cA9Bb95b5B0'
          REACT_APP_TOKEN_AUSDT_ADDR: '0xFF3c8bc103682FA918c954E84F5056aB4DD5189d'
          REACT_APP_TOKEN_AGUSD_ADDR: ''
          REACT_APP_TOKEN_BBCR_USDC_ADDR: '0xEd515cC6470f075bd32899dB8a42ddB75f43a4f1'
          REACT_APP_TOKEN_BBCR_DAI_ADDR: ''
          REACT_APP_TOKEN_BBCR_USDT_ADDR: ''

          REACT_APP_FEED_BTC_ADDR: '0xF4030086522a5bEEa4988F8cA5B36dbC97BeE88c'
          REACT_APP_FEED_ETH_ADDR: '0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419'
          REACT_APP_FEED_BOND_ADDR: '0xc40a66AFB908789341A58B8423F89fE2cb7Dc1f9'
          REACT_APP_FEED_USDC_ADDR: '0x8fFfFfd4AfB6115b954Bd326cbe7B4BA576818f6'
          REACT_APP_FEED_DAI_ADDR: '0xAed0c38402a5d19df6E4c03F4E2DceD6e29c1ee9'
          REACT_APP_FEED_SUSD_ADDR: '0x8e0b7e6062272B5eF4524250bFFF8e5Bd3497757'
          REACT_APP_FEED_USDT_ADDR: '0x4e58ab12d2051ea2068e78e4fcee7ddee6785848'
          REACT_APP_FEED_UNIV2_ADDR: '0xe594D2B3BeA4454D841e5b616627dCA6A5D7aCF1'
          REACT_APP_FEED_BBC_USDC_ADDR: '0x63fD30ed07c91B7b27Da5c828c7eB752F7e4676b'
          REACT_APP_FEED_BBC_DAI_ADDR: '0x3fc25d9e5a583E96E626D921660b5Ef6ecC8A19E'

          REACT_APP_CONTRACT_DAO_GOVERNANCE_ADDR: '0x88C072c6B78a05D8Bbd8629fE7CA88287e12B211'
          REACT_APP_CONTRACT_DAO_BARN_ADDR: '0x59E2bC2E34EEeA09BfB99C2069Bfadf872D5F56f'
          REACT_APP_CONTRACT_DAO_REWARD_ADDR: '0xb21FC0d3C8C7550A1e4f1eC8017c1f098Ceb1A76'

          REACT_APP_DAO_ACTIVATION_THRESHOLD: 400000

          REACT_APP_TESTNET_COMP_FAUCETEER_ADDR: '0x916518711a75a98Ac00e8E3386d036F7eA56A484'
          REACT_APP_TESTNET_COMP_USDC_ADDR: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede'
          REACT_APP_TESTNET_COMP_DAI_ADDR: '0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa'
          REACT_APP_TESTNET_AAVE_FAUCETEER_ADDR: '0x600103d518cC5E8f3319D532eB4e5C268D32e604'
          REACT_APP_TESTNET_AAVE_USDC_ADDR: '0xe22da380ee6B445bb8273C81944ADEB6E8450422'
          REACT_APP_TESTNET_AAVE_DAI_ADDR: '0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD'
          REACT_APP_TESTNET_AAVE_USDT_ADDR: '0x13512979ADE267AB5100878E2e0f485B568328a4'

          REACT_APP_BASE_API_URL: 'https://testnet.api.barnbridge.com/'

      - name: Save artifacts
        uses: actions/upload-artifact@v2
        with:
          name: frontend-testnet
          path: build

      - name: Notify Slack success
        if: success()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          message_id: ${{ steps.slack.outputs.message_id }}
          channel_id: C01D16VJ84C
          status: BUILD SUCCESSFUL
          color: good

      - name: Notify Slack failure
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          message_id: ${{ steps.slack.outputs.message_id }}
          channel_id: C01D16VJ84C
          status: BUILD FAILED
          color: danger

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack
        if: success()
        id: slack
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: C01D16VJ84C
          status: DEPLOYMENT STARTED
          color: warning

      - name: Get artifacts
        uses: actions/download-artifact@v2
        with:
          name: frontend-testnet

      - name: Configure AWS credetials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy static site to S3
        run: ls -l && aws s3 sync . s3://testnet-testnetappbarnbridgecom-origin --delete

      - name: Invalidate CloudFront cache
        run: |
          #!/usr/bin/env bash
          set -euo pipefail

          CF_DIST_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[?Aliases.Items!=null] | [?contains(Aliases.Items, 'testnet.app.barnbridge.com')].Id | [0]" | tr -d \")
          echo "Clearing cache for ${CF_DIST_ID}..."
          CF_INVALIDATION_ID=$(aws cloudfront create-invalidation --distribution-id ${CF_DIST_ID} --paths "/*" | jq -r '.Invalidation.Id')
          while [ $(aws cloudfront get-invalidation --distribution-id ${CF_DIST_ID} --id ${CF_INVALIDATION_ID} | jq -r '.Invalidation.Status') != "Completed" ]; do
            echo "CF_DIST_ID=${CF_DIST_ID} CF_INVALIDATION_ID=${CF_INVALIDATION_ID}: Waiting for CloudFront cache invalidation to complete..."
            sleep 5
          done

      - name: Notify Slack success
        if: success()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          message_id: ${{ steps.slack.outputs.message_id }}
          channel_id: C01D16VJ84C
          status: DEPLOYMENT SUCCESSFUL
          color: good

      - name: Notify Slack failure
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          message_id: ${{ steps.slack.outputs.message_id }}
          channel_id: C01D16VJ84C
          status: DEPLOYMENT FAILED
          color: danger
